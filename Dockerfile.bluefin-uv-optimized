# OrbStack-Optimized Bluefin Trading Bot - UV Dependency Resolution
# Resolves gevent/greenlet conflicts with bluefin-v2-client 4.2.13

FROM python:3.12-slim AS builder

# Install UV with latest version for optimal dependency resolution
ENV UV_VERSION=0.7.13
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    libpython3-dev \
    autoconf \
    automake \
    libtool \
    pkg-config \
    git \
    && curl -LsSf https://astral.sh/uv/${UV_VERSION}/install.sh | sh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV PATH="/root/.local/bin:$PATH"

WORKDIR /app

# Copy optimized requirements
COPY requirements.bluefin-resolved.txt requirements.txt

# Strategic multi-stage UV installation to resolve dependency conflicts
RUN uv venv /app/.venv && \
    . /app/.venv/bin/activate && \
    echo "=== Stage 1: Core Python dependencies ===" && \
    uv pip install --no-cache-dir \
        "python-dotenv>=1.0.1" \
        "pydantic>=2.10.5" \
        "pydantic-settings>=2.7.0" \
        "click>=8.1.7" \
        "rich>=13.9.4" && \
    echo "=== Stage 2: Data processing stack ===" && \
    uv pip install --no-cache-dir \
        "numpy>=1.26.4" \
        "pandas>=2.3.0" \
        "scipy>=1.15.3" \
        "pandas-ta>=0.3.14b" && \
    echo "=== Stage 3: LangChain and OpenAI ===" && \
    uv pip install --no-cache-dir \
        "langchain>=0.3.10" \
        "langchain-core>=0.3.22" \
        "langchain-openai>=0.2.14" \
        "openai>=1.58.1" && \
    echo "=== Stage 4: Networking with compatible versions ===" && \
    uv pip install --no-cache-dir \
        "aiohttp>=3.9.0" \
        "aiofiles>=24.1.0" \
        "httpx>=0.28.1" \
        "backoff>=2.2.1" \
        "requests>=2.31.0" && \
    echo "=== Stage 5: Socket.IO compatible versions ===" && \
    uv pip install --no-cache-dir \
        "python-socketio[asyncio_client]>=5.8.0" \
        "python-engineio>=4.6.0" \
        "websockets>=12.0" \
        "websocket-client>=1.6.0" && \
    echo "=== Stage 6: Ethereum utilities ===" && \
    uv pip install --no-cache-dir \
        "eth-utils>=5.3.0" \
        "eth-typing>=5.2.1" \
        "eth-hash>=0.7.1" && \
    echo "=== Stage 7: Bluefin SDK without deps first ===" && \
    uv pip install --no-deps bluefin-v2-client==4.2.13 && \
    echo "=== Stage 8: Bluefin dependencies manually ===" && \
    uv pip install --no-cache-dir \
        "bip-utils>=2.9.0" \
        "cbor2>=5.6.0" \
        "coincurve>=21.0.0" \
        "crcmod>=1.7" \
        "ecdsa>=0.19.0" \
        "ed25519-blake2b>=1.4.0" && \
    echo "=== Final verification ===" && \
    python -c "import bluefin_v2_client; print('✅ Bluefin SDK ready')" && \
    python -c "import socketio; print('✅ Socket.IO ready')" && \
    python -c "import pandas; print('✅ Pandas ready')" && \
    python -c "import numpy; print('✅ NumPy ready')"

# Production stage - OrbStack optimized
FROM python:3.12-slim

# OrbStack-specific environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app" \
    VIRTUAL_ENV="/app/.venv" \
    UV_NO_CACHE=1 \
    EXCHANGE__EXCHANGE_TYPE=bluefin \
    SOCKETIO_ASYNC_MODE=aiohttp \
    DOCKER_BUILDKIT=1 \
    ORBSTACK_OPTIMIZED=true

# Install runtime dependencies for OrbStack
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user with proper permissions
RUN groupadd --gid 1000 botuser \
    && useradd --uid 1000 --gid 1000 --create-home --shell /bin/bash botuser

WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder --chown=botuser:botuser /app/.venv /app/.venv

# Copy application code with proper ownership
COPY --chown=botuser:botuser bot/ ./bot/
COPY --chown=botuser:botuser prompts/ ./prompts/
COPY --chown=botuser:botuser pyproject.toml ./

# Create required directories with proper permissions
RUN mkdir -p /app/config /app/logs /app/data /app/.cache \
    && chown -R botuser:botuser /app

# Create optimized health check
RUN echo '#!/bin/bash\npython -c "import bluefin_v2_client, socketio; exit(0)"' > /app/healthcheck.sh && \
    chmod +x /app/healthcheck.sh && \
    chown botuser:botuser /app/healthcheck.sh

# Switch to non-root user
USER botuser

# Health check optimized for OrbStack
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD ["/app/healthcheck.sh"]

# Default command for SUI-PERP live trading
CMD ["python", "-m", "bot.main", "live", "--symbol", "SUI-PERP", "--interval", "5m"]

# OrbStack optimization labels
LABEL orbstack.optimized="true" \
      orbstack.platform="arm64" \
      maintainer="bluefin-trading-bot" \
      version="2.0.0-orbstack"