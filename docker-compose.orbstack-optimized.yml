services:
  ai-trading-bot-optimized:
    build:
      context: .
      dockerfile: Dockerfile.bluefin-uv-optimized
      platforms:
        - linux/arm64  # OrbStack ARM64 optimization
      cache_from:
        - type=gha
        - type=registry,ref=ai-trading-bot:cache
      cache_to:
        - type=gha,mode=max
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: ai-trading-bot:bluefin-orbstack-optimized
    container_name: ai-trading-bot-bluefin-optimized
    
    # OrbStack network optimization
    network_mode: host
    
    # OrbStack-specific restart policy
    restart: unless-stopped
    
    # Live trading environment - SUI-PERP on Bluefin DEX mainnet
    environment:
      # Trading Configuration
      - SYSTEM__DRY_RUN=false
      - SYSTEM__ENVIRONMENT=production
      - EXCHANGE__EXCHANGE_TYPE=bluefin
      - TRADING__SYMBOL=SUI-PERP
      - TRADING__LEVERAGE=5
      - TRADING__INTERVAL=5m
      
      # Bluefin DEX Configuration
      - EXCHANGE__BLUEFIN_NETWORK=mainnet
      - EXCHANGE__CB_SANDBOX=false
      - BLUEFIN_FORCE_LIVE_MODE=true
      - SOCKETIO_ASYNC_MODE=aiohttp
      
      # Risk Management (Conservative)
      - MAX_POSITION_SIZE=0.01
      - STOP_LOSS_PERCENTAGE=2.0
      - MAX_DAILY_TRADES=10
      - RISK_PER_TRADE=0.01
      
      # OrbStack Performance Optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - UV_NO_CACHE=1
      - DOCKER_BUILDKIT=1
      - ORBSTACK_OPTIMIZED=true
      
      # Load sensitive data from .env file
      - LLM__OPENAI_API_KEY=${LLM__OPENAI_API_KEY}
      - EXCHANGE__BLUEFIN_PRIVATE_KEY=${EXCHANGE__BLUEFIN_PRIVATE_KEY}
      
      # OmniSearch Configuration
      - OMNISEARCH__ENABLED=true
      - OMNISEARCH__API_KEY=${OMNISEARCH__API_KEY:-}
      
      # Memory and Learning (Optional)
      - MCP_ENABLED=${MCP_ENABLED:-false}
      - MCP_SERVER_URL=${MCP_SERVER_URL:-http://localhost:8765}
    
    # OrbStack-optimized volume mounts
    volumes:
      - type: bind
        source: ./logs
        target: /app/logs
        consistency: delegated  # OrbStack performance optimization
      - type: bind
        source: ./data
        target: /app/data
        consistency: delegated
      - type: bind
        source: ./config
        target: /app/config
        consistency: delegated
      # Cache volume for better performance
      - ai-trading-cache:/app/.cache
    
    # Resource limits optimized for trading workload
    deploy:
      resources:
        limits:
          memory: 3G      # Trading requires significant memory for data processing
          cpus: '2.0'     # Dual core allocation for real-time processing
        reservations:
          memory: 1G      # Minimum memory guarantee
          cpus: '1.0'     # Minimum CPU guarantee
    
    # Comprehensive health check
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s  # Extended startup time for dependency loading
    
    # Security and user configuration
    user: "1000:1000"
    
    # OrbStack logging optimization
    logging:
      driver: "json-file"
      options:
        max-size: "50m"      # Larger logs for trading analysis
        max-file: "5"        # More log files for historical tracking
        compress: "true"     # Compress older logs
    
    # Container labels for management
    labels:
      - "traefik.enable=false"
      - "com.trading-bot.service=bluefin-dex"
      - "com.trading-bot.environment=production"
      - "com.trading-bot.symbol=SUI-PERP"
      - "orbstack.optimized=true"

  # Optional: MCP Memory Server for learning
  mcp-memory:
    image: python:3.12-slim
    container_name: mcp-memory-server
    profiles: ["memory"]  # Only run when explicitly enabled
    ports:
      - "8765:8765"
    environment:
      - MCP_MEMORY_RETENTION_DAYS=90
      - MCP_ENABLE_PATTERN_LEARNING=true
    volumes:
      - mcp-memory-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 30s
      timeout: 5s
      retries: 3

# OrbStack-optimized volumes
volumes:
  ai-trading-cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1G,uid=1000,gid=1000  # 1GB RAM disk for cache
  
  mcp-memory-data:
    driver: local

# OrbStack network configuration
networks:
  default:
    name: bluefin-trading-network
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"