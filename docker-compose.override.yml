# Docker Compose Override for Enhanced Service Management
# This file provides safer defaults and better service orchestration

services:
  # AI Trading Bot - Enhanced with better error handling
  ai-trading-bot:
    restart: unless-stopped
    environment:
      # Force paper trading mode for safety
      - SYSTEM__DRY_RUN=true
      - SYSTEM__ENVIRONMENT=development
      # Enhanced service discovery with fallbacks
      - BLUEFIN_SERVICE_URL=http://bluefin-service:8080
      - BLUEFIN_SERVICE_FALLBACK_URL=http://localhost:8081
      - OMNISEARCH__SERVER_URL=http://mcp-omnisearch:8767
      # MCP Memory disabled - backend removed
      - MCP_ENABLED=false
      # Enhanced WebSocket resilience
      - SYSTEM__WEBSOCKET_MAX_RETRIES=10
      - SYSTEM__WEBSOCKET_RETRY_DELAY=3
      - SYSTEM__WEBSOCKET_TIMEOUT=30
    depends_on:
      mcp-omnisearch:
        condition: service_healthy
        required: false
      bluefin-service:
        condition: service_started
        required: false
    healthcheck:
      test: ["CMD-SHELL", "/app/healthcheck.sh || exit 1"]
      interval: 45s
      timeout: 20s
      retries: 3
      start_period: 60s

  # Bluefin Service - Enhanced reliability
  bluefin-service:
    restart: unless-stopped
    environment:
      - BLUEFIN_SERVICE_RATE_LIMIT=50  # Conservative rate limiting
      - CONNECTION_TIMEOUT=45
      - READ_TIMEOUT=90
      - RETRY_ATTEMPTS=3
      - RETRY_BACKOFF=2
    healthcheck:
      test: ["CMD", "curl", "-f", "--connect-timeout", "10", "http://localhost:8080/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 30s


  # MCP OmniSearch - Enhanced reliability
  mcp-omnisearch:
    restart: unless-stopped
    environment:
      - MCP_SERVER_PORT=8767
      - NODE_ENV=production
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--timeout=5", "http://localhost:8767/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s


# Enhanced network configuration
networks:
  trading-network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
