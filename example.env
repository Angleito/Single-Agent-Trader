# AI TRADING BOT EXAMPLE ENVIRONMENT CONFIGURATION
# Copy or rename this file to `.env` in the project root and fill in your secrets.
# Do NOT commit real API keys to version control.

# ─── OPENAI / LLM ───────────────────────────
LLM__OPENAI_API_KEY=
# LLM__OPENAI_ORG_ID=

# ─── COINBASE – LEGACY ADVANCED-TRADE ───────
# EXCHANGE__CB_API_KEY=
# EXCHANGE__CB_API_SECRET=
# EXCHANGE__CB_PASSPHRASE=

# ─── COINBASE – CDP API KEYS (recommended) ─
# EXCHANGE__CDP_API_KEY_NAME=
# EXCHANGE__CDP_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----"

# ─── EXCHANGE SELECTION ─────────────────────
# Choose between "coinbase" or "bluefin"
EXCHANGE__EXCHANGE_TYPE=coinbase

# ─── BLUEFIN DEX CONFIGURATION ──────────────
# Your Sui wallet private key (hex format, without 0x prefix)
# EXCHANGE__BLUEFIN_PRIVATE_KEY=your_sui_wallet_private_key_here
# Bluefin network: "mainnet" or "testnet"
# EXCHANGE__BLUEFIN_NETWORK=mainnet

# ─── BOT / RUNTIME OPTIONS ─────────────────
# IMPORTANT: Trading Mode Control
# This is the SINGLE control for paper trading vs live trading
# SYSTEM__DRY_RUN=true  → Paper Trading Mode (safe, no real money) [DEFAULT]
# SYSTEM__DRY_RUN=false → Live Trading Mode (DANGER: uses real money!)
# 
# Paper Trading Mode features:
# - Simulated trades with virtual balance
# - Safe testing of strategies
# - No real money at risk
# - Full feature parity with live trading
SYSTEM__DRY_RUN=true
SYSTEM__ENVIRONMENT=development
SYSTEM__LOG_LEVEL=INFO
TRADING__SYMBOL=DOGE-USD 

# ─── REAL-TIME DASHBOARD INTEGRATION ──────────
# Enable WebSocket publishing for real-time dashboard monitoring
# SYSTEM__ENABLE_WEBSOCKET_PUBLISHING=false  → Disabled (default)
# SYSTEM__ENABLE_WEBSOCKET_PUBLISHING=true   → Enabled (publishes to dashboard)
#
# When enabled, the bot will publish real-time data to the dashboard:
# - Market data updates (price, volume)
# - Technical indicator calculations (VuManChu Cipher, RSI, etc.)
# - LLM trading decisions with confidence and reasoning
# - Trade execution events and order status
# - Position updates and P&L tracking
# - System status and health monitoring
#
SYSTEM__ENABLE_WEBSOCKET_PUBLISHING=false
# WebSocket URL: Use 'ws://dashboard-backend:8000/ws' in Docker, 'ws://localhost:8000/ws' for local dev
SYSTEM__WEBSOCKET_DASHBOARD_URL=ws://localhost:8000/ws
SYSTEM__WEBSOCKET_PUBLISH_INTERVAL=1.0
SYSTEM__WEBSOCKET_MAX_RETRIES=3
SYSTEM__WEBSOCKET_RETRY_DELAY=5
SYSTEM__WEBSOCKET_TIMEOUT=10
SYSTEM__WEBSOCKET_QUEUE_SIZE=100