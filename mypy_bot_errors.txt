Warning: --strict-concatenate is deprecated; use --extra-checks instead
bot/utils/typed_config.py:9:1: error: Explicit "Any" is not allowed
[explicit-any]
    def get_typed(obj: Any, attr: str, default: int) -> int: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:11:1: error: Explicit "Any" is not allowed
[explicit-any]
    def get_typed(obj: Any, attr: str, default: float) -> float: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:13:1: error: Explicit "Any" is not allowed
[explicit-any]
    def get_typed(obj: Any, attr: str, default: str) -> str: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:15:1: error: Explicit "Any" is not allowed
[explicit-any]
    def get_typed(obj: Any, attr: str, default: bool) -> bool: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:15:1: error: Overloaded function signature 4 will
never be matched: signature 1's parameter type(s) are the same or broader
[overload-cannot-match]
    def get_typed(obj: Any, attr: str, default: bool) -> bool: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:15:1: error: Overloaded function signature 4 will
never be matched: signature 2's parameter type(s) are the same or broader
[overload-cannot-match]
    def get_typed(obj: Any, attr: str, default: bool) -> bool: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:18:1: error: Explicit "Any" is not allowed
[explicit-any]
    def get_typed(obj: Any, attr: str, default: T) -> T:
    ^
bot/utils/typed_config.py:31:19: error: Expression has type "Any"  [misc]
        if isinstance(obj, dict):
                      ^~~
bot/utils/typed_config.py:34:17: error: Expression has type "Any"  [misc]
            value = getattr(obj, attr, default)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:49:20: error: Incompatible return value type (got
"int", expected "T")  [return-value]
                return int(float(str(value)))
                       ^~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:51:20: error: Incompatible return value type (got
"float", expected "T")  [return-value]
                return float(str(value))
                       ^~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:55:24: error: Incompatible return value type (got
"bool", expected "T")  [return-value]
                    return value.lower() in ("true", "1", "yes", "on")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:56:20: error: Incompatible return value type (got
"bool", expected "T")  [return-value]
                return bool(value)
                       ^~~~~~~~~~~
bot/utils/typed_config.py:58:20: error: Incompatible return value type (got
"str", expected "T")  [return-value]
                return str(value)
                       ^~~~~~~~~~
bot/utils/typed_config.py:60:16: error: Too many arguments for "object"
[call-arg]
            return target_type(value)
                   ^~~~~~~~~~~~~~~~~~
bot/utils/typed_config.py:65:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ensure_int(value: Any, default: int = 0) -> int:
    ^
bot/utils/typed_config.py:67:19: error: Expression has type "Any"  [misc]
        if isinstance(value, int):
                      ^~~~~
bot/utils/typed_config.py:70:30: error: Expression has type "Any"  [misc]
            return int(float(str(value)))
                                 ^~~~~
bot/utils/typed_config.py:75:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ensure_float(value: Any, default: float = 0.0) -> float:
    ^
bot/utils/typed_config.py:77:19: error: Expression has type "Any"  [misc]
        if isinstance(value, (int, float)):
                      ^~~~~
bot/utils/typed_config.py:80:26: error: Expression has type "Any"  [misc]
            return float(str(value))
                             ^~~~~
bot/utils/typed_config.py:85:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ensure_str(value: Any, default: str = "") -> str:
    ^
bot/utils/typed_config.py:87:8: error: Expression has type "Any"  [misc]
        if value is None:
           ^~~~~
bot/utils/typed_config.py:89:16: error: Expression has type "Any"  [misc]
        return str(value)
                   ^~~~~
bot/utils/log_format_parser.py:66:42: error: Argument 1 to "append" of "list"
has incompatible type "float"; expected "int"  [arg-type]
                            converted.append(float(str(arg)))
                                             ^~~~~~~~~~~~~~~
bot/utils/log_format_parser.py:68:42: error: Argument 1 to "append" of "list"
has incompatible type "str"; expected "int"  [arg-type]
                            converted.append(str(arg))
                                             ^~~~~~~~
bot/utils/log_format_parser.py:71:38: error: Argument 1 to "append" of "list"
has incompatible type "str"; expected "int"  [arg-type]
                        converted.append(str(arg))
                                         ^~~~~~~~
bot/types/stubs/psutil.pyi:68:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cpu_stats() -> Any: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:69:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cpu_times(percpu: bool = False) -> Any: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:70:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cpu_times_percent(interval: float = 0.1, percpu: bool = False) -> ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/psutil.pyi:71:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cpu_freq(percpu: bool = False) -> Any: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:115:1: error: Explicit "Any" is not allowed
[explicit-any]
    def disk_io_counters(
    ^
bot/types/stubs/psutil.pyi:120:1: error: Explicit "Any" is not allowed
[explicit-any]
    def net_io_counters(
    ^
bot/types/stubs/psutil.pyi:123:1: error: Explicit "Any" is not allowed
[explicit-any]
    def net_connections(kind: str = "inet") -> list[Any]: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:124:1: error: Explicit "Any" is not allowed
[explicit-any]
    def net_if_addrs() -> dict[str, list[Any]]: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:125:1: error: Explicit "Any" is not allowed
[explicit-any]
    def net_if_stats() -> dict[str, Any]: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:128:1: error: Explicit "Any" is not allowed
[explicit-any]
    def sensors_temperatures(fahrenheit: bool = False) -> dict[str, list[A...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/psutil.pyi:129:1: error: Explicit "Any" is not allowed
[explicit-any]
    def sensors_fans() -> dict[str, list[Any]]: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:130:1: error: Explicit "Any" is not allowed
[explicit-any]
    def sensors_battery() -> Any | None: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:134:1: error: Explicit "Any" is not allowed
[explicit-any]
    def users() -> list[Any]: ...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:139:1: error: Explicit "Any" is not allowed
[explicit-any]
    def process_iter(
    ^
bot/types/stubs/psutil.pyi:142:1: error: Explicit "Any" is not allowed
[explicit-any]
    def wait_procs(
    ^
bot/types/stubs/psutil.pyi:161:5: error: Explicit "Any" is not allowed
[explicit-any]
        def as_dict(
        ^
bot/types/stubs/psutil.pyi:167:5: error: Explicit "Any" is not allowed
[explicit-any]
        def uids(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:168:5: error: Explicit "Any" is not allowed
[explicit-any]
        def gids(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:171:5: error: Explicit "Any" is not allowed
[explicit-any]
        def ionice(self, ioclass: int | None = None, value: int | None = N...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/psutil.pyi:175:5: error: Explicit "Any" is not allowed
[explicit-any]
        def io_counters(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:176:5: error: Explicit "Any" is not allowed
[explicit-any]
        def num_ctx_switches(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:180:5: error: Explicit "Any" is not allowed
[explicit-any]
        def threads(self) -> list[Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:181:5: error: Explicit "Any" is not allowed
[explicit-any]
        def cpu_times(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:185:5: error: Explicit "Any" is not allowed
[explicit-any]
        def memory_info(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:186:5: error: Explicit "Any" is not allowed
[explicit-any]
        def memory_info_ex(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:187:5: error: Explicit "Any" is not allowed
[explicit-any]
        def memory_full_info(self) -> Any: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:189:5: error: Explicit "Any" is not allowed
[explicit-any]
        def memory_maps(self, grouped: bool = True) -> list[Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:190:5: error: Explicit "Any" is not allowed
[explicit-any]
        def open_files(self) -> list[Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/psutil.pyi:191:5: error: Explicit "Any" is not allowed
[explicit-any]
        def connections(self, kind: str = "inet") -> list[Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/pandas_ta.pyi:49:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:49:1: error: Argument 1 to "rsi" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:49:1: error: Explicit "Any" is not allowed
[explicit-any]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:58:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:58:1: error: Argument 1 to "rsi" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:58:1: error: Explicit "Any" is not allowed
[explicit-any]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:58:1: error: Overloaded function signature 2 will
never be matched: signature 1's parameter type(s) are the same or broader
[overload-cannot-match]
    def rsi(
    ^
bot/types/stubs/pandas_ta.pyi:69:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:69:1: error: Argument 1 to "ema" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:69:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:73:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:73:1: error: Argument 1 to "ema" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:73:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:73:1: error: Overloaded function signature 2 will
never be matched: signature 1's parameter type(s) are the same or broader
[overload-cannot-match]
    def ema(
    ^
bot/types/stubs/pandas_ta.pyi:82:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:82:1: error: Argument 1 to "sma" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:82:1: error: Explicit "Any" is not allowed
[explicit-any]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:86:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:86:1: error: Argument 1 to "sma" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:86:1: error: Explicit "Any" is not allowed
[explicit-any]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:86:1: error: Overloaded function signature 2 will
never be matched: signature 1's parameter type(s) are the same or broader
[overload-cannot-match]
    def sma(
    ^
bot/types/stubs/pandas_ta.pyi:95:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:95:1: error: Argument 1 to "rma" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:95:1: error: Explicit "Any" is not allowed
[explicit-any]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:99:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:99:1: error: Argument 1 to "rma" becomes "Any"
due to an unfollowed import  [no-any-unimported]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:99:1: error: Explicit "Any" is not allowed
[explicit-any]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:99:1: error: Overloaded function signature 2 will
never be matched: signature 1's parameter type(s) are the same or broader
[overload-cannot-match]
    def rma(
    ^
bot/types/stubs/pandas_ta.pyi:107:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def wma(
    ^
bot/types/stubs/pandas_ta.pyi:107:1: error: Argument 1 to "wma" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def wma(
    ^
bot/types/stubs/pandas_ta.pyi:107:1: error: Explicit "Any" is not allowed
[explicit-any]
    def wma(
    ^
bot/types/stubs/pandas_ta.pyi:115:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def hma(
    ^
bot/types/stubs/pandas_ta.pyi:115:1: error: Argument 1 to "hma" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def hma(
    ^
bot/types/stubs/pandas_ta.pyi:115:1: error: Explicit "Any" is not allowed
[explicit-any]
    def hma(
    ^
bot/types/stubs/pandas_ta.pyi:123:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def stoch(
    ^
bot/types/stubs/pandas_ta.pyi:123:1: error: Argument 1 to "stoch" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def stoch(
    ^
bot/types/stubs/pandas_ta.pyi:123:1: error: Argument 2 to "stoch" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def stoch(
    ^
bot/types/stubs/pandas_ta.pyi:123:1: error: Argument 3 to "stoch" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def stoch(
    ^
bot/types/stubs/pandas_ta.pyi:123:1: error: Explicit "Any" is not allowed
[explicit-any]
    def stoch(
    ^
bot/types/stubs/pandas_ta.pyi:135:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def stochrsi(
    ^
bot/types/stubs/pandas_ta.pyi:135:1: error: Argument 1 to "stochrsi" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def stochrsi(
    ^
bot/types/stubs/pandas_ta.pyi:135:1: error: Explicit "Any" is not allowed
[explicit-any]
    def stochrsi(
    ^
bot/types/stubs/pandas_ta.pyi:146:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def bbands(
    ^
bot/types/stubs/pandas_ta.pyi:146:1: error: Argument 1 to "bbands" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def bbands(
    ^
bot/types/stubs/pandas_ta.pyi:146:1: error: Explicit "Any" is not allowed
[explicit-any]
    def bbands(
    ^
bot/types/stubs/pandas_ta.pyi:156:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def atr(
    ^
bot/types/stubs/pandas_ta.pyi:156:1: error: Argument 1 to "atr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def atr(
    ^
bot/types/stubs/pandas_ta.pyi:156:1: error: Argument 2 to "atr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def atr(
    ^
bot/types/stubs/pandas_ta.pyi:156:1: error: Argument 3 to "atr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def atr(
    ^
bot/types/stubs/pandas_ta.pyi:156:1: error: Explicit "Any" is not allowed
[explicit-any]
    def atr(
    ^
bot/types/stubs/pandas_ta.pyi:167:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def adx(
    ^
bot/types/stubs/pandas_ta.pyi:167:1: error: Argument 1 to "adx" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def adx(
    ^
bot/types/stubs/pandas_ta.pyi:167:1: error: Argument 2 to "adx" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def adx(
    ^
bot/types/stubs/pandas_ta.pyi:167:1: error: Argument 3 to "adx" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def adx(
    ^
bot/types/stubs/pandas_ta.pyi:167:1: error: Explicit "Any" is not allowed
[explicit-any]
    def adx(
    ^
bot/types/stubs/pandas_ta.pyi:180:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def macd(
    ^
bot/types/stubs/pandas_ta.pyi:180:1: error: Argument 1 to "macd" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def macd(
    ^
bot/types/stubs/pandas_ta.pyi:180:1: error: Explicit "Any" is not allowed
[explicit-any]
    def macd(
    ^
bot/types/stubs/pandas_ta.pyi:190:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def obv(
    ^
bot/types/stubs/pandas_ta.pyi:190:1: error: Argument 1 to "obv" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def obv(
    ^
bot/types/stubs/pandas_ta.pyi:190:1: error: Argument 2 to "obv" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def obv(
    ^
bot/types/stubs/pandas_ta.pyi:190:1: error: Explicit "Any" is not allowed
[explicit-any]
    def obv(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Argument 1 to "mfi" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Argument 2 to "mfi" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Argument 3 to "mfi" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Argument 4 to "mfi" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:198:1: error: Explicit "Any" is not allowed
[explicit-any]
    def mfi(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Argument 1 to "vwap" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Argument 2 to "vwap" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Argument 3 to "vwap" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Argument 4 to "vwap" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:210:1: error: Explicit "Any" is not allowed
[explicit-any]
    def vwap(
    ^
bot/types/stubs/pandas_ta.pyi:221:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def linreg(
    ^
bot/types/stubs/pandas_ta.pyi:221:1: error: Argument 1 to "linreg" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def linreg(
    ^
bot/types/stubs/pandas_ta.pyi:221:1: error: Explicit "Any" is not allowed
[explicit-any]
    def linreg(
    ^
bot/types/stubs/pandas_ta.pyi:229:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def willr(
    ^
bot/types/stubs/pandas_ta.pyi:229:1: error: Argument 1 to "willr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def willr(
    ^
bot/types/stubs/pandas_ta.pyi:229:1: error: Argument 2 to "willr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def willr(
    ^
bot/types/stubs/pandas_ta.pyi:229:1: error: Argument 3 to "willr" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def willr(
    ^
bot/types/stubs/pandas_ta.pyi:229:1: error: Explicit "Any" is not allowed
[explicit-any]
    def willr(
    ^
bot/types/stubs/pandas_ta.pyi:239:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def cci(
    ^
bot/types/stubs/pandas_ta.pyi:239:1: error: Argument 1 to "cci" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cci(
    ^
bot/types/stubs/pandas_ta.pyi:239:1: error: Argument 2 to "cci" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cci(
    ^
bot/types/stubs/pandas_ta.pyi:239:1: error: Argument 3 to "cci" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cci(
    ^
bot/types/stubs/pandas_ta.pyi:239:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cci(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Argument 1 to "cmf" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Argument 2 to "cmf" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Argument 3 to "cmf" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Argument 4 to "cmf" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:250:1: error: Explicit "Any" is not allowed
[explicit-any]
    def cmf(
    ^
bot/types/stubs/pandas_ta.pyi:261:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def stdev(
    ^
bot/types/stubs/pandas_ta.pyi:261:1: error: Argument 1 to "stdev" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def stdev(
    ^
bot/types/stubs/pandas_ta.pyi:261:1: error: Explicit "Any" is not allowed
[explicit-any]
    def stdev(
    ^
bot/types/stubs/pandas_ta.pyi:270:1: error: Return type becomes "Any | Any" due
to an unfollowed import  [no-any-unimported]
    def zscore(
    ^
bot/types/stubs/pandas_ta.pyi:270:1: error: Argument 1 to "zscore" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def zscore(
    ^
bot/types/stubs/pandas_ta.pyi:270:1: error: Explicit "Any" is not allowed
[explicit-any]
    def zscore(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
    def ha(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Argument 1 to "ha" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def ha(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Argument 2 to "ha" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def ha(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Argument 3 to "ha" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def ha(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Argument 4 to "ha" becomes
"Any | Any" due to an unfollowed import  [no-any-unimported]
    def ha(
    ^
bot/types/stubs/pandas_ta.pyi:279:1: error: Explicit "Any" is not allowed
[explicit-any]
    def ha(
    ^
bot/types/stubs/ccxt.pyi:45:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(self, config: dict[str, Any] | None = None) -> None: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/ccxt.pyi:48:5: error: Explicit "Any" is not allowed
[explicit-any]
        def load_markets(self, reload: bool = False) -> dict[str, Any]: .....
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/ccxt.pyi:49:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_markets(
        ^
bot/types/stubs/ccxt.pyi:52:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_ticker(
        ^
bot/types/stubs/ccxt.pyi:55:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_tickers(
        ^
bot/types/stubs/ccxt.pyi:58:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_order_book(
        ^
bot/types/stubs/ccxt.pyi:64:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_trades(
        ^
bot/types/stubs/ccxt.pyi:71:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_ohlcv(
        ^
bot/types/stubs/ccxt.pyi:81:5: error: Explicit "Any" is not allowed
[explicit-any]
        def create_order(
        ^
bot/types/stubs/ccxt.pyi:90:5: error: Explicit "Any" is not allowed
[explicit-any]
        def cancel_order(
        ^
bot/types/stubs/ccxt.pyi:93:5: error: Explicit "Any" is not allowed
[explicit-any]
        def cancel_all_orders(
        ^
bot/types/stubs/ccxt.pyi:96:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_order(
        ^
bot/types/stubs/ccxt.pyi:99:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_orders(
        ^
bot/types/stubs/ccxt.pyi:106:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_open_orders(
        ^
bot/types/stubs/ccxt.pyi:113:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_closed_orders(
        ^
bot/types/stubs/ccxt.pyi:120:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_my_trades(
        ^
bot/types/stubs/ccxt.pyi:129:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_balance(self, params: dict[str, Any] | None = None) -> d...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/ccxt.pyi:130:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_positions(
        ^
bot/types/stubs/ccxt.pyi:133:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_position(
        ^
bot/types/stubs/ccxt.pyi:136:5: error: Explicit "Any" is not allowed
[explicit-any]
        def set_leverage(
        ^
bot/types/stubs/ccxt.pyi:142:5: error: Explicit "Any" is not allowed
[explicit-any]
        def set_position_mode(
        ^
bot/types/stubs/ccxt.pyi:148:5: error: Explicit "Any" is not allowed
[explicit-any]
        def set_margin_mode(
        ^
bot/types/stubs/ccxt.pyi:156:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_deposits(
        ^
bot/types/stubs/ccxt.pyi:163:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch_withdrawals(
        ^
bot/types/stubs/ccxt.pyi:170:5: error: Explicit "Any" is not allowed
[explicit-any]
        def withdraw(
        ^
bot/types/stubs/ccxt.pyi:180:5: error: Explicit "Any" is not allowed
[explicit-any]
        def parse_ticker(
        ^
bot/types/stubs/ccxt.pyi:183:5: error: Explicit "Any" is not allowed
[explicit-any]
        def parse_trade(
        ^
bot/types/stubs/ccxt.pyi:186:5: error: Explicit "Any" is not allowed
[explicit-any]
        def parse_order(
        ^
bot/types/stubs/ccxt.pyi:189:5: error: Explicit "Any" is not allowed
[explicit-any]
        def parse_ohlcv(
        ^
bot/types/stubs/ccxt.pyi:192:5: error: Explicit "Any" is not allowed
[explicit-any]
        def parse_balance(self, response: dict[str, Any]) -> dict[str, Any...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/ccxt.pyi:201:5: error: Explicit "Any" is not allowed
[explicit-any]
        def fetch(
        ^
bot/types/services.py:92:5: error: Explicit "Any" is not allowed
[explicit-any]
        metadata: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:105:5: error: Explicit "Any" is not allowed
[explicit-any]
        auth: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:167:5: error: Explicit "Any" is not allowed
[explicit-any]
        metadata: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:251:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/services.py:261:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            self.details = kwargs
                           ^~~~~~
bot/types/services.py:289:1: error: Explicit "Any" is not allowed
[explicit-any]
    def is_valid_endpoint(value: Any) -> TypeGuard[ServiceEndpoint]:
    ^
bot/types/services.py:299:23: error: Expression has type "Any"  [misc]
        if not isinstance(value, dict):
                          ^~~~~
bot/types/services.py:335:1: error: Explicit "Any" is not allowed
[explicit-any]
    def is_healthy_service(health: Any) -> TypeGuard[ServiceHealth]:
    ^
bot/types/services.py:345:23: error: Expression has type "Any"  [misc]
        if not isinstance(health, dict):
                          ^~~~~~
bot/types/services.py:351:5: error: Returning Any from function declared to
return "bool"  [no-any-return]
        return health["status"] == "healthy"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:351:12: error: Expression has type "Any"  [misc]
        return health["status"] == "healthy"
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:354:1: error: Explicit "Any" is not allowed
[explicit-any]
    def is_docker_service(obj: Any) -> TypeGuard[DockerService]:
    ^
bot/types/services.py:365:17: error: Expression has type "Any"  [misc]
            hasattr(obj, "name")
                    ^~~
bot/types/services.py:366:21: error: Expression has type "Any"  [misc]
            and hasattr(obj, "endpoint")
                        ^~~
bot/types/services.py:367:21: error: Expression has type "Any"  [misc]
            and hasattr(obj, "required")
                        ^~~
bot/types/services.py:368:21: error: Expression has type "Any"  [misc]
            and hasattr(obj, "health_check")
                        ^~~
bot/types/services.py:369:21: error: Expression has type "Any"  [misc]
            and hasattr(obj, "is_ready")
                        ^~~
bot/types/services.py:370:22: error: Expression type contains "Any" (has type
"Any | None")  [misc]
            and callable(getattr(obj, "health_check", None))
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:370:30: error: Expression has type "Any"  [misc]
            and callable(getattr(obj, "health_check", None))
                                 ^~~
bot/types/services.py:371:22: error: Expression type contains "Any" (has type
"Any | None")  [misc]
            and callable(getattr(obj, "is_ready", None))
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:371:30: error: Expression has type "Any"  [misc]
            and callable(getattr(obj, "is_ready", None))
                                 ^~~
bot/types/services.py:375:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_service_config(config: Any) -> ServiceConfig:
    ^
bot/types/services.py:388:23: error: Expression has type "Any"  [misc]
        if not isinstance(config, dict):
                          ^~~~~~
bot/types/services.py:392:36: error: Expression type contains "Any" (has type
"set[Any]")  [misc]
        missing_keys = required_keys - set(config.keys())
                                       ^~~~~~~~~~~~~~~~~~
bot/types/services.py:433:1: error: Explicit "Any" is not allowed
[explicit-any]
    def create_health_status(
    ^
bot/types/services.py:452: error: Unused "type: ignore" comment
[unused-ignore]
            "status": status.value,  # type: ignore
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services.py:457:9: error: Expression type contains "Any" (has type
"ServiceHealth")  [misc]
            health["error"] = error
            ^~~~~~
bot/types/services.py:460:9: error: Expression type contains "Any" (has type
"ServiceHealth")  [misc]
            health["response_time_ms"] = response_time_ms
            ^~~~~~
bot/types/services.py:462:8: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
        if metadata:
           ^~~~~~~~
bot/types/services.py:463:9: error: Expression type contains "Any" (has type
"ServiceHealth")  [misc]
            health["metadata"] = metadata
            ^~~~~~
bot/types/services.py:463:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            health["metadata"] = metadata
                                 ^~~~~~~~
bot/types/services.py:465:12: error: Expression type contains "Any" (has type
"ServiceHealth")  [misc]
        return health
               ^~~~~~
bot/types/services.py:468:1: error: Explicit "Any" is not allowed
[explicit-any]
    def create_endpoint(
    ^
bot/types/services.py:497:19: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if key in kwargs:
                      ^~~~~~
bot/types/services.py:500:12: error: Expression type contains "Any" (has type
"ServiceEndpoint")  [misc]
        return endpoint
               ^~~~~~~~
bot/types/services.py:531:5: error: Explicit "Any" is not allowed
[explicit-any]
        metadata: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/exceptions.py:21:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/exceptions.py:31:24: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
            self.context = context or {}
                           ^~~~~~~
bot/types/exceptions.py:31:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            self.context = context or {}
                           ^~~~~~~~~~~~~
bot/types/exceptions.py:35:5: error: Explicit "Any" is not allowed
[explicit-any]
        def get_error_context(self) -> dict[str, Any]:
        ^
bot/types/exceptions.py:37:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/types/exceptions.py:41:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "context": self.context,
                ^~~~~~~~~~~~~~~~~~~~~~~
bot/types/exceptions.py:41:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "context": self.context,
                           ^~~~~~~~~~~~
bot/types/exceptions.py:51:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:51:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/exceptions.py:59:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:61:30: error: Expression has type "Any"  [misc]
            self.invalid_value = invalid_value
                                 ^~~~~~~~~~~~~
bot/types/exceptions.py:64:5: error: Explicit "Any" is not allowed
[explicit-any]
        def get_error_context(self) -> dict[str, Any]:
        ^
bot/types/exceptions.py:65:19: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            context = super().get_error_context()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/exceptions.py:66:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            context.update(
            ^~~~~~~
bot/types/exceptions.py:67:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                {
                ^
bot/types/exceptions.py:70:25: error: Expression has type "Any"  [misc]
                        str(self.invalid_value) if self.invalid_value is n...
                            ^~~~~~~~~~~~~~~~~~
bot/types/exceptions.py:75:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return context
                   ^~~~~~~
bot/types/exceptions.py:81:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:87:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:94:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:102:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:114:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:121:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:130:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:137:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:145:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:151:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:158:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(self, message: str, **kwargs):
        ^
bot/types/exceptions.py:159:56: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, recoverable=False, **kwargs)
                                                           ^~~~~~
bot/types/exceptions.py:165:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:173:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:182:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:189:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:202:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:210:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:219:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:226:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:243:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:250:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, **kwargs)
                                        ^~~~~~
bot/types/exceptions.py:258:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
bot/types/exceptions.py:265:56: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            super().__init__(message, recoverable=False, **kwargs)
                                                           ^~~~~~
bot/types/base_types.py:86:5: error: Explicit "Any" is not allowed
[explicit-any]
        details: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/base_types.py:142:5: error: Explicit "Any" is not allowed
[explicit-any]
        details: NotRequired[dict[str, Any]]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:16:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/stubs/docker.pyi:26:5: error: Explicit "Any" is not allowed
[explicit-any]
        def version(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:27:5: error: Explicit "Any" is not allowed
[explicit-any]
        def info(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:30:5: error: Explicit "Any" is not allowed
[explicit-any]
        def from_env(cls, **kwargs: Any) -> DockerClient: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:35:5: error: Explicit "Any" is not allowed
[explicit-any]
        def run(
        ^
bot/types/stubs/docker.pyi:53:5: error: Explicit "Any" is not allowed
[explicit-any]
        def create(
        ^
bot/types/stubs/docker.pyi:60:5: error: Explicit "Any" is not allowed
[explicit-any]
        def list(
        ^
bot/types/stubs/docker.pyi:70:5: error: Explicit "Any" is not allowed
[explicit-any]
        def prune(self, filters: dict[str, Any] | None = None) -> dict[str...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/docker.pyi:79:5: error: Explicit "Any" is not allowed
[explicit-any]
        attrs: dict[str, Any]
        ^~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:83:5: error: Explicit "Any" is not allowed
[explicit-any]
        def attach(
        ^
bot/types/stubs/docker.pyi:125:5: error: Explicit "Any" is not allowed
[explicit-any]
        def start(self, **kwargs: Any) -> None: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:126:5: error: Explicit "Any" is not allowed
[explicit-any]
        def stats(
        ^
bot/types/stubs/docker.pyi:130:5: error: Explicit "Any" is not allowed
[explicit-any]
        def top(self, ps_args: str | None = None) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:132:5: error: Explicit "Any" is not allowed
[explicit-any]
        def update(self, **kwargs: Any) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:133:5: error: Explicit "Any" is not allowed
[explicit-any]
        def wait(
        ^
bot/types/stubs/docker.pyi:141:5: error: Explicit "Any" is not allowed
[explicit-any]
        def build(
        ^
bot/types/stubs/docker.pyi:155:5: error: Explicit "Any" is not allowed
[explicit-any]
        def list(
        ^
bot/types/stubs/docker.pyi:161:5: error: Explicit "Any" is not allowed
[explicit-any]
        def load(self, data: bytes | Any) -> builtins.list[Image]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:162:5: error: Explicit "Any" is not allowed
[explicit-any]
        def pull(
        ^
bot/types/stubs/docker.pyi:180:5: error: Explicit "Any" is not allowed
[explicit-any]
        def search(
        ^
bot/types/stubs/docker.pyi:183:5: error: Explicit "Any" is not allowed
[explicit-any]
        def prune(self, filters: dict[str, Any] | None = None) -> dict[str...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/docker.pyi:191:5: error: Explicit "Any" is not allowed
[explicit-any]
        attrs: dict[str, Any]
        ^~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:193:5: error: Explicit "Any" is not allowed
[explicit-any]
        def history(self) -> list[dict[str, Any]]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:205:5: error: Explicit "Any" is not allowed
[explicit-any]
        def create(
        ^
bot/types/stubs/docker.pyi:222:5: error: Explicit "Any" is not allowed
[explicit-any]
        def list(
        ^
bot/types/stubs/docker.pyi:228:5: error: Explicit "Any" is not allowed
[explicit-any]
        def prune(self, filters: dict[str, Any] | None = None) -> dict[str...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/docker.pyi:237:5: error: Explicit "Any" is not allowed
[explicit-any]
        attrs: dict[str, Any]
        ^~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:255:5: error: Explicit "Any" is not allowed
[explicit-any]
        def create(
        ^
bot/types/stubs/docker.pyi:263:5: error: Explicit "Any" is not allowed
[explicit-any]
        def list(self, filters: dict[str, Any] | None = None) -> builtins....
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/docker.pyi:264:5: error: Explicit "Any" is not allowed
[explicit-any]
        def prune(self, filters: dict[str, Any] | None = None) -> dict[str...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/docker.pyi:272:5: error: Explicit "Any" is not allowed
[explicit-any]
        attrs: dict[str, Any]
        ^~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/docker.pyi:285:1: error: Explicit "Any" is not allowed
[explicit-any]
    def from_env(**kwargs: Any) -> DockerClient:
    ^
bot/types/stubs/coinbase_advanced_py.pyi:9:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def __init__(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:19:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_accounts(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:22:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_account(self, account_uuid: str) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:23:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def create_order(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:31:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def cancel_orders(self, order_ids: list[str]) -> dict[str, Any]: ....
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:32:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_order(self, order_id: str) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:33:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def list_orders(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:42:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_fills(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:51:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_products(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:58:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_product(self, product_id: str) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:59:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_product_candles(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:67:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_market_trades(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:70:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_best_bid_ask(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:73:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_product_book(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:80:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def preview_order(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:90:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def allocate_portfolio(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:98:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_futures_balance_summary(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:99:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def list_futures_positions(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:100:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def get_futures_position(self, product_id: str) -> dict[str, Any]:...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/coinbase_advanced_py.pyi:101:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def schedule_futures_sweep(self, usd_amount: str) -> dict[str, Any...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/coinbase_advanced_py.pyi:102:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def list_futures_sweeps(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:103:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def cancel_pending_futures_sweep(self) -> dict[str, Any]: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/coinbase_advanced_py.pyi:108:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def __init__(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:118:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def subscribe(
        ^
bot/types/stubs/coinbase_advanced_py.pyi:121:5: error: Explicit "Any" is not
allowed  [explicit-any]
        def unsubscribe(
        ^
bot/validation/balance_validator.py:70:5: error: Explicit "Any" is not allowed
[explicit-any]
        metadata: dict[str, Any] = field(default_factory=dict)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:94:9: error: Explicit "Any" is not allowed
[explicit-any]
            self.balance_history: list[BalanceChangeRecord] = []
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:115:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def validate_balance_range(
        ^
bot/validation/balance_validator.py:173:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:181:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def validate_balance_change(
        ^
bot/validation/balance_validator.py:204:20: error: Expression type contains
"Any" (has type "dict[str, Any] | None")  [misc]
            metadata = metadata or {}
                       ^~~~~~~~
bot/validation/balance_validator.py:204:32: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
            metadata = metadata or {}
                                   ^~
bot/validation/balance_validator.py:220:29: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                change_record = BalanceChangeRecord(
                                ^
bot/validation/balance_validator.py:227:26: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                    metadata=metadata,
                             ^~~~~~~~
bot/validation/balance_validator.py:297:13: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                self.balance_history.append(change_record)
                ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:297:41: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                self.balance_history.append(change_record)
                                            ^~~~~~~~~~~~~
bot/validation/balance_validator.py:308:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:319:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def validate_balance_precision(
        ^
bot/validation/balance_validator.py:385:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:393:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def detect_balance_anomalies(self, current_balance: Decimal) -> di...
        ^
bot/validation/balance_validator.py:441:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:444:17: error: Expression type contains
"Any" (has type "tuple[str, list[Any]]")  [misc]
                    "anomalies": [],
                    ^~~~~~~~~~~~~~~
bot/validation/balance_validator.py:444:30: error: Expression type contains
"Any" (has type "list[Any]")  [misc]
                    "anomalies": [],
                                 ^~
bot/validation/balance_validator.py:466:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def validate_margin_calculation(
        ^
bot/validation/balance_validator.py:563:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:589:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def validate_balance_reconciliation(
        ^
bot/validation/balance_validator.py:645:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:672:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def comprehensive_balance_validation(
        ^
bot/validation/balance_validator.py:698:13: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                validation_results["range"] = self.validate_balance_range(
                ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:698:43: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                validation_results["range"] = self.validate_balance_range(
                                              ^
bot/validation/balance_validator.py:703:13: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                validation_results["precision"] = self.validate_balance_pr...
                ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:703:47: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                validation_results["precision"] = self.validate_balance_pr...
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~...
bot/validation/balance_validator.py:707:17: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                    validation_results["change"] = self.validate_balance_c...
                    ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:707:48: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                    validation_results["change"] = self.validate_balance_c...
                                                   ^
bot/validation/balance_validator.py:708:64: error: Expression type contains
"Any" (has type "dict[str, Any] | None")  [misc]
    ...                   previous_balance, balance, operation_type, metadata
                                                                     ^~~~~~~~
bot/validation/balance_validator.py:712:13: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                validation_results["anomaly"] = self.detect_balance_anomal...
                ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:712:45: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                validation_results["anomaly"] = self.detect_balance_anomal...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/validation/balance_validator.py:716:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:719:17: error: Expression type contains
"Any" (has type "tuple[str, dict[str, dict[str, Any]]]")  [misc]
                    "validations": validation_results,
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:719:32: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                    "validations": validation_results,
                                   ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:726:13: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                validation_results["error"] = {
                ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:726:43: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                validation_results["error"] = {
                                              ^
bot/validation/balance_validator.py:733:20: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                return {
                       ^
bot/validation/balance_validator.py:736:17: error: Expression type contains
"Any" (has type "tuple[str, dict[str, dict[str, Any]]]")  [misc]
                    "validations": validation_results,
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:736:32: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                    "validations": validation_results,
                                   ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:737:17: error: Expression type contains
"Any" (has type "tuple[str, dict[str, Any]]")  [misc]
                    "error": validation_results["error"],
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:737:26: error: Expression type contains
"Any" (has type "dict[str, dict[str, Any]]")  [misc]
                    "error": validation_results["error"],
                             ^~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:737:26: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
                    "error": validation_results["error"],
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:741:5: error: Explicit "Any" is not allowed
 [explicit-any]
        def get_validation_statistics(self) -> dict[str, Any]:
        ^
bot/validation/balance_validator.py:754:26: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
            recent_changes = [
                             ^
bot/validation/balance_validator.py:754:26: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            recent_changes = [
                             ^
bot/validation/balance_validator.py:755:13: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                record
                ^~~~~~
bot/validation/balance_validator.py:756:27: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                for record in self.balance_history
                              ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:757:16: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                if record.timestamp >= datetime.now(UTC) - timedelta(hours...
                   ^~~~~~
bot/validation/balance_validator.py:760:16: error: Expression type contains
"Any" (has type "dict[str, Any]")  [misc]
            return {
                   ^
bot/validation/balance_validator.py:765:46: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                "balance_changes_last_hour": len(recent_changes),
                                                 ^~~~~~~~~~~~~~
bot/validation/balance_validator.py:766:41: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                "balance_history_size": len(self.balance_history),
                                            ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:767:13: error: Expression type contains
"Any" (has type "tuple[str, dict[Any, Any]]")  [misc]
                "thresholds": {
                ^
bot/validation/balance_validator.py:767:27: error: Expression type contains
"Any" (has type "dict[Any, Any]")  [misc]
                "thresholds": {
                              ^
bot/validation/balance_validator.py:788:13: error: Statement is unreachable
[unreachable]
                return Decimal("0.00") if not is_crypto else Decimal("0.00...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/validation/balance_validator.py:802:16: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            if len(self.balance_history) < 3:
                   ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:809:26: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
            recent_changes = [
                             ^
bot/validation/balance_validator.py:809:26: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            recent_changes = [
                             ^
bot/validation/balance_validator.py:810:13: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                record
                ^~~~~~
bot/validation/balance_validator.py:811:27: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                for record in self.balance_history[-5:]
                              ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:812:16: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                if record.timestamp >= recent_window
                   ^~~~~~
bot/validation/balance_validator.py:815:16: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            if len(recent_changes) >= 3:
                   ^~~~~~~~~~~~~~
bot/validation/balance_validator.py:817:35: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                significant_changes = [
                                      ^
bot/validation/balance_validator.py:817:35: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                significant_changes = [
                                      ^
bot/validation/balance_validator.py:818:17: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                    change
                    ^~~~~~
bot/validation/balance_validator.py:819:31: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                    for change in recent_changes
                                  ^~~~~~~~~~~~~~
bot/validation/balance_validator.py:820:20: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                    if change.change_pct > self.thresholds.anomaly_thresho...
                       ^~~~~~
bot/validation/balance_validator.py:823:20: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                if len(significant_changes) >= 3:
                       ^~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:825:54: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
    ...                f"Rapid successive changes: {len(significant_changes)}...
                                                        ^~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:834:16: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            if len(self.balance_history) < 5:
                   ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:838:27: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
            recent_balances = [record.new_balance for record in self.balan...
                              ^
bot/validation/balance_validator.py:838:61: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
    ...ent_balances = [record.new_balance for record in self.balance_history[...
                                                        ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:845:29: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                recent_trades = [
                                ^
bot/validation/balance_validator.py:845:29: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                recent_trades = [
                                ^
bot/validation/balance_validator.py:846:17: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                    record
                    ^~~~~~
bot/validation/balance_validator.py:847:31: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                    for record in self.balance_history[-3:]
                                  ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:848:20: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                    if record.operation_type in ["trade", "fee", "settleme...
                       ^~~~~~
bot/validation/balance_validator.py:850:16: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                if recent_trades:
                   ^~~~~~~~~~~~~
bot/validation/balance_validator.py:857:16: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            if len(self.balance_history) < 4:
                   ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:861:26: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            recent_changes = self.balance_history[-4:]
                             ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:864:9: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
            for change in recent_changes:
            ^
bot/validation/balance_validator.py:864:23: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
            for change in recent_changes:
                          ^~~~~~~~~~~~~~
bot/validation/balance_validator.py:865:16: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                if change.change_amount > 0:
                   ^~~~~~
bot/validation/balance_validator.py:867:18: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                elif change.change_amount < 0:
                     ^~~~~~
bot/validation/balance_validator.py:883:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def _cleanup_old_history(self):
        ^
bot/validation/balance_validator.py:883:5: note: Use "-> None" if function does not return a value
bot/validation/balance_validator.py:887:32: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
            self.balance_history = [
                                   ^
bot/validation/balance_validator.py:888:13: error: Expression type contains
"Any" (has type "BalanceChangeRecord")  [misc]
                record for record in self.balance_history if record.timest...
                ^~~~~~
bot/validation/balance_validator.py:888:34: error: Expression type contains
"Any" (has type "list[BalanceChangeRecord]")  [misc]
                record for record in self.balance_history if record.timest...
                                     ^~~~~~~~~~~~~~~~~~~~
bot/validation/balance_validator.py:891:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def _log_validation_error(self, message: str, context: str, error_...
        ^
bot/utils/type_safe_logging.py:14:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def ensure_numeric(*indices: int):
    ^
bot/utils/type_safe_logging.py:40:2: error: Untyped decorator makes function
"log_reconnect" untyped  [misc]
    @ensure_numeric(0, 1, 2, 3)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:54:2: error: Untyped decorator makes function
"log_service_wait" untyped  [misc]
    @ensure_numeric(0)
     ^~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:60:2: error: Untyped decorator makes function
"log_service_start" untyped  [misc]
    @ensure_numeric(1)
     ^~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:66:2: error: Untyped decorator makes function
"log_service_available" untyped  [misc]
    @ensure_numeric(1)
     ^~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:74:2: error: Untyped decorator makes function
"log_service_count" untyped  [misc]
    @ensure_numeric(0, 1)
     ^~~~~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:82:2: error: Untyped decorator makes function
"log_required_failures" untyped  [misc]
    @ensure_numeric(0)
     ^~~~~~~~~~~~~~~~~
bot/utils/type_safe_logging.py:88:2: error: Untyped decorator makes function
"log_startup_attempt" untyped  [misc]
    @ensure_numeric(0, 1)
     ^~~~~~~~~~~~~~~~~~~~
bot/utils/symbol_utils.py:184:71: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...et_bluefin_symbol_info(symbol: str, network: str = "mainnet") -> dict:
                                                                        ^
bot/utils/symbol_utils.py:232:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def __init__(self, market_symbols_enum=None, network: str = "mainn...
        ^
bot/utils/symbol_utils.py:246:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def to_market_symbol(self, symbol: str):
        ^
bot/utils/symbol_utils.py:272:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _try_direct_attribute_access(self, base: str):
        ^
bot/utils/symbol_utils.py:281:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _try_case_variations(self, base: str):
        ^
bot/utils/symbol_utils.py:291:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _try_enum_introspection(self, base: str):
        ^
bot/utils/symbol_utils.py:308:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _matches_symbol(self, attr_value, base: str) -> bool:
        ^
bot/utils/symbol_utils.py:337:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def from_market_symbol(self, market_symbol) -> str:
        ^
bot/types/guards.py:16:1: error: Explicit "Any" is not allowed  [explicit-any]
    def is_valid_price(value: Any) -> TypeGuard[Price]:
    ^
bot/types/guards.py:27:12: error: Expression has type "Any"  [misc]
            if value is None:
               ^~~~~
bot/types/guards.py:29:37: error: Expression has type "Any"  [misc]
            decimal_value = Decimal(str(value))
                                        ^~~~~
bot/types/guards.py:35:1: error: Explicit "Any" is not allowed  [explicit-any]
    def is_valid_quantity(value: Any) -> TypeGuard[Quantity]:
    ^
bot/types/guards.py:46:12: error: Expression has type "Any"  [misc]
            if value is None:
               ^~~~~
bot/types/guards.py:48:37: error: Expression has type "Any"  [misc]
            decimal_value = Decimal(str(value))
                                        ^~~~~
bot/types/guards.py:54:1: error: Explicit "Any" is not allowed  [explicit-any]
    def is_valid_percentage(value: Any) -> TypeGuard[Percentage]:
    ^
bot/types/guards.py:65:12: error: Expression has type "Any"  [misc]
            if value is None:
               ^~~~~
bot/types/guards.py:67:29: error: Expression has type "Any"  [misc]
            float_value = float(value)
                                ^~~~~
bot/types/guards.py:73:1: error: Explicit "Any" is not allowed  [explicit-any]
    def is_valid_symbol(value: Any) -> TypeGuard[Symbol]:
    ^
bot/types/guards.py:83:23: error: Expression has type "Any"  [misc]
        if not isinstance(value, str):
                          ^~~~~
bot/types/guards.py:102:1: error: Explicit "Any" is not allowed  [explicit-any]
    def ensure_decimal(value: Any, field_name: str = "value") -> Decimal:
    ^
bot/types/guards.py:117:23: error: Expression has type "Any"  [misc]
            if isinstance(value, Decimal):
                          ^~~~~
bot/types/guards.py:119:28: error: Expression has type "Any"  [misc]
            return Decimal(str(value))
                               ^~~~~
bot/types/guards.py:124:27: error: Expression has type "Any"  [misc]
                invalid_value=value,
                              ^~~~~
bot/types/guards.py:129:1: error: Explicit "Any" is not allowed  [explicit-any]
    def ensure_positive_decimal(value: Any, field_name: str = "value") -> ...
    ^
bot/types/guards.py:143:36: error: Expression has type "Any"  [misc]
        decimal_value = ensure_decimal(value, field_name)
                                       ^~~~~
bot/types/guards.py:149:27: error: Expression has type "Any"  [misc]
                invalid_value=value,
                              ^~~~~
bot/types/guards.py:156:1: error: Explicit "Any" is not allowed  [explicit-any]
    def is_valid_timestamp(value: Any) -> TypeGuard[datetime]:
    ^
bot/types/guards.py:166:23: error: Expression has type "Any"  [misc]
        return isinstance(value, datetime)
                          ^~~~~
bot/types/guards.py:169:1: error: Explicit "Any" is not allowed  [explicit-any]
    def validate_dict_keys(
    ^
bot/types/guards.py:183:23: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
        if not isinstance(data, dict):
                          ^~~~
bot/types/guards.py:196:27: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
                invalid_value=list(missing_keys),
                              ^~~~~~~~~~~~~~~~~~
bot/types/guards.py:207:31: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
                    invalid_value=list(extra_keys),
                                  ^~~~~~~~~~~~~~~~
bot/types/guards.py:212:1: error: Explicit "Any" is not allowed  [explicit-any]
    def validate_enum_value(
    ^
bot/types/guards.py:229:23: error: Expression has type "Any"  [misc]
        if not isinstance(value, str):
                          ^~~~~
bot/types/guards.py:233:27: error: Expression has type "Any"  [misc]
                invalid_value=value,
                              ^~~~~
bot/strategy/optimized_prompt.py:73:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/optimized_prompt.py:73:5: note: Use "-> None" if function does not return a value
bot/strategy/optimized_prompt.py:252:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/optimized_prompt.py:252:5: note: Use "-> None" if function does not return a value
bot/strategy/optimized_prompt.py:261:36: error: Need type annotation for
"performance_metrics"  [var-annotated]
            self.performance_metrics = {
                                       ^
bot/strategy/optimized_prompt.py:369:9: error: Returning Any from function
declared to return "float"  [no-any-return]
            return sum(recent_times) / len(recent_times)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/optimized_prompt.py:371:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_performance_metrics(
        ^
bot/risk/risk_metrics.py:116:13: error: Returning Any from function declared to
return "float"  [no-any-return]
                return loss_percentage
                ^~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:26:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/risk/emergency_stop.py:26:5: note: Use "-> None" if function does not return a value
bot/risk/emergency_stop.py:59:62: error: Argument 3 to "_evaluate_trigger" of
"EmergencyStopManager" has incompatible type "object"; expected "dict[str, Any]"
 [arg-type]
                if self._evaluate_trigger(trigger_name, metrics, config):
                                                                 ^~~~~~
bot/risk/emergency_stop.py:77:13: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return recent_loss >= threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:82:13: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return failure_count >= threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:87:13: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return error_count >= threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:92:13: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return margin_usage >= threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:97:13: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return consecutive_losses >= threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/risk/emergency_stop.py:101:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def trigger_emergency_stop(self, reason: str, trigger_value: Any =...
        ^
bot/risk/emergency_stop.py:132:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def reset_emergency_stop(self, manual_reset: bool = False):
        ^
bot/risk/circuit_breaker.py:66:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_success(self):
        ^
bot/risk/circuit_breaker.py:66:5: note: Use "-> None" if function does not return a value
bot/risk/circuit_breaker.py:76:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_failure(
        ^
bot/indicators/divergence_detector.py:35: error: Argument 5 to "__init__"
becomes "Any | None" due to an unfollowed import  [no-any-unimported]
    class FractalPoint:
    ^~~~~~~~~~~~~~~~~~
bot/indicators/divergence_detector.py:35: error: Argument 4 to "__mypy-replace"
becomes "Any | None" due to an unfollowed import  [no-any-unimported]
    class FractalPoint:
    ^~~~~~~~~~~~~~~~~~
bot/indicators/divergence_detector.py:41:5: error: Type of variable becomes
"Any | None" due to an unfollowed import  [no-any-unimported]
        timestamp: pd.Timestamp | None = None
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/divergence_detector.py:107:5: error: Argument 2 to
"find_fractals" becomes "Any" due to an unfollowed import  [no-any-unimported]
        def find_fractals(
        ^
bot/indicators/divergence_detector.py:231:5: error: Argument 2 to
"detect_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def detect_regular_divergences(
        ^
bot/indicators/divergence_detector.py:231:5: error: Argument 3 to
"detect_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def detect_regular_divergences(
        ^
bot/indicators/divergence_detector.py:273:5: error: Argument 4 to
"_detect_bullish_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_bullish_regular_divergences(
        ^
bot/indicators/divergence_detector.py:273:5: error: Argument 5 to
"_detect_bullish_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_bullish_regular_divergences(
        ^
bot/indicators/divergence_detector.py:336:5: error: Argument 4 to
"_detect_bearish_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_bearish_regular_divergences(
        ^
bot/indicators/divergence_detector.py:336:5: error: Argument 5 to
"_detect_bearish_regular_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_bearish_regular_divergences(
        ^
bot/indicators/divergence_detector.py:397:5: error: Argument 2 to
"detect_hidden_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def detect_hidden_divergences(
        ^
bot/indicators/divergence_detector.py:397:5: error: Argument 3 to
"detect_hidden_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def detect_hidden_divergences(
        ^
bot/indicators/divergence_detector.py:433:5: error: Argument 4 to
"_detect_hidden_bullish_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_hidden_bullish_divergences(
        ^
bot/indicators/divergence_detector.py:433:5: error: Argument 5 to
"_detect_hidden_bullish_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_hidden_bullish_divergences(
        ^
bot/indicators/divergence_detector.py:491:5: error: Argument 4 to
"_detect_hidden_bearish_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_hidden_bearish_divergences(
        ^
bot/indicators/divergence_detector.py:491:5: error: Argument 5 to
"_detect_hidden_bearish_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _detect_hidden_bearish_divergences(
        ^
bot/indicators/divergence_detector.py:591:5: error: Argument 4 to
"_calculate_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_confidence(
        ^
bot/indicators/divergence_detector.py:591:5: error: Argument 5 to
"_calculate_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_confidence(
        ^
bot/indicators/divergence_detector.py:658:5: error: Argument 2 to
"analyze_multiple_timeframes" becomes "dict[str, tuple[Any, Any]]" due to an
unfollowed import  [no-any-unimported]
        def analyze_multiple_timeframes(
        ^
bot/exchange/futures_utils.py:12:5: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, client):
        ^
bot/exchange/futures_utils.py:150:13: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                return selected_contract["symbol"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/futures_utils.py:163:13: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                return self._current_contract
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_fee_calculator.py:43:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/exchange/bluefin_fee_calculator.py:43:5: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_fee_calculator.py:69:5: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _ensure_decimal(self, value, default: Decimal) -> Decimal:
        ^
bot/exchange/bluefin_fee_calculator.py:99:13: error: Statement is unreachable
[unreachable]
                return Decimal(0)
                ^~~~~~~~~~~~~~~~~
bot/exchange/bluefin_fee_calculator.py:102:13: error: Statement is unreachable
[unreachable]
                try:
                ^
bot/utils/secure_logging.py:342:25: error: Missing type parameters for generic
type "dict"  [type-arg]
        additional_context: dict | None = None,
                            ^
bot/strategy/llm/prompt_manager.py:247:41: error: Missing type parameters for
generic type "set"  [type-arg]
        def get_template_variables(self) -> set:
                                            ^
bot/trading_types.py:20: error: Explicit "Any" is not allowed  [explicit-any]
    class TradeAction(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:95: error: Explicit "Any" is not allowed  [explicit-any]
    class Position(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:116: error: Explicit "Any" is not allowed  [explicit-any]
    class MarketData(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:130: error: Explicit "Any" is not allowed  [explicit-any]
    class IndicatorData(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:157: error: Explicit "Any" is not allowed  [explicit-any]
    class MarketState(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:188: error: Explicit "Any" is not allowed  [explicit-any]
    class Order(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:205: error: Explicit "Any" is not allowed  [explicit-any]
    class MarginInfo(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:227: error: Explicit "Any" is not allowed  [explicit-any]
    class FuturesAccountInfo(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:257: error: Explicit "Any" is not allowed  [explicit-any]
    class FuturesOrder(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:281: error: Explicit "Any" is not allowed  [explicit-any]
    class RiskMetrics(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:301: error: Explicit "Any" is not allowed  [explicit-any]
    class CashTransferRequest(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:313: error: Explicit "Any" is not allowed  [explicit-any]
    class FuturesMarketState(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:334: error: Explicit "Any" is not allowed  [explicit-any]
    class StablecoinDominance(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:348:1: error: Explicit "Any" is not allowed
[explicit-any]
    OHLCV = dict[str, Any]  # Raw OHLCV data from exchange
    ^~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:351:1: error: Explicit "Any" is not allowed
[explicit-any]
    MarketSnapshot = dict[str, Any]  # Complete market snapshot
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/trading_types.py:352:1: error: Explicit "Any" is not allowed
[explicit-any]
    FuturesSnapshot = dict[str, Any]  # Futures-specific market snapshot
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/market_making_config.py:85:5: error: Function is missing a type annotation
[no-untyped-def]
        def validate_spread_hierarchy(cls, v, info):
        ^
bot/types/market_data.py:72: error: Explicit "Any" is not allowed
[explicit-any]
    class CandleData(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:96:38: error: Expression type contains "Any" (has type
"tuple[type[datetime], Callable[[Any], Any]]")  [misc]
            json_encoders={Decimal: str, datetime: lambda v: v.isoformat()...
                                         ^
bot/types/market_data.py:96:48: error: Expression type contains "Any" (has type
"Callable[[Any], Any]")  [misc]
            json_encoders={Decimal: str, datetime: lambda v: v.isoformat()...
                                                   ^
bot/types/market_data.py:96:58: error: Expression has type "Any"  [misc]
    ...      json_encoders={Decimal: str, datetime: lambda v: v.isoformat()},
                                                              ^~~~~~~~~~~~~
bot/types/market_data.py:155:16: error: Expression type contains "Any" (has
type "bool | Any")  [misc]
                if v.as_tuple().exponent < -8:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:155:40: error: Unsupported operand types for <
("Literal['n']" and "int")  [operator]
                if v.as_tuple().exponent < -8:
                                           ^~
bot/types/market_data.py:155:40: error: Unsupported operand types for <
("Literal['N']" and "int")  [operator]
                if v.as_tuple().exponent < -8:
                                           ^~
bot/types/market_data.py:155:40: error: Unsupported operand types for <
("Literal['F']" and "int")  [operator]
                if v.as_tuple().exponent < -8:
                                           ^~
bot/types/market_data.py:155:40: note: Left operand is of type "Literal['n', 'N', 'F'] | int"
bot/types/market_data.py:189: error: Explicit "Any" is not allowed
[explicit-any]
    class TickerData(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:259: error: Explicit "Any" is not allowed
[explicit-any]
    class OrderBookLevel(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:271: error: Explicit "Any" is not allowed
[explicit-any]
    class OrderBook(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:362: error: Explicit "Any" is not allowed
[explicit-any]
    class TradeExecution(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:387: error: Explicit "Any" is not allowed
[explicit-any]
    class MarketDepth(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:431:16: error: Incompatible return value type (got
"tuple[Volume | Literal[0], Volume | Literal[0]]", expected
"tuple[Decimal, Decimal]")  [return-value]
            return bid_liquidity, ask_liquidity
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:434: error: Explicit "Any" is not allowed
[explicit-any]
    class MarketDataStatus(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:500:17: error: Unsupported operand types for <
("float" and "None")  [operator]
                and self.get_success_rate() > 95.0
                    ^
bot/types/market_data.py:500:17: note: Left operand is of type "float | None"
bot/types/market_data.py:533: error: Explicit "Any" is not allowed
[explicit-any]
    class AggregatedMarketData(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:604:9: error: Returning Any from function declared to
return "float | None"  [no-any-return]
            return variance**0.5
            ^~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:604:16: error: Expression has type "Any"  [misc]
            return variance**0.5
                   ^~~~~~~~~~~~~
bot/types/market_data.py:608:27: error: Function "builtins.any" is not valid as
a type  [valid-type]
    def is_valid_price(value: any) -> bool:
                              ^
bot/types/market_data.py:608:27: note: Perhaps you meant "typing.Any" instead of "any"?
bot/types/market_data.py:612:16: error: Expression type contains "Any" (has
type "bool | Any")  [misc]
            return price > 0 and price.as_tuple().exponent >= -8
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:612:59: error: Unsupported operand types for >=
("Literal['n']" and "int")  [operator]
            return price > 0 and price.as_tuple().exponent >= -8
                                                              ^~
bot/types/market_data.py:612:59: error: Unsupported operand types for >=
("Literal['N']" and "int")  [operator]
            return price > 0 and price.as_tuple().exponent >= -8
                                                              ^~
bot/types/market_data.py:612:59: error: Unsupported operand types for >=
("Literal['F']" and "int")  [operator]
            return price > 0 and price.as_tuple().exponent >= -8
                                                              ^~
bot/types/market_data.py:612:59: note: Left operand is of type "Literal['n', 'N', 'F'] | int"
bot/types/market_data.py:617:28: error: Function "builtins.any" is not valid as
a type  [valid-type]
    def is_valid_volume(value: any) -> bool:
                               ^
bot/types/market_data.py:617:28: note: Perhaps you meant "typing.Any" instead of "any"?
bot/types/market_data.py:626:31: error: Function "builtins.any" is not valid as
a type  [valid-type]
    def is_valid_timestamp(value: any) -> bool:
                                  ^
bot/types/market_data.py:626:31: note: Perhaps you meant "typing.Any" instead of "any"?
bot/types/market_data.py:629:16: error: any? has no attribute "tzinfo"
[attr-defined]
            return value.tzinfo is not None
                   ^~~~~~~~~~~~
bot/types/market_data.py:629:16: error: Expression has type "Any"  [misc]
            return value.tzinfo is not None
                   ^~~~~~~~~~~~
bot/types/market_data.py:630:5: error: Statement is unreachable  [unreachable]
        if isinstance(value, (int, float)):
        ^
bot/types/market_data.py:653:5: error: Need type annotation for "current_group"
(hint: "current_group: list[<type>] = ...")  [var-annotated]
        current_group = []
        ^~~~~~~~~~~~~
bot/types/market_data.py:655:39: error: Expression type contains "Any" (has
type "Callable[[Any], Any]")  [misc]
        for candle in sorted(candles, key=lambda x: x.timestamp):
                                          ^
bot/types/market_data.py:655:49: error: Expression has type "Any"  [misc]
        for candle in sorted(candles, key=lambda x: x.timestamp):
                                                    ^~~~~~~~~~~
bot/types/market_data.py:656:16: error: Expression type contains "Any" (has
type "list[Any]")  [misc]
            if not current_group:
                   ^~~~~~~~~~~~~
bot/types/market_data.py:675:28: error: Argument "volume" to "CandleData" has
incompatible type "Decimal | Literal[0]"; expected "Decimal"  [arg-type]
                        volume=sum(c.volume for c in current_group),
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/market_data.py:691:20: error: Argument "volume" to "CandleData" has
incompatible type "Decimal | Literal[0]"; expected "Decimal"  [arg-type]
                volume=sum(c.volume for c in current_group),
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:35: error: Explicit "Any" is not allowed  [explicit-any]
    class ExchangeConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:147: error: Explicit "Any" is not allowed  [explicit-any]
    class TradingConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:247: error: Explicit "Any" is not allowed  [explicit-any]
    class RiskConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:323: error: Explicit "Any" is not allowed  [explicit-any]
    class SystemConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:382: error: Explicit "Any" is not allowed  [explicit-any]
    class APIKeyConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:422: error: Explicit "Any" is not allowed  [explicit-any]
    class WebSocketConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:470: error: Explicit "Any" is not allowed  [explicit-any]
    class CompleteConfig(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:579:26: error: Expression has type "Any"  [misc]
            keys_to_remove = [k for k, v in section.items() if v is None]
                             ^
bot/types/config.py:579:26: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            keys_to_remove = [k for k, v in section.items() if v is None]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/config.py:579:41: error: "object" has no attribute "items"
[attr-defined]
            keys_to_remove = [k for k, v in section.items() if v is None]
                                            ^~~~~~~~~~~~~
bot/types/config.py:580:9: error: Expression has type "Any"  [misc]
            for key in keys_to_remove:
            ^
bot/types/config.py:580:20: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            for key in keys_to_remove:
                       ^~~~~~~~~~~~~~
bot/types/config.py:581:13: error: "object" has no attribute "__delitem__"
[attr-defined]
                del section[key]
                ^
bot/types/config.py:581:13: error: Expression has type "Any"  [misc]
                del section[key]
                ^
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "ExchangeConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "TradingConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "RiskConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "SystemConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "APIKeyConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/types/config.py:583:29: error: Argument 1 to "CompleteConfig" has
incompatible type "**dict[str, object]"; expected "WebSocketConfig"  [arg-type]
        return CompleteConfig(**config_data)
                                ^~~~~~~~~~~
bot/trading/lot.py:25:5: error: Function is missing a return type annotation
[no-untyped-def]
        def __post_init__(self):
        ^
bot/trading/lot.py:25:5: note: Use "-> None" if function does not return a value
bot/validation/decorators.py:29:1: error: Explicit "Any" is not allowed
[explicit-any]
    F = TypeVar("F", bound=Callable[..., Any])
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:32:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_balance(
    ^
bot/validation/decorators.py:60:5: error: Explicit "Any" is not allowed
[explicit-any]
        def decorator(func: F) -> F:
        ^
bot/validation/decorators.py:61:10: error: Expression type contains "Any" (has
type "_Wrapper[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:61:10: error: Expression type contains "Any" (has
type "Callable[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^
bot/validation/decorators.py:61:26: error: Expression type contains "Any" (has
type "F")  [misc]
            @functools.wraps(func)
                             ^~~~
bot/validation/decorators.py:62:9: error: Function is missing a type annotation
 [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:62:9: error: Type of decorated function contains
type "Any"
("_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
[misc]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:67:36: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                if balance_arg_name in kwargs:
                                       ^~~~~~
bot/validation/decorators.py:68:33: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    balance_value = kwargs[balance_arg_name]
                                    ^~~~~~
bot/validation/decorators.py:68:33: error: Expression has type "Any"  [misc]
                    balance_value = kwargs[balance_arg_name]
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:72:41: error: Expression type contains "Any" (has
type "F")  [misc]
                    sig = inspect.signature(func)
                                            ^~~~
bot/validation/decorators.py:77:40: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        if arg_index < len(args):
                                           ^~~~
bot/validation/decorators.py:78:41: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                            balance_value = args[arg_index]
                                            ^~~~
bot/validation/decorators.py:80:16: error: Expression type contains "Any" (has
type "Any | None")  [misc]
                if balance_value is None:
                   ^~~~~~~~~~~~~
bot/validation/decorators.py:90:25: error: Expression has type "Any"  [misc]
                            balance_value, balance_arg_name
                            ^~~~~~~~~~~~~
bot/validation/decorators.py:93:56: error: Expression has type "Any"  [misc]
    ...              validated_balance = ensure_decimal(balance_value, balanc...
                                                        ^~~~~~~~~~~~~
bot/validation/decorators.py:107:40: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    if balance_arg_name in kwargs:
                                           ^~~~~~
bot/validation/decorators.py:108:21: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                        kwargs[balance_arg_name] = validated_balance
                        ^~~~~~
bot/validation/decorators.py:110:28: error: Incompatible types in assignment
(expression has type "list[Any]", variable has type "tuple[Any, ...]")
[assignment]
                        args = list(args)
                               ^~~~~~~~~~
bot/validation/decorators.py:110:33: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        args = list(args)
                                    ^~~~
bot/validation/decorators.py:111:21: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        args[arg_index] = validated_balance
                        ^~~~
bot/validation/decorators.py:111:21: error: Unsupported target for indexed
assignment ("tuple[Any, ...]")  [index]
                        args[arg_index] = validated_balance
                        ^~~~~~~~~~~~~~~
bot/validation/decorators.py:112:34: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        args = tuple(args)
                                     ^~~~
bot/validation/decorators.py:114:20: error: Expression type contains "Any" (has
type "type[ValidationError]")  [misc]
                except ValidationError as e:
                       ^~~~~~~~~~~~~~~
bot/validation/decorators.py:116:38: error: Expression type contains "Any" (has
type "type[BalanceValidationError]")  [misc]
                    if not isinstance(e, BalanceValidationError):
                                         ^~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:120:39: error: Expression has type "Any"  [misc]
                            invalid_value=balance_value,
                                          ^~~~~~~~~~~~~
bot/validation/decorators.py:125:20: error: Expression has type "Any"  [misc]
                return func(*args, **kwargs)
                       ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:125:26: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                return func(*args, **kwargs)
                             ^~~~
bot/validation/decorators.py:125:34: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                return func(*args, **kwargs)
                                     ^~~~~~
bot/validation/decorators.py:127:16: error: Expression type contains "Any" (has
type "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
 [misc]
            return wrapper  # type: ignore[return-value]
                   ^~~~~~~
bot/validation/decorators.py:127:16: note: Error code "misc" not covered by "type: ignore" comment
bot/validation/decorators.py:129:12: error: Expression type contains "Any" (has
type "Callable[[F], F]")  [misc]
        return decorator
               ^~~~~~~~~
bot/validation/decorators.py:132:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_trade_action(
    ^
bot/validation/decorators.py:160:5: error: Explicit "Any" is not allowed
[explicit-any]
        def decorator(func: F) -> F:
        ^
bot/validation/decorators.py:161:10: error: Expression type contains "Any" (has
type "_Wrapper[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:161:10: error: Expression type contains "Any" (has
type "Callable[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^
bot/validation/decorators.py:161:26: error: Expression type contains "Any" (has
type "F")  [misc]
            @functools.wraps(func)
                             ^~~~
bot/validation/decorators.py:162:9: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:162:9: error: Type of decorated function contains
type "Any"
("_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
[misc]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:167:41: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                if trade_action_arg_name in kwargs:
                                            ^~~~~~
bot/validation/decorators.py:168:38: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    trade_action_value = kwargs[trade_action_arg_name]
                                         ^~~~~~
bot/validation/decorators.py:168:38: error: Expression has type "Any"  [misc]
                    trade_action_value = kwargs[trade_action_arg_name]
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:172:41: error: Expression type contains "Any" (has
type "F")  [misc]
                    sig = inspect.signature(func)
                                            ^~~~
bot/validation/decorators.py:177:40: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        if arg_index < len(args):
                                           ^~~~
bot/validation/decorators.py:178:46: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                            trade_action_value = args[arg_index]
                                                 ^~~~
bot/validation/decorators.py:181:16: error: Expression type contains "Any" (has
type "Any | None")  [misc]
                if trade_action_value is None:
                   ^~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:183:28: error: Expression has type "Any"  [misc]
                        return func(*args, **kwargs)
                               ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:183:34: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        return func(*args, **kwargs)
                                     ^~~~
bot/validation/decorators.py:183:42: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                        return func(*args, **kwargs)
                                             ^~~~~~
bot/validation/decorators.py:190:31: error: Expression has type "Any"  [misc]
                if not isinstance(trade_action_value, TradeAction):
                                  ^~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:192:57: error: Expression type contains "Any" (has
type "type[Any]")  [misc]
    ...             f"Expected TradeAction object, got {type(trade_action_val...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:192:62: error: Expression has type "Any"  [misc]
    ...        f"Expected TradeAction object, got {type(trade_action_value)._...
                                                        ^~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:194:39: error: Expression has type "Any"  [misc]
                        invalid_value=str(trade_action_value),
                                          ^~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:230:20: error: Expression has type "Any"  [misc]
                return func(*args, **kwargs)
                       ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:230:26: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                return func(*args, **kwargs)
                             ^~~~
bot/validation/decorators.py:230:34: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                return func(*args, **kwargs)
                                     ^~~~~~
bot/validation/decorators.py:232:16: error: Expression type contains "Any" (has
type "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
 [misc]
            return wrapper  # type: ignore[return-value]
                   ^~~~~~~
bot/validation/decorators.py:232:16: note: Error code "misc" not covered by "type: ignore" comment
bot/validation/decorators.py:234:12: error: Expression type contains "Any" (has
type "Callable[[F], F]")  [misc]
        return decorator
               ^~~~~~~~~
bot/validation/decorators.py:237:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_position(
    ^
bot/validation/decorators.py:265:5: error: Explicit "Any" is not allowed
[explicit-any]
        def decorator(func: F) -> F:
        ^
bot/validation/decorators.py:266:10: error: Expression type contains "Any" (has
type "_Wrapper[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:266:10: error: Expression type contains "Any" (has
type "Callable[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^
bot/validation/decorators.py:266:26: error: Expression type contains "Any" (has
type "F")  [misc]
            @functools.wraps(func)
                             ^~~~
bot/validation/decorators.py:267:9: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:267:9: error: Type of decorated function contains
type "Any"
("_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
[misc]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:272:37: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                if position_arg_name in kwargs:
                                        ^~~~~~
bot/validation/decorators.py:273:34: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    position_value = kwargs[position_arg_name]
                                     ^~~~~~
bot/validation/decorators.py:273:34: error: Expression has type "Any"  [misc]
                    position_value = kwargs[position_arg_name]
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:277:41: error: Expression type contains "Any" (has
type "F")  [misc]
                    sig = inspect.signature(func)
                                            ^~~~
bot/validation/decorators.py:282:40: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        if arg_index < len(args):
                                           ^~~~
bot/validation/decorators.py:283:42: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                            position_value = args[arg_index]
                                             ^~~~
bot/validation/decorators.py:286:16: error: Expression type contains "Any" (has
type "Any | None")  [misc]
                if position_value is None:
                   ^~~~~~~~~~~~~~
bot/validation/decorators.py:288:28: error: Expression has type "Any"  [misc]
                        return func(*args, **kwargs)
                               ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:288:34: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        return func(*args, **kwargs)
                                     ^~~~
bot/validation/decorators.py:288:42: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                        return func(*args, **kwargs)
                                             ^~~~~~
bot/validation/decorators.py:295:31: error: Expression has type "Any"  [misc]
                if not isinstance(position_value, Position):
                                  ^~~~~~~~~~~~~~
bot/validation/decorators.py:297:54: error: Expression type contains "Any" (has
type "type[Any]")  [misc]
    ...                f"Expected Position object, got {type(position_value)....
                                                        ^~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:297:59: error: Expression has type "Any"  [misc]
    ...           f"Expected Position object, got {type(position_value).__nam...
                                                        ^~~~~~~~~~~~~~
bot/validation/decorators.py:299:39: error: Expression has type "Any"  [misc]
                        invalid_value=str(position_value),
                                          ^~~~~~~~~~~~~~
bot/validation/decorators.py:339:20: error: Expression has type "Any"  [misc]
                return func(*args, **kwargs)
                       ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:339:26: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                return func(*args, **kwargs)
                             ^~~~
bot/validation/decorators.py:339:34: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                return func(*args, **kwargs)
                                     ^~~~~~
bot/validation/decorators.py:341:16: error: Expression type contains "Any" (has
type "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
 [misc]
            return wrapper  # type: ignore[return-value]
                   ^~~~~~~
bot/validation/decorators.py:341:16: note: Error code "misc" not covered by "type: ignore" comment
bot/validation/decorators.py:343:12: error: Expression type contains "Any" (has
type "Callable[[F], F]")  [misc]
        return decorator
               ^~~~~~~~~
bot/validation/decorators.py:346:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_percentage(
    ^
bot/validation/decorators.py:376:5: error: Explicit "Any" is not allowed
[explicit-any]
        def decorator(func: F) -> F:
        ^
bot/validation/decorators.py:377:10: error: Expression type contains "Any" (has
type "_Wrapper[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:377:10: error: Expression type contains "Any" (has
type "Callable[[VarArg(Any), KwArg(Any)], Any]")  [misc]
            @functools.wraps(func)
             ^
bot/validation/decorators.py:377:26: error: Expression type contains "Any" (has
type "F")  [misc]
            @functools.wraps(func)
                             ^~~~
bot/validation/decorators.py:378:9: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:378:9: error: Type of decorated function contains
type "Any"
("_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
[misc]
            def wrapper(*args, **kwargs):
            ^
bot/validation/decorators.py:383:39: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                if percentage_arg_name in kwargs:
                                          ^~~~~~
bot/validation/decorators.py:384:36: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    percentage_value = kwargs[percentage_arg_name]
                                       ^~~~~~
bot/validation/decorators.py:384:36: error: Expression has type "Any"  [misc]
                    percentage_value = kwargs[percentage_arg_name]
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:388:41: error: Expression type contains "Any" (has
type "F")  [misc]
                    sig = inspect.signature(func)
                                            ^~~~
bot/validation/decorators.py:393:40: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        if arg_index < len(args):
                                           ^~~~
bot/validation/decorators.py:394:44: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                            percentage_value = args[arg_index]
                                               ^~~~
bot/validation/decorators.py:397:16: error: Expression type contains "Any" (has
type "Any | None")  [misc]
                if percentage_value is None:
                   ^~~~~~~~~~~~~~~~
bot/validation/decorators.py:399:28: error: Expression has type "Any"  [misc]
                        return func(*args, **kwargs)
                               ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:399:34: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                        return func(*args, **kwargs)
                                     ^~~~
bot/validation/decorators.py:399:42: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                        return func(*args, **kwargs)
                                             ^~~~~~
bot/validation/decorators.py:407:37: error: Expression has type "Any"  [misc]
                    float_value = float(percentage_value)
                                        ^~~~~~~~~~~~~~~~
bot/validation/decorators.py:412:35: error: Expression has type "Any"  [misc]
                        invalid_value=percentage_value,
                                      ^~~~~~~~~~~~~~~~
bot/validation/decorators.py:425:39: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                if percentage_arg_name in kwargs:
                                          ^~~~~~
bot/validation/decorators.py:426:17: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                    kwargs[percentage_arg_name] = float_value
                    ^~~~~~
bot/validation/decorators.py:428:24: error: Incompatible types in assignment
(expression has type "list[Any]", variable has type "tuple[Any, ...]")
[assignment]
                    args = list(args)
                           ^~~~~~~~~~
bot/validation/decorators.py:428:29: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                    args = list(args)
                                ^~~~
bot/validation/decorators.py:429:17: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                    args[arg_index] = float_value
                    ^~~~
bot/validation/decorators.py:429:17: error: Unsupported target for indexed
assignment ("tuple[Any, ...]")  [index]
                    args[arg_index] = float_value
                    ^~~~~~~~~~~~~~~
bot/validation/decorators.py:430:30: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                    args = tuple(args)
                                 ^~~~
bot/validation/decorators.py:432:20: error: Expression has type "Any"  [misc]
                return func(*args, **kwargs)
                       ^~~~~~~~~~~~~~~~~~~~~
bot/validation/decorators.py:432:26: error: Expression type contains "Any" (has
type "tuple[Any, ...]")  [misc]
                return func(*args, **kwargs)
                             ^~~~
bot/validation/decorators.py:432:34: error: Expression type contains "Any" (has
type "dict[str, Any]")  [misc]
                return func(*args, **kwargs)
                                     ^~~~~~
bot/validation/decorators.py:434:16: error: Expression type contains "Any" (has
type "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]")
 [misc]
            return wrapper  # type: ignore[return-value]
                   ^~~~~~~
bot/validation/decorators.py:434:16: note: Error code "misc" not covered by "type: ignore" comment
bot/validation/decorators.py:436:12: error: Expression type contains "Any" (has
type "Callable[[F], F]")  [misc]
        return decorator
               ^~~~~~~~~
bot/types/enhanced_market_data.py:16: error: Explicit "Any" is not allowed
[explicit-any]
    class EnhancedMarketData(BaseMarketData):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/enhanced_market_data.py:202:1: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def create_validated_market_data(**kwargs) -> EnhancedMarketData:
    ^
bot/types/enhanced_market_data.py:208:33: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
        return EnhancedMarketData(**kwargs)
                                    ^~~~~~
bot/types/__init__.py:65:1: error: Incompatible import of "ConnectionState"
(imported name has type "type[bot.types.services.ConnectionState]", local name
has type "type[bot.types.market_data.ConnectionState]")  [assignment]
    from .services import (
    ^
bot/strategy/llm/response_parser.py:64:17: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                    return json.loads(json_str)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/llm/response_parser.py:71:17: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                    return json.loads(json_str)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market_fix.py:35:45: error: Missing type parameters for
generic type "dict"  [type-arg]
        def validate_websocket_message(message: dict) -> bool:
                                                ^
bot/data/bluefin_market_fix.py:89:41: error: Missing type parameters for
generic type "list"  [type-arg]
        def parse_candle_data(candle_array: list) -> MarketData | None:
                                            ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument "bid"
for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument "ask"
for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"bid_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"ask_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"last_trade_price" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"last_trade_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"trades_count" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"vwap" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"market_state" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:111:20: error: Unexpected keyword argument
"sequence_number" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument "bid"
for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument "ask"
for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"bid_size" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"ask_size" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"last_trade_price" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"last_trade_size" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"trades_count" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"vwap" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"market_state" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:186:22: error: Unexpected keyword argument
"sequence_number" for "MarketData"  [call-arg]
                candle = MarketData(
                         ^
bot/data/bluefin_market_fix.py:246:5: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def enhanced_connectivity_test(session, api_base_url: str) -...
        ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument "bid"
for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument "ask"
for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"bid_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"ask_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"last_trade_price" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"last_trade_size" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"trades_count" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"vwap" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"market_state" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:318:20: error: Unexpected keyword argument
"sequence_number" for "MarketData"  [call-arg]
                return MarketData(
                       ^
bot/data/bluefin_market_fix.py:327:24: error: Argument "volume" to "MarketData"
has incompatible type "Decimal | Literal[0]"; expected "Decimal"  [arg-type]
                    volume=total_volume,
                           ^~~~~~~~~~~~
bot/data/bluefin_market_fix.py:346:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def patch_bluefin_market_provider():
    ^
bot/types/services_integration.py:24:1: error: Explicit "Any" is not allowed
[explicit-any]
    def convert_service_status_to_health(service_status: Any) -> ServiceHe...
    ^
bot/types/services_integration.py:41:9: error: Expression type contains "Any"
(has type "Any | None")  [misc]
            getattr(service_status, "available", None), ServiceStatus.UNKN...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:41:17: error: Expression has type "Any"
[misc]
            getattr(service_status, "available", None), ServiceStatus.UNKN...
                    ^~~~~~~~~~~~~~
bot/types/services_integration.py:44:12: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
        return create_health_status(
               ^
bot/types/services_integration.py:46:15: error: Expression type contains "Any"
(has type "Any | None")  [misc]
            error=getattr(service_status, "error", None),
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:46:23: error: Expression has type "Any"
[misc]
            error=getattr(service_status, "error", None),
                          ^~~~~~~~~~~~~~
bot/types/services_integration.py:47:26: error: Expression type contains "Any"
(has type "Any | int")  [misc]
            response_time_ms=getattr(service_status, "startup_time", 0) * ...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:47:34: error: Expression has type "Any"
[misc]
            response_time_ms=getattr(service_status, "startup_time", 0) * ...
                                     ^~~~~~~~~~~~~~
bot/types/services_integration.py:48:22: error: Expression has type "Any"
[misc]
            service_name=getattr(service_status, "name", "unknown"),
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:52:1: error: Explicit "Any" is not allowed
[explicit-any]
    def convert_service_endpoint_to_typed(service_endpoint: Any) -> Servic...
    ^
bot/types/services_integration.py:72:33: error: Expression type contains "Any"
(has type "Any | str")  [misc]
        protocol = protocol_map.get(getattr(service_endpoint, "protocol", ...
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/services_integration.py:72:41: error: Expression has type "Any"
[misc]
        protocol = protocol_map.get(getattr(service_endpoint, "protocol", ...
                                            ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:75:14: error: Expression type contains "Any"
(has type "Any | str")  [misc]
            host=getattr(service_endpoint, "host", "localhost"),
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:75:22: error: Expression has type "Any"
[misc]
            host=getattr(service_endpoint, "host", "localhost"),
                         ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:76:14: error: Expression type contains "Any"
(has type "Any | int")  [misc]
            port=getattr(service_endpoint, "port", 8080),
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:76:22: error: Expression has type "Any"
[misc]
            port=getattr(service_endpoint, "port", 8080),
                         ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:78:25: error: Expression type contains "Any"
(has type "Any | None")  [misc]
            health_endpoint=getattr(service_endpoint, "health_endpoint", N...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/services_integration.py:78:33: error: Expression has type "Any"
[misc]
            health_endpoint=getattr(service_endpoint, "health_endpoint", N...
                                    ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:82:8: error: Expression type contains "Any"
(has type "Literal[False] | Any")  [misc]
        if hasattr(service_endpoint, "metadata") and service_endpoint.meta...
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/services_integration.py:82:16: error: Expression has type "Any"
[misc]
        if hasattr(service_endpoint, "metadata") and service_endpoint.meta...
                   ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:83:9: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
            endpoint["auth"] = service_endpoint.metadata
            ^~~~~~~~
bot/types/services_integration.py:83:28: error: Expression has type "Any"
[misc]
            endpoint["auth"] = service_endpoint.metadata
                               ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:85:12: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        return endpoint
               ^~~~~~~~
bot/types/services_integration.py:93:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(self, name: str, service_instance: Any, endpoint: Ser...
        ^
bot/types/services_integration.py:96:33: error: Expression has type "Any"
[misc]
            self.service_instance = service_instance
                                    ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:97:25: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
            self.endpoint = endpoint
                            ^~~~~~~~
bot/types/services_integration.py:103:20: error: Expression has type "Any"
[misc]
            if hasattr(self.service_instance, "check_health"):
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:104:26: error: Expression has type "Any"
[misc]
                is_healthy = self.service_instance.check_health()
                             ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:105:22: error: Expression has type "Any"
[misc]
            elif hasattr(self.service_instance, "is_healthy"):
                         ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:106:26: error: Expression has type "Any"
[misc]
                is_healthy = self.service_instance.is_healthy()
                             ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:110:16: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
            return create_health_status(
                   ^
bot/types/services_integration.py:111:45: error: Expression has type "Any"
[misc]
                status=ServiceStatus.HEALTHY if is_healthy else ServiceSta...
                                                ^~~~~~~~~~
bot/types/services_integration.py:116:20: error: Expression has type "Any"
[misc]
            if hasattr(self.service_instance, "check_health"):
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:117:44: error: Expression has type "Any"
[misc]
                if asyncio.iscoroutinefunction(self.service_instance.check...
                                               ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:118:30: error: Expression has type "Any"
[misc]
                    is_healthy = await self.service_instance.check_health(...
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:120:30: error: Expression has type "Any"
[misc]
                    is_healthy = self.service_instance.check_health()
                                 ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:124:16: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
            return create_health_status(
                   ^
bot/types/services_integration.py:125:45: error: Expression has type "Any"
[misc]
                status=ServiceStatus.HEALTHY if is_healthy else ServiceSta...
                                                ^~~~~~~~~~
bot/types/services_integration.py:130:20: error: Expression has type "Any"
[misc]
            if hasattr(self.service_instance, "is_ready"):
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:131:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return self.service_instance.is_ready()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:131:20: error: Expression has type "Any"
[misc]
                return self.service_instance.is_ready()
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:136:20: error: Expression has type "Any"
[misc]
            if hasattr(self.service_instance, "initialize"):
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:137:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return await self.service_instance.initialize()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:137:20: error: Expression has type "Any"
[misc]
                return await self.service_instance.initialize()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:142:20: error: Expression has type "Any"
[misc]
            if hasattr(self.service_instance, "close"):
                       ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:143:19: error: Expression has type "Any"
[misc]
                await self.service_instance.close()
                      ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:144:22: error: Expression has type "Any"
[misc]
            elif hasattr(self.service_instance, "disconnect"):
                         ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:145:19: error: Expression has type "Any"
[misc]
                await self.service_instance.disconnect()
                      ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:146:22: error: Expression has type "Any"
[misc]
            elif hasattr(self.service_instance, "shutdown"):
                         ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:147:19: error: Expression has type "Any"
[misc]
                await self.service_instance.shutdown()
                      ^~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:150:1: error: Explicit "Any" is not allowed
[explicit-any]
    def validate_service_startup_config(config: dict[str, Any]) -> None:
    ^
bot/types/services_integration.py:160:5: error: Expression type contains "Any"
(has type "tuple[str, Any]")  [misc]
        for service_name, service_config in config.items():
        ^
bot/types/services_integration.py:160:5: error: Expression has type "Any"
[misc]
        for service_name, service_config in config.items():
        ^
bot/types/services_integration.py:160:41: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
        for service_name, service_config in config.items():
                                            ^~~~~~
bot/types/services_integration.py:160:41: error: Expression type contains "Any"
(has type "dict_items[str, Any]")  [misc]
        for service_name, service_config in config.items():
                                            ^~~~~~~~~~~~~~
bot/types/services_integration.py:162:24: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
            typed_config = {
                           ^
bot/types/services_integration.py:164:13: error: Expression type contains "Any"
(has type "tuple[str, Any]")  [misc]
                "enabled": service_config.get("enabled", False),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:164:24: error: Expression has type "Any"
[misc]
                "enabled": service_config.get("enabled", False),
                           ^~~~~~~~~~~~~~
bot/types/services_integration.py:165:13: error: Expression type contains "Any"
(has type "tuple[str, Any]")  [misc]
                "required": service_config.get("required", False),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:165:25: error: Expression has type "Any"
[misc]
                "required": service_config.get("required", False),
                            ^~~~~~~~~~~~~~
bot/types/services_integration.py:166:13: error: Expression type contains "Any"
(has type "tuple[str, ServiceEndpoint]")  [misc]
                "endpoint": create_endpoint(
                ^
bot/types/services_integration.py:166:25: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
                "endpoint": create_endpoint(
                            ^
bot/types/services_integration.py:174:31: error: Expression has type "Any"
[misc]
            if "startup_delay" in service_config:
                                  ^~~~~~~~~~~~~~
bot/types/services_integration.py:175:13: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
                typed_config["startup_delay"] = service_config["startup_de...
                ^~~~~~~~~~~~
bot/types/services_integration.py:175:45: error: Expression has type "Any"
[misc]
                typed_config["startup_delay"] = service_config["startup_de...
                                                ^~~~~~~~~~~~~~
bot/types/services_integration.py:176:26: error: Expression has type "Any"
[misc]
            if "max_wait" in service_config:
                             ^~~~~~~~~~~~~~
bot/types/services_integration.py:177:13: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
                typed_config["max_wait"] = service_config["max_wait"]
                ^~~~~~~~~~~~
bot/types/services_integration.py:177:40: error: Expression has type "Any"
[misc]
                typed_config["max_wait"] = service_config["max_wait"]
                                           ^~~~~~~~~~~~~~
bot/types/services_integration.py:182:33: error: Expression type contains "Any"
(has type "dict[str, Any]")  [misc]
            validate_service_config(typed_config)
                                    ^~~~~~~~~~~~
bot/types/services_integration.py:186:1: error: Explicit "Any" is not allowed
[explicit-any]
    def check_service_health_with_guards(service: Any) -> bool:
    ^
bot/types/services_integration.py:197:30: error: Expression has type "Any"
[misc]
        if not is_docker_service(service):
                                 ^~~~~~~
bot/types/services_integration.py:198:26: error: Expression has type "Any"
[misc]
            print(f"Warning: {service} does not implement DockerService pr...
                             ^~~~~~~~
bot/types/services_integration.py:202:30: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        if not is_valid_endpoint(service.endpoint):
                                 ^~~~~~~~~~~~~~~~
bot/types/services_integration.py:207:14: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
        health = service.health_check()
                 ^~~~~~~~~~~~~~~~~~~~~~
bot/types/services_integration.py:208:31: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
        return is_healthy_service(health)
                                  ^~~~~~
bot/types/services_integration.py:224:38: error: Incompatible types (expression
has type "bot.types.market_data.ConnectionState", TypedDict item "state" has
type "bot.types.services.ConnectionState")  [typeddict-item]
        info: ConnectionInfo = {"state": state}
                                         ^~~~~
bot/types/services_integration.py:242:16: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        endpoint = create_endpoint(
                   ^
bot/types/services_integration.py:246:31: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        print(f"Created endpoint: {endpoint}")
                                  ^~~~~~~~~
bot/types/services_integration.py:247:48: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        print(f"Endpoint valid: {is_valid_endpoint(endpoint)}")
                                                   ^~~~~~~~
bot/types/services_example.py:27:25: error: Expression type contains "Any" (has
type "ServiceEndpoint")  [misc]
            self.endpoint = endpoint
                            ^~~~~~~~
bot/types/services_example.py:35:20: error: Expression type contains "Any" (has
type "ServiceHealth")  [misc]
                return create_health_status(
                       ^
bot/types/services_example.py:41:16: error: Expression type contains "Any" (has
type "ServiceHealth")  [misc]
            return create_health_status(
                   ^
bot/types/services_example.py:50:16: error: Expression type contains "Any" (has
type "ServiceHealth")  [misc]
            return self.health_check()
                   ^~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:75:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/types/services_example.py:75:5: note: Use "-> None" if function does not return a value
bot/types/services_example.py:81:34: error: Expression type contains "Any" (has
type "ServiceEndpoint")  [misc]
            if not is_valid_endpoint(service.endpoint):
                                     ^~~~~~~~~~~~~~~~
bot/types/services_example.py:100:22: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
                health = service.health_check()
                         ^~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:101:35: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
                if is_healthy_service(health):
                                      ^~~~~~
bot/types/services_example.py:109:13: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
                results[name] = await service.async_health_check()
                ^~~~~~~
bot/types/services_example.py:109:29: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
                results[name] = await service.async_health_check()
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:109:35: error: Expression type contains "Any"
(has type "Coroutine[Any, Any, ServiceHealth]")  [misc]
                results[name] = await service.async_health_check()
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:110:16: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
            return results
                   ^~~~~~~
bot/types/services_example.py:113:1: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
bot/types/services_example.py:113:1: note: Use "-> None" if function does not return a value
bot/types/services_example.py:119:24: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        bluefin_endpoint = create_endpoint(
                           ^
bot/types/services_example.py:127:26: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
        websocket_endpoint = create_endpoint(
                             ^
bot/types/services_example.py:137:58: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
    ...nt(f"  Bluefin endpoint valid: {is_valid_endpoint(bluefin_endpoint)}")
                                                         ^~~~~~~~~~~~~~~~
bot/types/services_example.py:138:60: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
    ...f"  WebSocket endpoint valid: {is_valid_endpoint(websocket_endpoint)}"...
                                                        ^~~~~~~~~~~~~~~~~~
bot/types/services_example.py:143:18: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
            endpoint=bluefin_endpoint,
                     ^~~~~~~~~~~~~~~~
bot/types/services_example.py:149:18: error: Expression type contains "Any"
(has type "ServiceEndpoint")  [misc]
            endpoint=websocket_endpoint,
                     ^~~~~~~~~~~~~~~~~~
bot/types/services_example.py:163:22: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
        initial_health = await manager.health_check_all()
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:163:28: error: Expression type contains "Any"
(has type "Coroutine[Any, Any, dict[str, ServiceHealth]]")  [misc]
        initial_health = await manager.health_check_all()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:164:5: error: Expression type contains "Any" (has
type "tuple[str, ServiceHealth]")  [misc]
        for name, health in initial_health.items():
        ^
bot/types/services_example.py:164:5: error: Expression type contains "Any" (has
type "ServiceHealth")  [misc]
        for name, health in initial_health.items():
        ^
bot/types/services_example.py:164:25: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
        for name, health in initial_health.items():
                            ^~~~~~~~~~~~~~
bot/types/services_example.py:164:25: error: Expression type contains "Any"
(has type "dict_items[str, ServiceHealth]")  [misc]
        for name, health in initial_health.items():
                            ^~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:165:18: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
            status = health["status"]
                     ^~~~~~
bot/types/services_example.py:177:20: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
        final_health = await manager.health_check_all()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:177:26: error: Expression type contains "Any"
(has type "Coroutine[Any, Any, dict[str, ServiceHealth]]")  [misc]
        final_health = await manager.health_check_all()
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:178:5: error: Expression type contains "Any" (has
type "tuple[str, ServiceHealth]")  [misc]
        for name, health in final_health.items():
        ^
bot/types/services_example.py:178:25: error: Expression type contains "Any"
(has type "dict[str, ServiceHealth]")  [misc]
        for name, health in final_health.items():
                            ^~~~~~~~~~~~
bot/types/services_example.py:178:25: error: Expression type contains "Any"
(has type "dict_items[str, ServiceHealth]")  [misc]
        for name, health in final_health.items():
                            ^~~~~~~~~~~~~~~~~~~~
bot/types/services_example.py:179:18: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
            status = health["status"]
                     ^~~~~~
bot/types/services_example.py:180:25: error: Expression type contains "Any"
(has type "ServiceHealth")  [misc]
            response_time = health.get("response_time_ms", "N/A")
                            ^~~~~~
bot/types/services_example.py:200:17: error: Expression has type "Any"  [misc]
        asyncio.run(main())
                    ^~~~~~
bot/types/stubs/websockets.pyi:49:5: error: Explicit "Any" is not allowed
[explicit-any]
        value: Any
        ^~~~~~~~~~
bot/types/stubs/websockets.pyi:51:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(self, name: str, value: Any) -> None: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/websockets.pyi:66:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def ping(self, data: str | bytes | None = None) -> Coroutine...
        ^
bot/types/stubs/websockets.pyi:95:1: error: Explicit "Any" is not allowed
[explicit-any]
    async def connect(
    ^
bot/types/stubs/websockets.pyi:120:1: error: Explicit "Any" is not allowed
[explicit-any]
    async def serve(
    ^
bot/types/stubs/aiohttp.pyi:60:5: error: Explicit "Any" is not allowed
[explicit-any]
        request_info: Any
        ^~~~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:61:5: error: Explicit "Any" is not allowed
[explicit-any]
        history: Any
        ^~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:64:5: error: Explicit "Any" is not allowed
[explicit-any]
        headers: Any
        ^~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:77:5: error: Explicit "Any" is not allowed
[explicit-any]
        data: Any
        ^~~~~~~~~
bot/types/stubs/aiohttp.pyi:78:5: error: Explicit "Any" is not allowed
[explicit-any]
        extra: Any
        ^~~~~~~~~~
bot/types/stubs/aiohttp.pyi:86:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def send_json(self, data: Any, dumps: Callable[[Any], str] =...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:91:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def receive_json(self, loads: Callable[[str], Any] = ...) ->...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:96:5: error: Explicit "Any" is not allowed
[explicit-any]
        version: Any
        ^~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:103:5: error: Explicit "Any" is not allowed
[explicit-any]
        connection: Any
        ^~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:104:5: error: Explicit "Any" is not allowed
[explicit-any]
        content: Any
        ^~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:105:5: error: Explicit "Any" is not allowed
[explicit-any]
        cookies: Any
        ^~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:108:5: error: Explicit "Any" is not allowed
[explicit-any]
        links: list[Any]
        ^~~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:112:5: error: Explicit "Any" is not allowed
[explicit-any]
        request_info: Any
        ^~~~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:114:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(self, *args: Any, **kwargs: Any) -> None: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:116:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def json(
        ^
bot/types/stubs/aiohttp.pyi:151:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/stubs/aiohttp.pyi:174:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/stubs/aiohttp.pyi:185:5: error: Explicit "Any" is not allowed
[explicit-any]
        def add_field(
        ^
bot/types/stubs/aiohttp.pyi:200:5: error: Explicit "Any" is not allowed
[explicit-any]
        cookie_jar: Any
        ^~~~~~~~~~~~~~~
bot/types/stubs/aiohttp.pyi:202:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/types/stubs/aiohttp.pyi:225:6: error: Single overload definition, multiple
required  [misc]
        @overload
         ^
bot/types/stubs/aiohttp.pyi:226:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def request(
        ^
bot/types/stubs/aiohttp.pyi:253:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def get(self, url: str | URL, **kwargs: Any) -> ClientRespon...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:254:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def post(self, url: str | URL, **kwargs: Any) -> ClientRespo...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:255:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def put(self, url: str | URL, **kwargs: Any) -> ClientRespon...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:256:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def patch(self, url: str | URL, **kwargs: Any) -> ClientResp...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:257:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def delete(self, url: str | URL, **kwargs: Any) -> ClientRes...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:258:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def head(self, url: str | URL, **kwargs: Any) -> ClientRespo...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:259:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def options(self, url: str | URL, **kwargs: Any) -> ClientRe...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/types/stubs/aiohttp.pyi:260:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def ws_connect(
        ^
bot/strategy/performance_monitor.py:99:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_request(
        ^
bot/strategy/performance_monitor.py:147:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def _check_performance_alerts(self, metric: PerformanceMetrics):
        ^
bot/strategy/performance_monitor.py:348:5: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start_monitoring(self, report_interval_minutes: int = 15...
        ^
bot/strategy/performance_monitor.py:418: error: Unused "type: ignore" comment
[unused-ignore]
            recommendations: list[str] = analysis["recommendations"]  # ty...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/performance_monitor.py:448:1: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_llm_performance(
    ^
bot/services/financial_sentiment.py:151:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/services/financial_sentiment.py:151:5: note: Use "-> None" if function does not return a value
bot/services/financial_sentiment.py:238:61: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...ef analyze_news_sentiment(self, news_items: list[dict]) -> SentimentRe...
                                                        ^
bot/services/financial_sentiment.py:272:48: error: Missing type parameters for
generic type "dict"  [type-arg]
        async def _analyze_single_item(self, item: dict) -> dict[str, Any]...
                                                   ^
bot/services/financial_sentiment.py:306:40: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, individual_results: list[dict], news_items: list[dict]
                                           ^
bot/services/financial_sentiment.py:476:28: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, crypto_data: dict, nasdaq_data: dict
                               ^
bot/services/financial_sentiment.py:528:56: error: Missing type parameters for
generic type "dict"  [type-arg]
        def format_sentiment_for_llm(self, sentiment_data: dict) -> str:
                                                           ^
bot/services/financial_sentiment.py:919:62: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...def _generate_trading_implications(self, sentiment_data: dict) -> str:
                                                                ^
bot/risk/api_protection.py:39:5: error: Function is missing a type annotation
[no-untyped-def]
        async def execute_with_protection(self, func, *args, **kwargs):
        ^
bot/monitoring/balance_metrics.py:52:16: error: Missing type parameters for
generic type "deque"  [type-arg]
        durations: deque = field(default_factory=lambda: deque(maxlen=1000...
                   ^
bot/monitoring/balance_metrics.py:94:9: error: Returning Any from function
declared to return "float"  [no-any-return]
            return sorted_durations[idx]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/monitoring/balance_metrics.py:103:9: error: Returning Any from function
declared to return "float"  [no-any-return]
            return sorted_durations[idx]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/monitoring/balance_metrics.py:162:23: error: Missing type parameters for
generic type "deque"  [type-arg]
            self.metrics: deque = deque(maxlen=max_metrics_retention)
                          ^
bot/monitoring/balance_metrics.py:164:31: error: Missing type parameters for
generic type "deque"  [type-arg]
            self.balance_changes: deque = deque(maxlen=1000)
                                  ^
bot/monitoring/balance_metrics.py:599:58: error: Incompatible default for
argument "max_age_minutes" (default has type "None", argument has type "int")
[assignment]
        def cleanup_old_metrics(self, max_age_minutes: int = None) -> int:
                                                             ^~~~
bot/monitoring/balance_metrics.py:599:58: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
bot/monitoring/balance_metrics.py:599:58: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
bot/monitoring/balance_metrics.py:610:13: error: Statement is unreachable
[unreachable]
                max_age_minutes = self.timing_window_minutes
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/mcp_omnisearch_client.py:109:24: error: Missing type parameters for
generic type "Popen"  [type-arg]
            self._process: subprocess.Popen | None = None
                           ^
bot/mcp/mcp_omnisearch_client.py:215:9: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
            return json.loads(line.strip())
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/mcp_omnisearch_client.py:239:9: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
            return response.get("result", {})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/mcp_omnisearch_client.py:690:1: error: Function is missing a return
type annotation  [no-untyped-def]
    async def main():
    ^
bot/mcp/mcp_omnisearch_client.py:690:1: note: Use "-> None" if function does not return a value
bot/performance_monitor.py:83:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/performance_monitor.py:83:5: note: Use "-> None" if function does not return a value
bot/performance_monitor.py:131:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_metric(self, metric: PerformanceMetric):
        ^
bot/performance_monitor.py:197:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_operation(self, operation_name: str, tags: dict[str, str...
        ^
bot/performance_monitor.py:238:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_async_operation(
        ^
bot/performance_monitor.py:249:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def decorator(func: Callable):
            ^
bot/performance_monitor.py:249:29: error: Missing type parameters for generic
type "Callable"  [type-arg]
            def decorator(func: Callable):
                                ^
bot/performance_monitor.py:250:13: error: Function is missing a type annotation
 [no-untyped-def]
                async def wrapper(*args, **kwargs):
                ^
bot/performance_monitor.py:258:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_sync_operation(
        ^
bot/performance_monitor.py:269:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def decorator(func: Callable):
            ^
bot/performance_monitor.py:269:29: error: Missing type parameters for generic
type "Callable"  [type-arg]
            def decorator(func: Callable):
                                ^
bot/performance_monitor.py:270:13: error: Function is missing a type annotation
 [no-untyped-def]
                def wrapper(*args, **kwargs):
                ^
bot/performance_monitor.py:290:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start_monitoring(self, interval_seconds: float = 5.0):
        ^
bot/performance_monitor.py:307:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop_monitoring(self):
        ^
bot/performance_monitor.py:307:5: note: Use "-> None" if function does not return a value
bot/performance_monitor.py:316:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _monitor_resources(self, interval: float):
        ^
bot/performance_monitor.py:418:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_alert_callback(self, callback: Callable[[PerformanceAlert]...
        ^
bot/performance_monitor.py:422:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def check_metric_thresholds(self, metric: PerformanceMetric):
        ^
bot/performance_monitor.py:529:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_alert(self, alert: PerformanceAlert):
        ^
bot/performance_monitor.py:733:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start_monitoring(self, resource_monitor_interval: float ...
        ^
bot/performance_monitor.py:747:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop_monitoring(self):
        ^
bot/performance_monitor.py:747:5: note: Use "-> None" if function does not return a value
bot/performance_monitor.py:883:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_alert_callback(self, callback: Callable[[PerformanceAlert]...
        ^
bot/performance_monitor.py:888:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_operation(self, operation_name: str, tags: dict[str, str...
        ^
bot/performance_monitor.py:892:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_async_operation(
        ^
bot/performance_monitor.py:898:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_sync_operation(
        ^
bot/performance_monitor.py:935:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def track_async(operation_name: str, tags: dict[str, str] | None = Non...
    ^
bot/performance_monitor.py:940:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def track_sync(operation_name: str, tags: dict[str, str] | None = None...
    ^
bot/performance_monitor.py:946:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def track(operation_name: str, tags: dict[str, str] | None = None):
    ^
bot/indicators/rsimfi.py:79:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_rsimfi(
        ^
bot/indicators/rsimfi.py:79:5: error: Argument 2 to "calculate_rsimfi" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def calculate_rsimfi(
        ^
bot/indicators/rsimfi.py:317:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def get_color_conditions(self, rsimfi_values: pd.Series) -> pd.Dat...
        ^
bot/indicators/rsimfi.py:317:5: error: Argument 2 to "get_color_conditions"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_color_conditions(self, rsimfi_values: pd.Series) -> pd.Dat...
        ^
bot/indicators/rsimfi.py:396:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def get_area_conditions(
        ^
bot/indicators/rsimfi.py:396:5: error: Argument 2 to "get_area_conditions"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_area_conditions(
        ^
bot/indicators/rsimfi.py:435:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_with_analysis(
        ^
bot/indicators/rsimfi.py:435:5: error: Argument 2 to "calculate_with_analysis"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate_with_analysis(
        ^
bot/indicators/rsimfi.py:541:5: error: Argument 2 to "get_latest_values"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_values(
        ^
bot/indicators/rsimfi.py:619:5: error: Argument 2 to "validate_ohlc_data"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def validate_ohlc_data(self, df: pd.DataFrame) -> tuple[bool, str]...
        ^
bot/indicators/rsimfi.py:657:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/rsimfi.py:732:5: error: Argument 2 to
"_generate_analysis_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_analysis_summary(self, df: pd.DataFrame) -> dict[str...
        ^
bot/analysis/market_context.py:241:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/analysis/market_context.py:241:5: note: Use "-> None" if function does not return a value
bot/analysis/market_context.py:794:13: error: Returning Any from function
declared to return "float"  [no-any-return]
                return max(0.0, stability)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/analysis/market_context.py:1689:13: error: Returning Any from function
declared to return "float"  [no-any-return]
                return max(min(momentum_score, 1.0), -1.0)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/analysis/market_context.py:1716:13: error: Returning Any from function
declared to return "float"  [no-any-return]
                return max(min(momentum_score, 1.0), -1.0)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/analysis/market_context.py:1755:17: error: Returning Any from function
declared to return "float"  [no-any-return]
                    return 1.0 - (strength_diff / max_strength)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/analysis/market_context.py:1816:13: error: Returning Any from function
declared to return "float"  [no-any-return]
                return min(strength, 1.0)
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/analysis/market_context.py:1836:17: error: Returning Any from function
declared to return "float | None"  [no-any-return]
                    return min(abs(crypto_volume_change), abs(nasdaq_volum...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/analysis/market_context.py:1837:13: error: Returning Any from function
declared to return "float | None"  [no-any-return]
                return -min(abs(crypto_volume_change), abs(nasdaq_volume_c...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:36:5: error: Cannot assign to a type  [misc]
        BluefinEndpointConfig = None
        ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:36:29: error: Incompatible types in assignment (expression has
type "None", variable has type "type[BluefinEndpointConfig]")  [assignment]
        BluefinEndpointConfig = None
                                ^~~~
bot/config.py:50:13: error: Function is missing a type annotation
[no-untyped-def]
                def __init__(self, *args, **kwargs):
                ^
bot/config.py:53:13: error: Function is missing a return type annotation
[no-untyped-def]
                async def __aenter__(self):
                ^
bot/config.py:56:13: error: Function is missing a type annotation
[no-untyped-def]
                async def __aexit__(self, *args):
                ^
bot/config.py:59:13: error: Function is missing a type annotation
[no-untyped-def]
                def get(self, *_args, **_kwargs):
                ^
bot/config.py:62:13: error: Function is missing a type annotation
[no-untyped-def]
                def post(self, *_args, **_kwargs):
                ^
bot/config.py:66:13: error: Function is missing a type annotation
[no-untyped-def]
                def __init__(self, *args, **kwargs):
                ^
bot/config.py:70:9: error: Function is missing a return type annotation
[no-untyped-def]
            def __init__(self):
            ^
bot/config.py:70:9: note: Use "-> None" if function does not return a value
bot/config.py:73:9: error: Function is missing a return type annotation
[no-untyped-def]
            async def __aenter__(self):
            ^
bot/config.py:76:9: error: Function is missing a type annotation
[no-untyped-def]
            async def __aexit__(self, *args):
            ^
bot/config.py:79:9: error: Function is missing a return type annotation
[no-untyped-def]
            async def json(self):
            ^
bot/config.py:80:20: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                return {}
                       ^~
bot/config.py:116:9: error: Explicit "Any" is not allowed  [explicit-any]
            self.validation_results: dict[str, Any] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:118:5: error: Explicit "Any" is not allowed  [explicit-any]
        def _check_aiohttp_available(self, test_name: str) -> dict[str, An...
        ^
bot/config.py:121:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:128:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def validate_all(self) -> dict[str, Any]:
        ^
bot/config.py:130:19: error: Expression type contains "Any" (has type
"dict[str, dict[str, Any] | None]")  [misc]
            results = {
                      ^
bot/config.py:131:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "environment": await self._validate_environment(),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:131:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "environment": await self._validate_environment(),
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:131:34: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "environment": await self._validate_environment(),
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:132:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "network_connectivity": await self._validate_network_conne...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:132:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "network_connectivity": await self._validate_network_conne...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:132:43: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "network_connectivity": await self._validate_network_conne...
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:133:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "exchange_config": await self._validate_exchange_configura...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:133:32: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "exchange_config": await self._validate_exchange_configura...
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:133:38: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "exchange_config": await self._validate_exchange_configura...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:134:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "security": await self._validate_security_settings(),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:134:25: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "security": await self._validate_security_settings(),
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:134:31: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "security": await self._validate_security_settings(),
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:135:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "trading_parameters": await self._validate_trading_paramet...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:135:35: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "trading_parameters": await self._validate_trading_paramet...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:135:41: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "trading_parameters": await self._validate_trading_paramet...
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:136:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "llm_config": await self._validate_llm_configuration(),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:136:27: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "llm_config": await self._validate_llm_configuration(),
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:136:33: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                "llm_config": await self._validate_llm_configuration(),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:137:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any] | None]")  [misc]
                "sui_network": (
                ^
bot/config.py:138:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    await self._validate_sui_network()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:138:17: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
                    await self._validate_sui_network()
                    ^
bot/config.py:138:23: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                    await self._validate_sui_network()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:144:9: error: Expression type contains "Any" (has type
"dict[str, dict[str, Any] | None]")  [misc]
            results["summary"] = {
            ^~~~~~~
bot/config.py:144:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            results["summary"] = {
                                 ^
bot/config.py:153:16: error: Expression type contains "Any" (has type
"dict[str, dict[str, Any] | None]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:155:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_environment(self) -> dict[str, Any]:
        ^
bot/config.py:157:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:157:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:157:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:167:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["checks"].append(
                    ^~~~~~~
bot/config.py:167:17: error: Expression has type "Any"  [misc]
                    results["checks"].append(
                    ^~~~~~~~~~~~~~~~~
bot/config.py:173:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["checks"].append(
                    ^~~~~~~
bot/config.py:173:17: error: Expression has type "Any"  [misc]
                    results["checks"].append(
                    ^~~~~~~~~~~~~~~~~
bot/config.py:181:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:182:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["checks"].append(
                    ^~~~~~~
bot/config.py:182:17: error: Expression has type "Any"  [misc]
                    results["checks"].append(
                    ^~~~~~~~~~~~~~~~~
bot/config.py:186:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:188:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_network_connectivity(self) -> dict[str, Any]:
        ^
bot/config.py:190:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:190:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:190:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:193:26: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            internet_check = await self._test_internet_connectivity()
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:193:32: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            internet_check = await self._test_internet_connectivity()
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:194:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            results["checks"].append(internet_check)
            ^~~~~~~
bot/config.py:194:9: error: Expression has type "Any"  [misc]
            results["checks"].append(internet_check)
            ^~~~~~~~~~~~~~~~~
bot/config.py:195:12: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if internet_check["status"] == "error":
               ^~~~~~~~~~~~~~
bot/config.py:195:12: error: Expression has type "Any"  [misc]
            if internet_check["status"] == "error":
               ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:196:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:199:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            dns_check = await self._test_dns_resolution()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:199:27: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            dns_check = await self._test_dns_resolution()
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:200:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            results["checks"].append(dns_check)
            ^~~~~~~
bot/config.py:200:9: error: Expression has type "Any"  [misc]
            results["checks"].append(dns_check)
            ^~~~~~~~~~~~~~~~~
bot/config.py:201:12: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if dns_check["status"] == "error":
               ^~~~~~~~~
bot/config.py:201:12: error: Expression has type "Any"  [misc]
            if dns_check["status"] == "error":
               ^~~~~~~~~~~~~~~~~~~
bot/config.py:202:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:204:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:206:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_exchange_configuration(self) -> dict[str, Any]...
        ^
bot/config.py:208:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:208:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:208:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:212:33: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                service_url_check = await self._test_bluefin_service_conne...
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:212:39: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                service_url_check = await self._test_bluefin_service_conne...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:213:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append(service_url_check)
                ^~~~~~~
bot/config.py:213:13: error: Expression has type "Any"  [misc]
                results["checks"].append(service_url_check)
                ^~~~~~~~~~~~~~~~~
bot/config.py:214:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                if service_url_check["status"] == "error":
                   ^~~~~~~~~~~~~~~~~
bot/config.py:214:16: error: Expression has type "Any"  [misc]
                if service_url_check["status"] == "error":
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:215:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:218:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                key_validation = self._validate_bluefin_private_key_format...
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:219:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append(key_validation)
                ^~~~~~~
bot/config.py:219:13: error: Expression has type "Any"  [misc]
                results["checks"].append(key_validation)
                ^~~~~~~~~~~~~~~~~
bot/config.py:220:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                if key_validation["status"] == "error":
                   ^~~~~~~~~~~~~~
bot/config.py:220:16: error: Expression has type "Any"  [misc]
                if key_validation["status"] == "error":
                   ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:221:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:224:35: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                endpoint_validation = await self._validate_bluefin_endpoin...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:224:41: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                endpoint_validation = await self._validate_bluefin_endpoin...
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:225:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append(endpoint_validation)
                ^~~~~~~
bot/config.py:225:13: error: Expression has type "Any"  [misc]
                results["checks"].append(endpoint_validation)
                ^~~~~~~~~~~~~~~~~
bot/config.py:226:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                if endpoint_validation["status"] == "error":
                   ^~~~~~~~~~~~~~~~~~~
bot/config.py:226:16: error: Expression has type "Any"  [misc]
                if endpoint_validation["status"] == "error":
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:227:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:229:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:231:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_security_settings(self) -> dict[str, Any]:
        ^
bot/config.py:233:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:233:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:233:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:247:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:248:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["checks"].append({"name": "key_length", "statu...
                    ^~~~~~~
bot/config.py:248:17: error: Expression has type "Any"  [misc]
                    results["checks"].append({"name": "key_length", "statu...
                    ^~~~~~~~~~~~~~~~~
bot/config.py:255:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["checks"].append(
                    ^~~~~~~
bot/config.py:255:17: error: Expression has type "Any"  [misc]
                    results["checks"].append(
                    ^~~~~~~~~~~~~~~~~
bot/config.py:259:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:261:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_trading_parameters(self) -> dict[str, Any]:
        ^
bot/config.py:263:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:263:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:263:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:270:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append({"name": "high_leverage", "status...
                ^~~~~~~
bot/config.py:270:13: error: Expression has type "Any"  [misc]
                results["checks"].append({"name": "high_leverage", "status...
                ^~~~~~~~~~~~~~~~~
bot/config.py:277:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append(
                ^~~~~~~
bot/config.py:277:13: error: Expression has type "Any"  [misc]
                results["checks"].append(
                ^~~~~~~~~~~~~~~~~
bot/config.py:290:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append({"name": "low_risk_reward", "stat...
                ^~~~~~~
bot/config.py:290:13: error: Expression has type "Any"  [misc]
                results["checks"].append({"name": "low_risk_reward", "stat...
                ^~~~~~~~~~~~~~~~~
bot/config.py:292:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:294:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_llm_configuration(self) -> dict[str, Any]:
        ^
bot/config.py:296:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:296:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:296:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:300:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                api_test = await self._test_openai_api_connectivity()
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:300:30: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                api_test = await self._test_openai_api_connectivity()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:301:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append(api_test)
                ^~~~~~~
bot/config.py:301:13: error: Expression has type "Any"  [misc]
                results["checks"].append(api_test)
                ^~~~~~~~~~~~~~~~~
bot/config.py:302:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                if api_test["status"] == "error":
                   ^~~~~~~~
bot/config.py:302:16: error: Expression has type "Any"  [misc]
                if api_test["status"] == "error":
                   ^~~~~~~~~~~~~~~~~~
bot/config.py:303:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["status"] = "fail"
                    ^~~~~~~
bot/config.py:310:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["checks"].append({"name": "high_temperature", "sta...
                ^~~~~~~
bot/config.py:310:13: error: Expression has type "Any"  [misc]
                results["checks"].append({"name": "high_temperature", "sta...
                ^~~~~~~~~~~~~~~~~
bot/config.py:312:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:314:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_sui_network(self) -> dict[str, Any]:
        ^
bot/config.py:316:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "checks": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:316:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                         ^~~~~~~~~~~~
bot/config.py:316:64: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "checks": []}
                                                                   ^~
bot/config.py:319:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            rpc_test = await self._test_sui_rpc_connectivity()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:319:26: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            rpc_test = await self._test_sui_rpc_connectivity()
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:320:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            results["checks"].append(rpc_test)
            ^~~~~~~
bot/config.py:320:9: error: Expression has type "Any"  [misc]
            results["checks"].append(rpc_test)
            ^~~~~~~~~~~~~~~~~
bot/config.py:321:12: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if rpc_test["status"] == "error":
               ^~~~~~~~
bot/config.py:321:12: error: Expression has type "Any"  [misc]
            if rpc_test["status"] == "error":
               ^~~~~~~~~~~~~~~~~~
bot/config.py:322:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:325:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            bluefin_api_test = await self._test_bluefin_api_connectivity()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:325:34: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            bluefin_api_test = await self._test_bluefin_api_connectivity()
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:326:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            results["checks"].append(bluefin_api_test)
            ^~~~~~~
bot/config.py:326:9: error: Expression has type "Any"  [misc]
            results["checks"].append(bluefin_api_test)
            ^~~~~~~~~~~~~~~~~
bot/config.py:327:12: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if bluefin_api_test["status"] == "error":
               ^~~~~~~~~~~~~~~~
bot/config.py:327:12: error: Expression has type "Any"  [misc]
            if bluefin_api_test["status"] == "error":
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:328:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:330:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:332:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_internet_connectivity(self) -> dict[str, Any]:
        ^
bot/config.py:334:23: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
            skip_result = self._check_aiohttp_available("internet_connecti...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:335:12: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
            if skip_result:
               ^~~~~~~~~~~
bot/config.py:336:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return skip_result
                       ^~~~~~~~~~~
bot/config.py:346:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:353:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:360:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/config.py:366:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_dns_resolution(self) -> dict[str, Any]:
        ^
bot/config.py:392:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:398:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/config.py:404:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_bluefin_service_connectivity(self) -> dict[str, An...
        ^
bot/config.py:425:32: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                            return {
                                   ^
bot/config.py:433:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:440:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:446:5: error: Explicit "Any" is not allowed  [explicit-any]
        def _validate_bluefin_private_key_format(self) -> dict[str, Any]:
        ^
bot/config.py:450:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:461:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:490:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:496:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/config.py:502:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _validate_bluefin_endpoints(self) -> dict[str, Any]:
        ^
bot/config.py:505:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:525:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:533:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    return {
                           ^
bot/config.py:540:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:546:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_openai_api_connectivity(self) -> dict[str, Any]:
        ^
bot/config.py:549:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:571:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:578:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:584:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    return {
                           ^
bot/config.py:591:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:597:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_sui_rpc_connectivity(self) -> dict[str, Any]:
        ^
bot/config.py:625:28: error: Expression has type "Any"  [misc]
                        data = await response.json()
                               ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:625:34: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, Any]")  [misc]
                        data = await response.json()
                                     ^~~~~~~~~~~~~~~
bot/config.py:626:36: error: Expression has type "Any"  [misc]
                        if "result" in data:
                                       ^~~~
bot/config.py:627:32: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                            return {
                                   ^
bot/config.py:633:65: error: Expression has type "Any"  [misc]
    ...                       f"Sui RPC returned unexpected response: {data}"
                                                                      ^~~~~
bot/config.py:635:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:641:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    return {
                           ^
bot/config.py:648:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:654:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def _test_bluefin_api_connectivity(self) -> dict[str, Any]:
        ^
bot/config.py:657:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:677:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:684:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return {
                               ^
bot/config.py:690:24: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    return {
                           ^
bot/config.py:697:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/config.py:705:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            if not self.validation_results:
                   ^~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:720:19: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            summary = self.validation_results["summary"]
                      ^~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:720:19: error: Expression has type "Any"  [misc]
            summary = self.validation_results["summary"]
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:722:48: error: Expression has type "Any"  [misc]
            report.append(f"Status: {'✓ PASS' if summary['is_valid'] else ...
                                                   ^~~~~~~
bot/config.py:723:33: error: Expression has type "Any"  [misc]
            report.append(f"Errors: {summary['total_errors']}")
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:724:35: error: Expression has type "Any"  [misc]
            report.append(f"Warnings: {summary['total_warnings']}")
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:728:9: error: Expression type contains "Any" (has type
"tuple[str, Any]")  [misc]
            for section, results in self.validation_results.items():
            ^
bot/config.py:728:9: error: Expression has type "Any"  [misc]
            for section, results in self.validation_results.items():
            ^
bot/config.py:728:33: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            for section, results in self.validation_results.items():
                                    ^~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:728:33: error: Expression type contains "Any" (has type
"dict_items[str, Any]")  [misc]
            for section, results in self.validation_results.items():
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:729:40: error: Expression has type "Any"  [misc]
                if section == "summary" or results is None:
                                           ^~~~~~~
bot/config.py:733:37: error: Expression has type "Any"  [misc]
                report.append(f"Status: {results['status'].upper()}")
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:735:28: error: Expression has type "Any"  [misc]
                if "checks" in results:
                               ^~~~~~~
bot/config.py:736:17: error: Expression has type "Any"  [misc]
                    for check in results["checks"]:
                    ^
bot/config.py:742:23: error: Expression has type "Any"  [misc]
                        }[check["status"]]
                          ^~~~~
bot/config.py:744:45: error: Expression has type "Any"  [misc]
                            f"  {status_symbol} {check['name']}: {check['m...
                                                ^~~~~~~~~~~~~~
bot/config.py:750:12: error: Expression has type "Any"  [misc]
            if summary["errors"]:
               ^~~~~~~
bot/config.py:752:13: error: Expression has type "Any"  [misc]
                for error in summary["errors"]:
                ^
bot/config.py:753:39: error: Expression has type "Any"  [misc]
                    report.append(f"  ✗ {error}")
                                          ^~~~~~
bot/config.py:756:12: error: Expression has type "Any"  [misc]
            if summary["warnings"]:
               ^~~~~~~
bot/config.py:758:13: error: Expression has type "Any"  [misc]
                for warning in summary["warnings"]:
                ^
bot/config.py:759:39: error: Expression has type "Any"  [misc]
                    report.append(f"  ⚠ {warning}")
                                          ^~~~~~~~
bot/config.py:782: error: Explicit "Any" is not allowed  [explicit-any]
    class TradingSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:896:5: error: Explicit "Any" is not allowed  [explicit-any]
        fee_tier_thresholds: list[dict[str, Any]] = Field(
        ^
bot/config.py:897:25: error: Expression type contains "Any" (has type
"Callable[[], list[Any]]")  [misc]
            default_factory=lambda: [
                            ^
bot/config.py:897:33: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            default_factory=lambda: [
                                    ^
bot/config.py:898:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 0, "maker": 0.006, "taker": 0.012},  # < $10K
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:899:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 10000, "maker": 0.0025, "taker": 0.004},  # $10...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:900:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 50000, "maker": 0.0015, "taker": 0.0025},  # $5...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:901:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 100000, "maker": 0.001, "taker": 0.002},  # $10...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:902:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 1000000, "maker": 0.0007, "taker": 0.0012},  # ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:903:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 15000000, "maker": 0.0004, "taker": 0.0008},  #...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:904:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 75000000, "maker": 0.0002, "taker": 0.0005},  #...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:905:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {"volume": 250000000, "maker": 0.0, "taker": 0.0005},  # $...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:967: error: Explicit "Any" is not allowed  [explicit-any]
    class LLMSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1111:6: error: Expression type contains "Any" (has type
"Callable[[type[LLMSettings], str, Any], str]")  [misc]
        @field_validator("model_name")
         ^
bot/config.py:1113:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def validate_model_name(cls, v: str, info) -> str:
        ^
bot/config.py:1113:5: error: Type of decorated function contains type "Any"
("Callable[[type[LLMSettings], str, Any], str]")  [misc]
        def validate_model_name(cls, v: str, info) -> str:
        ^
bot/config.py:1115:20: error: Expression has type "Any"  [misc]
            provider = info.data.get("provider", "openai")
                       ^~~~
bot/config.py:1117:12: error: Expression has type "Any"  [misc]
            if provider == "openai":
               ^~~~~~~~
bot/config.py:1128:14: error: Expression has type "Any"  [misc]
            elif provider == "anthropic":
                 ^~~~~~~~
bot/config.py:1136: error: Explicit "Any" is not allowed  [explicit-any]
    class MCPSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1206: error: Explicit "Any" is not allowed  [explicit-any]
    class OmniSearchSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1291:6: error: Expression type contains "Any" (has type
overloaded function)  [misc]
        @computed_field
         ^~~~~~~~~~~~~~
bot/config.py:1331: error: Explicit "Any" is not allowed  [explicit-any]
    class ExchangeSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1725: error: Explicit "Any" is not allowed  [explicit-any]
    class RiskSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1780: error: Explicit "Any" is not allowed  [explicit-any]
    class DataSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1854: error: Explicit "Any" is not allowed  [explicit-any]
    class DominanceSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1906: error: Explicit "Any" is not allowed  [explicit-any]
    class PaperTradingSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:1953: error: Explicit "Any" is not allowed  [explicit-any]
    class MonitoringSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2135: error: Explicit "Any" is not allowed  [explicit-any]
    class SystemSettings(BaseModel):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2299: error: Explicit "Any" is not allowed  [explicit-any]
    class Settings(BaseSettings):
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2312:54: error: Expression type contains "Any" (has type
"type[TradingSettings]")  [misc]
        trading: TradingSettings = Field(default_factory=TradingSettings)
                                                         ^~~~~~~~~~~~~~~
bot/config.py:2330:6: error: Expression type contains "Any" (has type
overloaded function)  [misc]
        @computed_field
         ^~~~~~~~~~~~~~
bot/config.py:2516:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                update={
                       ^
bot/config.py:2523:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                update={
                       ^
bot/config.py:2532:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                update={
                       ^
bot/config.py:2539:5: error: Explicit "Any" is not allowed  [explicit-any]
        def to_dict(self) -> dict[str, Any]:
        ^
bot/config.py:2541:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return self.model_dump()
                   ^~~~~~~~~~~~~~~~~
bot/config.py:2558:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                data = self.model_dump(mode="json")
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2579:23: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                json.dump(data, f, indent=2, default=str)
                          ^~~~
bot/config.py:2614:27: error: Expression has type "Any"  [misc]
                config_data = json.load(f)
                              ^~~~~~~~~~~~
bot/config.py:2616:22: error: Expression has type "Any"  [misc]
            return cls(**config_data)
                         ^~~~~~~~~~~
bot/config.py:2702:5: error: Explicit "Any" is not allowed  [explicit-any]
        def export_for_environment(self, target_env: Environment) -> dict[...
        ^
bot/config.py:2704:18: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            config = self.model_dump()
                     ^~~~~~~~~~~~~~~~~
bot/config.py:2708:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["dry_run"] = False
                ^~~~~~
bot/config.py:2708:13: error: Expression has type "Any"  [misc]
                config["system"]["dry_run"] = False
                ^~~~~~~~~~~~~~~~
bot/config.py:2709:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["environment"] = Environment.PRODUCTION.v...
                ^~~~~~
bot/config.py:2709:13: error: Expression has type "Any"  [misc]
                config["system"]["environment"] = Environment.PRODUCTION.v...
                ^~~~~~~~~~~~~~~~
bot/config.py:2710:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["log_level"] = "INFO"
                ^~~~~~
bot/config.py:2710:13: error: Expression has type "Any"  [misc]
                config["system"]["log_level"] = "INFO"
                ^~~~~~~~~~~~~~~~
bot/config.py:2711:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["exchange"]["cb_sandbox"] = False
                ^~~~~~
bot/config.py:2711:13: error: Expression has type "Any"  [misc]
                config["exchange"]["cb_sandbox"] = False
                ^~~~~~~~~~~~~~~~~~
bot/config.py:2714:31: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    if section in config:
                                  ^~~~~~
bot/config.py:2715:21: error: Expression has type "Any"  [misc]
                        for key in list(config[section].keys()):
                        ^
bot/config.py:2715:32: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
                        for key in list(config[section].keys()):
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2715:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        for key in list(config[section].keys()):
                                        ^~~~~~
bot/config.py:2717:38: error: Expression has type "Any"  [misc]
                                "key" in key.lower()
                                         ^~~
bot/config.py:2718:44: error: Expression has type "Any"  [misc]
                                or "secret" in key.lower()
                                               ^~~
bot/config.py:2719:48: error: Expression has type "Any"  [misc]
                                or "passphrase" in key.lower()
                                                   ^~~
bot/config.py:2720:45: error: Expression has type "Any"  [misc]
                                or "private" in key.lower()
                                                ^~~
bot/config.py:2722:29: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                                config[section][key] = None
                                ^~~~~~
bot/config.py:2722:29: error: Expression has type "Any"  [misc]
                                config[section][key] = None
                                ^~~~~~~~~~~~~~~
bot/config.py:2725:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["dry_run"] = True
                ^~~~~~
bot/config.py:2725:13: error: Expression has type "Any"  [misc]
                config["system"]["dry_run"] = True
                ^~~~~~~~~~~~~~~~
bot/config.py:2726:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["environment"] = Environment.DEVELOPMENT....
                ^~~~~~
bot/config.py:2726:13: error: Expression has type "Any"  [misc]
                config["system"]["environment"] = Environment.DEVELOPMENT....
                ^~~~~~~~~~~~~~~~
bot/config.py:2727:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["log_level"] = "DEBUG"
                ^~~~~~
bot/config.py:2727:13: error: Expression has type "Any"  [misc]
                config["system"]["log_level"] = "DEBUG"
                ^~~~~~~~~~~~~~~~
bot/config.py:2728:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["exchange"]["cb_sandbox"] = True
                ^~~~~~
bot/config.py:2728:13: error: Expression has type "Any"  [misc]
                config["exchange"]["cb_sandbox"] = True
                ^~~~~~~~~~~~~~~~~~
bot/config.py:2729:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["trading"]["leverage"] = min(config["trading"]["lev...
                ^~~~~~
bot/config.py:2729:13: error: Expression has type "Any"  [misc]
                config["trading"]["leverage"] = min(config["trading"]["lev...
                ^~~~~~~~~~~~~~~~~
bot/config.py:2730:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["risk"]["max_daily_loss_pct"] = min(
                ^~~~~~
bot/config.py:2730:13: error: Expression has type "Any"  [misc]
                config["risk"]["max_daily_loss_pct"] = min(
                ^~~~~~~~~~~~~~
bot/config.py:2731:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    config["risk"]["max_daily_loss_pct"], 5.0
                    ^~~~~~
bot/config.py:2731:17: error: Expression has type "Any"  [misc]
                    config["risk"]["max_daily_loss_pct"], 5.0
                    ^~~~~~~~~~~~~~
bot/config.py:2735:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["dry_run"] = True
                ^~~~~~
bot/config.py:2735:13: error: Expression has type "Any"  [misc]
                config["system"]["dry_run"] = True
                ^~~~~~~~~~~~~~~~
bot/config.py:2736:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["environment"] = Environment.STAGING.valu...
                ^~~~~~
bot/config.py:2736:13: error: Expression has type "Any"  [misc]
                config["system"]["environment"] = Environment.STAGING.valu...
                ^~~~~~~~~~~~~~~~
bot/config.py:2737:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["system"]["log_level"] = "INFO"
                ^~~~~~
bot/config.py:2737:13: error: Expression has type "Any"  [misc]
                config["system"]["log_level"] = "INFO"
                ^~~~~~~~~~~~~~~~
bot/config.py:2738:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                config["exchange"]["cb_sandbox"] = True
                ^~~~~~
bot/config.py:2738:13: error: Expression has type "Any"  [misc]
                config["exchange"]["cb_sandbox"] = True
                ^~~~~~~~~~~~~~~~~~
bot/config.py:2740:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return config
                   ^~~~~~
bot/config.py:2742:5: error: Explicit "Any" is not allowed  [explicit-any]
        def get_effective_config(self) -> dict[str, Any]:
        ^
bot/config.py:2744:23: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            base_config = self.model_dump()
                          ^~~~~~~~~~~~~~~~~
bot/config.py:2747:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            base_config["computed"] = {
            ^~~~~~~~~~~
bot/config.py:2747:35: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            base_config["computed"] = {
                                      ^
bot/config.py:2756:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return base_config
                   ^~~~~~~~~~~
bot/config.py:2761:27: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            config_for_hash = self.model_dump(
                              ^
bot/config.py:2778:33: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            config_str = json.dumps(config_for_hash, sort_keys=True, defau...
                                    ^~~~~~~~~~~~~~~
bot/config.py:2781:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def validate_configuration_comprehensive(self) -> dict[str, ...
        ^
bot/config.py:2784:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return await validator.validate_all()
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2784:22: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            return await validator.validate_all()
                         ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2790:5: error: Explicit "Any" is not allowed  [explicit-any]
        def test_bluefin_configuration(self) -> dict[str, Any]:
        ^
bot/config.py:2793:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {"status": "skipped", "reason": "Not using Bluefin ...
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:2795:9: error: Explicit "Any" is not allowed  [explicit-any]
            results: dict[str, Any] = {"status": "pass", "tests": []}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2795:54: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
            results: dict[str, Any] = {"status": "pass", "tests": []}
                                                         ^~~~~~~~~~~
bot/config.py:2795:63: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
            results: dict[str, Any] = {"status": "pass", "tests": []}
                                                                  ^~
bot/config.py:2801:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["tests"].append(
                    ^~~~~~~
bot/config.py:2801:17: error: Expression has type "Any"  [misc]
                    results["tests"].append(
                    ^~~~~~~~~~~~~~~~
bot/config.py:2805:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    results["tests"].append(
                    ^~~~~~~
bot/config.py:2805:17: error: Expression has type "Any"  [misc]
                    results["tests"].append(
                    ^~~~~~~~~~~~~~~~
bot/config.py:2813:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:2814:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["tests"].append(
                ^~~~~~~
bot/config.py:2814:13: error: Expression has type "Any"  [misc]
                results["tests"].append(
                ^~~~~~~~~~~~~~~~
bot/config.py:2821:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["status"] = "fail"
                ^~~~~~~
bot/config.py:2822:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["tests"].append(
                ^~~~~~~
bot/config.py:2822:13: error: Expression has type "Any"  [misc]
                results["tests"].append(
                ^~~~~~~~~~~~~~~~
bot/config.py:2830:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["tests"].append({"name": "network_endpoints", "sta...
                ^~~~~~~
bot/config.py:2830:13: error: Expression has type "Any"  [misc]
                results["tests"].append({"name": "network_endpoints", "sta...
                ^~~~~~~~~~~~~~~~
bot/config.py:2835:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["tests"].append(
                ^~~~~~~
bot/config.py:2835:13: error: Expression has type "Any"  [misc]
                results["tests"].append(
                ^~~~~~~~~~~~~~~~
bot/config.py:2843:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                results["tests"].append(
                ^~~~~~~
bot/config.py:2843:13: error: Expression has type "Any"  [misc]
                results["tests"].append(
                ^~~~~~~~~~~~~~~~
bot/config.py:2847:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return results
                   ^~~~~~~
bot/config.py:2849:5: error: Explicit "Any" is not allowed  [explicit-any]
        def get_configuration_summary(self) -> dict[str, Any]:
        ^
bot/config.py:2851:9: error: Explicit "Any" is not allowed  [explicit-any]
            summary: dict[str, Any] = {
            ^
bot/config.py:2852:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "basic_info": {
                ^
bot/config.py:2852:27: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "basic_info": {
                              ^
bot/config.py:2860:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "security_status": {
                ^
bot/config.py:2860:32: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "security_status": {
                                   ^
bot/config.py:2865:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "risk_parameters": {
                ^
bot/config.py:2865:32: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "risk_parameters": {
                                   ^
bot/config.py:2873:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "network_config": {},
                ^~~~~~~~~~~~~~~~~~~~
bot/config.py:2873:31: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "network_config": {},
                                  ^~
bot/config.py:2874:13: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
                "warnings": [],
                ^~~~~~~~~~~~~~
bot/config.py:2874:25: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
                "warnings": [],
                            ^~
bot/config.py:2880:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                summary["network_config"] = {
                ^~~~~~~
bot/config.py:2880:41: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                summary["network_config"] = {
                                            ^
bot/config.py:2888:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                summary["warnings"].extend(self.validate_network_consisten...
                ^~~~~~~
bot/config.py:2888:13: error: Expression has type "Any"  [misc]
                summary["warnings"].extend(self.validate_network_consisten...
                ^~~~~~~~~~~~~~~~~~~
bot/config.py:2891:9: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            summary["warnings"].extend(self.validate_trading_environment()...
            ^~~~~~~
bot/config.py:2891:9: error: Expression has type "Any"  [misc]
            summary["warnings"].extend(self.validate_trading_environment()...
            ^~~~~~~~~~~~~~~~~~~
bot/config.py:2893:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return summary
                   ^~~~~~~
bot/config.py:2915:9: error: Statement is unreachable  [unreachable]
            return False
            ^~~~~~~~~~~~
bot/config.py:2917:5: error: Explicit "Any" is not allowed  [explicit-any]
        def create_backup_configuration(self) -> dict[str, Any]:
        ^
bot/config.py:2919:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/config.py:2920:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "metadata": {
                ^
bot/config.py:2920:25: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "metadata": {
                            ^
bot/config.py:2927:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "configuration": self.model_dump(
                ^
bot/config.py:2927:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "configuration": self.model_dump(
                                 ^
bot/config.py:2953:9: error: Explicit "Any" is not allowed  [explicit-any]
            self.change_callbacks: list[Callable[[Any, str, str], None]] =...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2954:9: error: Explicit "Any" is not allowed  [explicit-any]
            self.validation_cache: dict[str, Any] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2957:5: error: Explicit "Any" is not allowed  [explicit-any]
        def register_change_callback(
        ^
bot/config.py:2961:9: error: Expression type contains "Any" (has type
"list[Callable[[Any, str, str], None]]")  [misc]
            self.change_callbacks.append(callback)
            ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:2961:38: error: Expression type contains "Any" (has type
"Callable[[Any, str, str], None]")  [misc]
            self.change_callbacks.append(callback)
                                         ^~~~~~~~
bot/config.py:2975:13: error: Expression type contains "Any" (has type
"Callable[[Any, str, str], None]")  [misc]
                for callback in self.change_callbacks:
                ^
bot/config.py:2975:29: error: Expression type contains "Any" (has type
"list[Callable[[Any, str, str], None]]")  [misc]
                for callback in self.change_callbacks:
                                ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:2986:5: error: Explicit "Any" is not allowed  [explicit-any]
        async def validate_and_cache(self) -> dict[str, Any]:
        ^
bot/config.py:2992:13: error: Expression type contains "Any" (has type
"Literal[False] | Any")  [misc]
                "validation_results" in self.validation_cache
                ^
bot/config.py:2992:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "validation_results" in self.validation_cache
                                        ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:2993:17: error: Expression has type "Any"  [misc]
                and current_time - self.validation_cache.get("cached_at", ...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2993:32: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                and current_time - self.validation_cache.get("cached_at", ...
                                   ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:2996:13: error: Returning Any from function declared to return
"dict[str, Any]"  [no-any-return]
                return self.validation_cache["validation_results"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2996:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return self.validation_cache["validation_results"]
                       ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:2996:20: error: Expression has type "Any"  [misc]
                return self.validation_cache["validation_results"]
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:2999:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            validation_results = await self.settings.validate_configuratio...
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:2999:36: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
            validation_results = await self.settings.validate_configuratio...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/config.py:3003:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "validation_results": validation_results,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3003:35: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "validation_results": validation_results,
                                      ^~~~~~~~~~~~~~~~~~
bot/config.py:3008:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return validation_results
                   ^~~~~~~~~~~~~~~~~~
bot/config.py:3010:5: error: Explicit "Any" is not allowed  [explicit-any]
        def get_health_status(self) -> dict[str, Any]:
        ^
bot/config.py:3012:9: error: Explicit "Any" is not allowed  [explicit-any]
            status: dict[str, Any] = {
            ^
bot/config.py:3016:13: error: Expression type contains "Any" (has type
"tuple[str, list[Any]]")  [misc]
                "issues": [],
                ^~~~~~~~~~~~
bot/config.py:3016:23: error: Expression type contains "Any" (has type
"list[Any]")  [misc]
                "issues": [],
                          ^~
bot/config.py:3024:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        status["issues"].extend(endpoint_issues)
                        ^~~~~~
bot/config.py:3024:21: error: Expression has type "Any"  [misc]
                        status["issues"].extend(endpoint_issues)
                        ^~~~~~~~~~~~~~~~
bot/config.py:3025:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        status["overall_status"] = "degraded"
                        ^~~~~~
bot/config.py:3027:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    status["issues"].append(f"Endpoint validation error: {...
                    ^~~~~~
bot/config.py:3027:17: error: Expression has type "Any"  [misc]
                    status["issues"].append(f"Endpoint validation error: {...
                    ^~~~~~~~~~~~~~~~
bot/config.py:3028:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    status["overall_status"] = "unhealthy"
                    ^~~~~~
bot/config.py:3033:13: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                status["issues"].extend(env_warnings)
                ^~~~~~
bot/config.py:3033:13: error: Expression has type "Any"  [misc]
                status["issues"].extend(env_warnings)
                ^~~~~~~~~~~~~~~~
bot/config.py:3034:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                if status["overall_status"] == "healthy":
                   ^~~~~~
bot/config.py:3034:16: error: Expression has type "Any"  [misc]
                if status["overall_status"] == "healthy":
                   ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3035:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    status["overall_status"] = "warning"
                    ^~~~~~
bot/config.py:3037:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return status
                   ^~~~~~
bot/config.py:3039:5: error: Explicit "Any" is not allowed  [explicit-any]
        def export_monitoring_data(self) -> dict[str, Any]:
        ^
bot/config.py:3041:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/config.py:3042:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "monitor_info": {
                ^
bot/config.py:3042:29: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "monitor_info": {
                                ^
bot/config.py:3046:39: error: Expression type contains "Any" (has type
"list[Callable[[Any, str, str], None]]")  [misc]
                    "callback_count": len(self.change_callbacks),
                                          ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:3048:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "current_config": self.settings.get_configuration_summary(...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3048:31: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "current_config": self.settings.get_configuration_summary(...
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3049:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "health_status": self.get_health_status(),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3049:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "health_status": self.get_health_status(),
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3050:13: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                "validation_cache": self.validation_cache,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config.py:3050:33: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                "validation_cache": self.validation_cache,
                                    ^~~~~~~~~~~~~~~~~~~~~
bot/config.py:3054:1: error: Explicit "Any" is not allowed  [explicit-any]
    def create_settings(
    ^
bot/config.py:3072:27: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
        settings = Settings(**overrides)
                              ^~~~~~~~~
bot/config.py:3085:1: error: Explicit "Any" is not allowed  [explicit-any]
    def get_config_template() -> dict[str, Any]:
    ^
bot/config.py:3087:12: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
        return {
               ^
bot/config.py:3088:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "trading": {
            ^
bot/config.py:3088:20: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "trading": {
                       ^
bot/config.py:3107:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "llm": {
            ^
bot/config.py:3107:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "llm": {
                   ^
bot/config.py:3115:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "exchange": {
            ^
bot/config.py:3115:21: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "exchange": {
                        ^
bot/config.py:3122:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "risk": {
            ^
bot/config.py:3122:17: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "risk": {
                    ^
bot/config.py:3128:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "system": {
            ^
bot/config.py:3128:19: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "system": {
                      ^
bot/config.py:3134:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "paper_trading": {
            ^
bot/config.py:3134:26: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "paper_trading": {
                             ^
bot/config.py:3146:9: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
            "omnisearch": {
            ^
bot/config.py:3146:23: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            "omnisearch": {
                          ^
bot/utils/web_search_formatter.py:188:58: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...   async def format_news_results(self, news_items: list[dict]) -> str:
                                                               ^
bot/utils/web_search_formatter.py:475:58: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...ync def extract_key_insights(self, search_results: dict) -> list[str]:
                                                          ^
bot/utils/web_search_formatter.py:526:32: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, news_items: list[dict]
                                   ^
bot/utils/web_search_formatter.py:542:53: error: Missing type parameters for
generic type "dict"  [type-arg]
    ... async def _process_single_news_item(self, item: dict) -> FormattedCon...
                                                        ^
bot/utils/web_search_formatter.py:753:27: error: Subclass of "datetime" and
"str" cannot exist: would have incompatible method signatures  [unreachable]
                if isinstance(published_time, str):
                              ^~~~~~~~~~~~~~
bot/utils/web_search_formatter.py:755:17: error: Statement is unreachable
[unreachable]
                    from dateutil import parser
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/web_search_formatter.py:993:61: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...def _extract_news_insights(self, news_items: list[dict]) -> list[str]:
                                                         ^
bot/utils/web_search_formatter.py:1005:59: error: Missing type parameters for
generic type "dict"  [type-arg]
    ... _extract_sentiment_insights(self, sentiment_data: dict) -> list[str]:
                                                          ^
bot/utils/web_search_formatter.py:1022:51: error: Missing type parameters for
generic type "dict"  [type-arg]
        def _extract_price_insights(self, price_data: dict) -> list[str]:
                                                      ^
bot/utils/web_search_formatter.py:1041:59: error: Missing type parameters for
generic type "dict"  [type-arg]
    ... _extract_technical_insights(self, technical_data: dict) -> list[str]:
                                                          ^
bot/trading/fifo_position_manager.py:367:40: error: Missing type parameters for
generic type "Task"  [type-arg]
        def _handle_save_error(self, task: asyncio.Task) -> None:
                                           ^
bot/monitoring/service_discovery.py:81:39: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.discovery_task: Optional[asyncio.Task] = None
                                          ^
bot/monitoring/service_discovery.py:384:13: error: Statement is unreachable
[unreachable]
                return False
                ^~~~~~~~~~~~
bot/monitoring/performance_metrics.py:173:40: error: Missing type parameters
for generic type "Task"  [type-arg]
            self.collection_task: Optional[asyncio.Task] = None
                                           ^
bot/monitoring/performance_metrics.py:604:9: error: Statement is unreachable
[unreachable]
            return False
            ^~~~~~~~~~~~
bot/monitoring/diagnostic_tools.py:1063:13: error: Function is missing a return
type annotation  [no-untyped-def]
                async def make_request():
                ^
bot/monitoring/diagnostic_tools.py:1072:13: error: Function is missing a return
type annotation  [no-untyped-def]
                async def bounded_request():
                ^
bot/monitoring/diagnostic_tools.py:1158:21: error: Function is missing a return
type annotation  [no-untyped-def]
                        async def stress_request():
                        ^
bot/monitoring/balance_alerts.py:78:9: error: Returning Any from function
declared to return "bool"  [no-any-return]
            return op_func(current_value, self.value)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/monitoring/balance_alerts.py:184:41: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._monitoring_task: Optional[asyncio.Task] = None
                                            ^
bot/monitoring/balance_alerts.py:536:36: error: Incompatible default for
argument "metadata" (default has type "None", argument has type
"dict[str, Any]")  [assignment]
            metadata: Dict[str, Any] = None
                                       ^~~~
bot/monitoring/balance_alerts.py:536:36: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
bot/monitoring/balance_alerts.py:536:36: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
bot/system_monitor.py:59:13: error: Missing type parameters for generic type
"Callable"  [type-arg]
        action: Callable
                ^
bot/system_monitor.py:79:39: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self.health_checks: dict[str, Callable] = {}
                                          ^
bot/system_monitor.py:81:31: error: Missing type parameters for generic type
"Task"  [type-arg]
            self.monitoring_task: asyncio.Task | None = None
                                  ^
bot/system_monitor.py:95:23: error: Missing type parameters for generic type
"Callable"  [type-arg]
            health_check: Callable,
                          ^
bot/system_monitor.py:233:50: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self, component_name: str, health_check: Callable
                                                     ^
bot/system_monitor.py:460:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/system_monitor.py:460:5: note: Use "-> None" if function does not return a value
bot/system_monitor.py:461:45: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self.recovery_strategies: dict[str, Callable] = {
                                                ^
bot/system_monitor.py:513:13: error: Returning Any from function declared to
return "bool"  [no-any-return]
                return success
                ^~~~~~~~~~~~~~
bot/system_monitor.py:687:17: error: Missing type parameters for generic type
"Callable"  [type-arg]
            action: Callable,
                    ^
bot/error_handling.py:143:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
bot/error_handling.py:147:5: error: Function is missing a type annotation
[no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, _exc_tb):
        ^
bot/error_handling.py:385:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def execute_with_fallback(
        ^
bot/error_handling.py:420:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_fallback(self, service_name: str, *args, **kwar...
        ^
bot/error_handling.py:927:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/error_handling.py:927:5: note: Use "-> None" if function does not return a value
bot/error_handling.py:932:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def execute_critical_operation(
        ^
bot/error_handling.py:1103:43: error: Name "timedelta" is not defined
[name-defined]
            cutoff_time = datetime.now(UTC) - timedelta(hours=time_window_...
                                              ^~~~~~~~~
bot/exchange/base.py:72:26: error: Missing type parameters for generic type
"dict"  [type-arg]
            balance_context: dict | None = None,
                             ^
bot/exchange/base.py:77:32: error: Expression type contains "Any" (has type
"dict[Any, Any] | None")  [misc]
            self.balance_context = balance_context or {}
                                   ^~~~~~~~~~~~~~~
bot/exchange/base.py:77:32: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            self.balance_context = balance_context or {}
                                   ^~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:80:36: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_error_context(self) -> dict:
                                       ^
bot/exchange/base.py:82:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            return {
                   ^
bot/exchange/base.py:87:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "balance_context": self.balance_context,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:87:32: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "balance_context": self.balance_context,
                                   ^~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:107:28: error: Missing type parameters for generic type
"dict"  [type-arg]
            operation_context: dict | None = None,
                               ^
bot/exchange/base.py:109:57: error: Expression type contains "Any" (has type
"dict[Any, Any] | None")  [misc]
    ...    super().__init__(message, account_type, symbol, operation_context)
                                                           ^~~~~~~~~~~~~~~~~
bot/exchange/base.py:116:36: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_error_context(self) -> dict:
                                       ^
bot/exchange/base.py:118:19: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context = super().get_error_context()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:119:9: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context.update(
            ^~~~~~~
bot/exchange/base.py:120:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {
                ^
bot/exchange/base.py:126:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            return context
                   ^~~~~~~
bot/exchange/base.py:137:5: error: Explicit "Any" is not allowed
[explicit-any]
        def __init__(
        ^
bot/exchange/base.py:145:30: error: Expression has type "Any"  [misc]
            self.invalid_value = invalid_value
                                 ^~~~~~~~~~~~~
bot/exchange/base.py:148:36: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_error_context(self) -> dict:
                                       ^
bot/exchange/base.py:150:19: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context = super().get_error_context()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:151:9: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context.update(
            ^~~~~~~
bot/exchange/base.py:152:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {
                ^
bot/exchange/base.py:154:25: error: Expression has type "Any"  [misc]
                        str(self.invalid_value) if self.invalid_value is n...
                            ^~~~~~~~~~~~~~~~~~
bot/exchange/base.py:159:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            return context
                   ^~~~~~~
bot/exchange/base.py:183:36: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_error_context(self) -> dict:
                                       ^
bot/exchange/base.py:185:19: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context = super().get_error_context()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:186:9: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context.update(
            ^~~~~~~
bot/exchange/base.py:187:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {
                ^
bot/exchange/base.py:194:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            return context
                   ^~~~~~~
bot/exchange/base.py:217:36: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_error_context(self) -> dict:
                                       ^
bot/exchange/base.py:219:19: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context = super().get_error_context()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:220:9: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            context.update(
            ^~~~~~~
bot/exchange/base.py:221:13: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                {
                ^
bot/exchange/base.py:227:16: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
            return context
                   ^~~~~~~
bot/exchange/base.py:248:9: error: Explicit "Any" is not allowed
[explicit-any]
            self._last_health_check: Any | None = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:259:31: error: Expression type contains "Any" (has type
"Callable[[Exception, dict[Any, Any]], Coroutine[Any, Any, None]]")  [misc]
                fallback_behavior=self._exchange_error_fallback,
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:267:13: error: Expression type contains "Any" (has type
"Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, bool]]")  [misc]
                self._connection_fallback,
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:273:13: error: Expression type contains "Any" (has type
"Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, Order | None]]")
[misc]
                self._trading_fallback,
                ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:282:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def validate_balance_update(
        ^
bot/exchange/base.py:310:9: error: Explicit "Any" is not allowed
[explicit-any]
            def _raise_balance_format_error(balance: Any) -> None:
            ^
bot/exchange/base.py:312:43: error: Expression has type "Any"  [misc]
                    f"Invalid balance format: {balance}",
                                              ^~~~~~~~
bot/exchange/base.py:313:31: error: Expression has type "Any"  [misc]
                    invalid_value=balance,
                                  ^~~~~~~
bot/exchange/base.py:327:17: error: Statement is unreachable  [unreachable]
                    _raise_null_balance_error()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:330:17: error: Statement is unreachable  [unreachable]
                    try:
                    ^
bot/exchange/base.py:337:17: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
                    metadata and metadata.get("allow_negative", False)
                    ^~~~~~~~
bot/exchange/base.py:337:17: error: Expression type contains "Any" (has type
"dict[str, Any] | Any | None")  [misc]
                    metadata and metadata.get("allow_negative", False)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:337:30: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    metadata and metadata.get("allow_negative", False)
                                 ^~~~~~~~
bot/exchange/base.py:337:30: error: Expression has type "Any"  [misc]
                    metadata and metadata.get("allow_negative", False)
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:356:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/exchange/base.py:363:16: error: Expression type contains "Any" (has type
"type[BalanceValidationError]")  [misc]
            except BalanceValidationError:
                   ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:374:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def validate_margin_requirements(
        ^
bot/exchange/base.py:429:20: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                return {
                       ^
bot/exchange/base.py:438:16: error: Expression type contains "Any" (has type
"type[BalanceValidationError]")  [misc]
            except BalanceValidationError:
                   ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:449:5: error: Explicit "Any" is not allowed
[explicit-any]
        async def validate_balance_reconciliation(
        ^
bot/exchange/base.py:519:16: error: Expression type contains "Any" (has type
"type[BalanceValidationError]")  [misc]
            except BalanceValidationError:
                   ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:530:5: error: Explicit "Any" is not allowed
[explicit-any]
        def get_balance_validation_status(self) -> dict[str, Any]:
        ^
bot/exchange/base.py:537:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/exchange/base.py:548:74: error: Missing type parameters for generic type
"dict"  [type-arg]
    ...change_error_fallback(self, error: Exception, _context: dict) -> None:
                                                               ^
bot/exchange/base.py:557:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    {"error": str(error), "component": "exchange"},
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:563:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    {"error": str(error), "component": "exchange"},
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:567:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _connection_fallback(self, *_args, **_kwargs) -> bool:
        ^
bot/exchange/base.py:572:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _trading_fallback(self, *_args, **_kwargs) -> Order | No...
        ^
bot/exchange/base.py:586:9: error: Returning Any from function declared to
return "bool"  [no-any-return]
            return await graceful_degradation.execute_with_fallback(
            ^
bot/exchange/base.py:586:16: error: Expression has type "Any"  [misc]
            return await graceful_degradation.execute_with_fallback(
                   ^
bot/exchange/base.py:586:22: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, Any]")  [misc]
            return await graceful_degradation.execute_with_fallback(
                         ^
bot/exchange/base.py:617:16: error: Expression type contains "Any" (has type
"Literal[False] | list[tuple[int, str, Any, datetime]]")  [misc]
                if success and saga.completed_steps:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:617:28: error: Expression type contains "Any" (has type
"list[tuple[int, str, Any, datetime]]")  [misc]
                if success and saga.completed_steps:
                               ^~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:619:41: error: Expression type contains "Any" (has type
"list[tuple[int, str, Any, datetime]]")  [misc]
                    _, _, order_result, _ = saga.completed_steps[0]
                                            ^~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:619:41: error: Expression type contains "Any" (has type
"tuple[int, str, Any, datetime]")  [misc]
                    _, _, order_result, _ = saga.completed_steps[0]
                                            ^~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:619:41: error: Expression has type "Any"  [misc]
                    _, _, order_result, _ = saga.completed_steps[0]
                                            ^
bot/exchange/base.py:620:17: error: Returning Any from function declared to
return "Order | None"  [no-any-return]
                    return order_result
                    ^~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:620:24: error: Expression has type "Any"  [misc]
                    return order_result
                           ^~~~~~~~~~~~
bot/exchange/base.py:628:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    {
                    ^
bot/exchange/base.py:629:21: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                        "trade_action": trade_action.__dict__,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:629:37: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        "trade_action": trade_action.__dict__,
                                        ^~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:632:21: error: Expression type contains "Any" (has type
"tuple[str, dict[str, Any]]")  [misc]
                        "saga_status": saga.get_status(),
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:632:36: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        "saga_status": saga.get_status(),
                                       ^~~~~~~~~~~~~~~~~
bot/exchange/base.py:641:17: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                    {"symbol": symbol, "action": trade_action.action},
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:780:5: error: Explicit "Any" is not allowed
[explicit-any]
        def get_connection_status(self) -> dict[str, Any]:
        ^
bot/exchange/base.py:854:13: error: Returning Any from function declared to
return "Order | None"  [no-any-return]
                return await graceful_degradation.execute_with_fallback(
                ^
bot/exchange/base.py:854:20: error: Expression has type "Any"  [misc]
                return await graceful_degradation.execute_with_fallback(
                       ^
bot/exchange/base.py:854:26: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, Any]")  [misc]
                return await graceful_degradation.execute_with_fallback(
                             ^
bot/exchange/base.py:871:13: error: Returning Any from function declared to
return "Order | None"  [no-any-return]
                return await graceful_degradation.execute_with_fallback(
                ^
bot/exchange/base.py:871:20: error: Expression has type "Any"  [misc]
                return await graceful_degradation.execute_with_fallback(
                       ^
bot/exchange/base.py:871:26: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, Any]")  [misc]
                return await graceful_degradation.execute_with_fallback(
                             ^
bot/exchange/base.py:891:41: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        validation_result = await self.validate_balance_up...
                                            ^
bot/exchange/base.py:891:47: error: Expression type contains "Any" (has type
"Coroutine[Any, Any, dict[str, Any]]")  [misc]
                        validation_result = await self.validate_balance_up...
                                                  ^
bot/exchange/base.py:894:34: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                            metadata={
                                     ^
bot/exchange/base.py:899:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        if not validation_result["valid"]:
                               ^~~~~~~~~~~~~~~~~
bot/exchange/base.py:899:28: error: Expression has type "Any"  [misc]
                        if not validation_result["valid"]:
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:903:29: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                                validation_result.get("error", {}).get(
                                ^~~~~~~~~~~~~~~~~
bot/exchange/base.py:903:29: error: Expression type contains "Any" (has type
"Any | dict[Never, Never]")  [misc]
                                validation_result.get("error", {}).get(
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:903:29: error: No overload variant of "get" of "dict"
matches argument types "str", "str"  [call-overload]
                                validation_result.get("error", {}).get(
                                ^
bot/exchange/base.py:903:29: note: Possible overload variants:
bot/exchange/base.py:903:29: note:     def get(self, Never, None = ..., /) -> None
bot/exchange/base.py:903:29: note:     def get(self, Never, Never, /) -> Never
bot/exchange/base.py:903:29: note:     def [_T] get(self, Never, _T, /) -> _T
bot/exchange/base.py:903:29: error: Expression has type "Any"  [misc]
                                validation_result.get("error", {}).get(
                                ^
bot/exchange/base.py:910:21: error: Returning Any from function declared to
return "Decimal"  [no-any-return]
                        return validation_result.get("balance", balance)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:910:28: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        return validation_result.get("balance", balance)
                               ^~~~~~~~~~~~~~~~~
bot/exchange/base.py:910:28: error: Expression has type "Any"  [misc]
                        return validation_result.get("balance", balance)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:912:24: error: Expression type contains "Any" (has type
"type[BalanceValidationError]")  [misc]
                    except BalanceValidationError:
                           ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/base.py:921:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        {"account_type": str(account_type) if account_type...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/base.py:940:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        {"symbol": symbol},
                        ^~~~~~~~~~~~~~~~~~
bot/exchange/base.py:948:5: error: Explicit "Any" is not allowed
[explicit-any]
        def get_error_boundary_status(self) -> dict[str, Any]:
        ^
bot/exchange/base.py:950:16: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
            return {
                   ^
bot/exchange/base.py:959:13: error: Expression type contains "Any" (has type
"tuple[str, dict[Any, Any]]")  [misc]
                "service_health": {
                ^
bot/exchange/base.py:959:31: error: Expression type contains "Any" (has type
"dict[Any, Any]")  [misc]
                "service_health": {
                                  ^
bot/exchange/base.py:961:21: error: Expression type contains "Any" (has type
"dict[str, Any]")  [misc]
                        graceful_degradation.get_service_status(service_na...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/base.py:961:21: error: Expression type contains "Any" (has type
"dict[str, Any] | None")  [misc]
                        graceful_degradation.get_service_status(service_na...
                        ^
bot/websocket_publisher.py:22:5: error: Module "websockets.client" has no
attribute "WebSocketClientProtocol"; maybe "ClientProtocol"?  [attr-defined]
        from websockets.client import WebSocketClientProtocol
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/websocket_publisher.py:30:5: error: Function is missing a type annotation
[no-untyped-def]
        def default(self, obj):
        ^
bot/websocket_publisher.py:34:56: error: Right operand of "or" is never
evaluated  [unreachable]
    ...  if isinstance(obj, datetime | pd.Timestamp) or hasattr(obj, "isoform...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
bot/websocket_publisher.py:36:9: error: Statement is unreachable  [unreachable]
            if hasattr(obj, "__dict__"):  # pydantic models and other obje...
            ^
bot/websocket_publisher.py:91:9: error: Type of variable becomes "Any | None"
due to an unfollowed import  [no-any-unimported]
            self._ws: WebSocketClientProtocol | None = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/websocket_publisher.py:99:26: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._ping_task: asyncio.Task | None = None
                             ^
bot/websocket_publisher.py:100:40: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._connection_monitor_task: asyncio.Task | None = None
                                           ^
bot/websocket_publisher.py:101:36: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._auto_reconnect_task: asyncio.Task | None = None
                                       ^
bot/websocket_publisher.py:102:30: error: Missing type parameters for generic
type "Queue"  [type-arg]
            self._message_queue: asyncio.Queue = asyncio.Queue(maxsize=sel...
                                 ^
bot/websocket_publisher.py:103:31: error: Missing type parameters for generic
type "Queue"  [type-arg]
            self._priority_queue: asyncio.Queue = asyncio.Queue(
                                  ^
bot/websocket_publisher.py:106:34: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._queue_worker_task: asyncio.Task | None = None
                                     ^
bot/websocket_publisher.py:773:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _get_next_message(self):
        ^
bot/websocket_publisher.py:793:5: error: Function is missing a type annotation
[no-untyped-def]
        def _handle_message_when_disconnected(self, message):
        ^
bot/websocket_publisher.py:801:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _send_message_with_error_handling(self, message):
        ^
bot/websocket_publisher.py:809:19: error: Item "None" of "Any | None" has no
attribute "send"  [union-attr]
                await self._ws.send(json_data)
                      ^~~~~~~~~~~~~
bot/websocket_publisher.py:822:5: error: Function is missing a type annotation
[no-untyped-def]
        def _update_send_statistics(self, message):
        ^
bot/websocket_publisher.py:832:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _handle_connection_lost(self, message):
        ^
bot/websocket_publisher.py:869:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        async def publish_system_status(
        ^
bot/websocket_publisher.py:901:37: error: Incompatible default for argument
"market_state" (default has type "None", argument has type "MarketState")
[assignment]
            market_state: MarketState = None,
                                        ^~~~
bot/websocket_publisher.py:901:37: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
bot/websocket_publisher.py:901:37: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
bot/validator.py:28:5: error: Function is missing a return type annotation
[no-untyped-def]
        def __init__(self):
        ^
bot/validator.py:28:5: note: Use "-> None" if function does not return a value
bot/validator.py:384:17: error: Statement is unreachable  [unreachable]
                    original_parsed = {}
                    ^~~~~~~~~~~~~~~~~~~~
bot/order_manager.py:65:47: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self._order_callbacks: dict[str, list[Callable]] = {}
                                                  ^
bot/order_manager.py:69:40: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._timeout_tasks: dict[str, asyncio.Task] = {}
                                           ^
bot/order_manager.py:542:9: error: Function is missing a return type annotation
 [no-untyped-def]
            async def timeout_handler():
            ^
bot/order_manager.py:542:9: note: Use "-> None" if function does not return a value
bot/fee_calculator.py:38:5: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
bot/fee_calculator.py:38:5: note: Use "-> None" if function does not return a value
bot/fee_calculator.py:465:9: error: Returning Any from function declared to
return "dict[str, float]"  [no-any-return]
            return tier
            ^~~~~~~~~~~
bot/fee_calculator.py:467:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_volume_tier(self, monthly_volume: float):
        ^
bot/fee_calculator.py:474:31: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
            self.current_volume = monthly_volume
                                  ^~~~~~~~~~~~~~
bot/fee_calculator.py:506:13: error: Dict entry 7 has incompatible type "str":
"dict[str, float]"; expected "str": "float"  [dict-item]
                "current_tier": self.current_tier,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config_utils.py:15: error: Unused "type: ignore" comment  [unused-ignore]
        psutil = None  # type: ignore[assignment]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/config_utils.py:272:9: error: Statement is unreachable  [unreachable]
            return {"success": True, "error": "Unknown provider"}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/command_consumer.py:78:29: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._polling_task: asyncio.Task | None = None
                                ^
bot/command_consumer.py:103:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self):
        ^
bot/command_consumer.py:103:5: note: Use "-> None" if function does not return a value
bot/command_consumer.py:112:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def close(self):
        ^
bot/command_consumer.py:112:5: note: Use "-> None" if function does not return a value
bot/command_consumer.py:129:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def register_callback(self, command_type: str, callback):
        ^
bot/command_consumer.py:129:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def register_callback(self, command_type: str, callback):
        ^
bot/command_consumer.py:139:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start_polling(self):
        ^
bot/command_consumer.py:139:5: note: Use "-> None" if function does not return a value
bot/command_consumer.py:201:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _poll_for_commands(self):
        ^
bot/command_consumer.py:207:24: error: Item "None" of "ClientSession | None"
has no attribute "get"  [union-attr]
                async with self.session.get(
                           ^~~~~~~~~~~~~~~~
bot/command_consumer.py:236:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _process_command(self, cmd_data: dict[str, Any]):
        ^
bot/command_consumer.py:364:13: error: Statement is unreachable  [unreachable]
                result = False, "Unknown error"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/command_consumer.py:383:9: error: Statement is unreachable  [unreachable]
            return result
            ^~~~~~~~~~~~~
bot/command_consumer.py:385:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_emergency_stop(self, callback) -> tuple[bool, s...
        ^
bot/command_consumer.py:397:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_pause_trading(self, callback) -> tuple[bool, st...
        ^
bot/command_consumer.py:411:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_resume_trading(self, callback) -> tuple[bool, s...
        ^
bot/command_consumer.py:426:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_update_risk_limits(
        ^
bot/command_consumer.py:440:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def _execute_manual_trade(
        ^
bot/command_consumer.py:465:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _report_command_status(self, command_id: str, status: st...
        ^
bot/command_consumer.py:494:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _remove_command_from_queue(self, command_id: str):
        ^
bot/utils/web_search_formatter_example.py:16:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_news_formatting():
    ^
bot/utils/web_search_formatter_example.py:60:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_sentiment_formatting():
    ^
bot/utils/web_search_formatter_example.py:67:9: error: Function is missing a
return type annotation  [no-untyped-def]
            def __init__(self):
            ^
bot/utils/web_search_formatter_example.py:67:9: note: Use "-> None" if function does not return a value
bot/utils/web_search_formatter_example.py:91:65: error: Argument 1 to
"format_sentiment_data" of "WebSearchFormatter" has incompatible type
"MockSentimentResult"; expected "SentimentResult"  [arg-type]
    ...tted_sentiment = await formatter.format_sentiment_data(mock_sentiment)
                                                              ^~~~~~~~~~~~~~
bot/utils/web_search_formatter_example.py:100:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_correlation_formatting():
    ^
bot/utils/web_search_formatter_example.py:107:9: error: Function is missing a
return type annotation  [no-untyped-def]
            def __init__(self):
            ^
bot/utils/web_search_formatter_example.py:107:9: note: Use "-> None" if function does not return a value
bot/utils/web_search_formatter_example.py:127:9: error: Argument 1 to
"format_correlation_analysis" of "WebSearchFormatter" has incompatible type
"MockCorrelationAnalysis"; expected "CorrelationAnalysis"  [arg-type]
            mock_correlation
            ^~~~~~~~~~~~~~~~
bot/utils/web_search_formatter_example.py:137:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_comprehensive_market_context():
    ^
bot/utils/web_search_formatter_example.py:201:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_key_insights_extraction():
    ^
bot/utils/web_search_formatter_example.py:250:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def example_content_optimization():
    ^
bot/utils/web_search_formatter_example.py:305:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def main():
    ^
bot/utils/web_search_formatter_example.py:305:1: note: Use "-> None" if function does not return a value
bot/utils/logging_factory.py:106:43: error: Argument 1 to "addFilter" of
"Filterer" has incompatible type "SensitiveDataFilter | None"; expected
"Filter | Callable[[LogRecord], bool | LogRecord] | _SupportsFilter"  [arg-type]
                    console_handler.addFilter(cls._security_filter)
                                              ^~~~~~~~~~~~~~~~~~~~
bot/utils/logging_factory.py:125:30: error: Argument 1 to "addFilter" of
"Filterer" has incompatible type "SensitiveDataFilter | None"; expected
"Filter | Callable[[LogRecord], bool | LogRecord] | _SupportsFilter"  [arg-type]
                logger.addFilter(cls._security_filter)
                                 ^~~~~~~~~~~~~~~~~~~~
bot/utils/logging_factory.py:167:40: error: Argument 1 to "addFilter" of
"Filterer" has incompatible type "SensitiveDataFilter | None"; expected
"Filter | Callable[[LogRecord], bool | LogRecord] | _SupportsFilter"  [arg-type]
                    file_handler.addFilter(cls._security_filter)
                                           ^~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:31:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/utils/logging_config.py:31:5: note: Use "-> None" if function does not return a value
bot/utils/logging_config.py:44:25: error: Need type annotation for
"setup_results"  [var-annotated]
            setup_results = {
                            ^
bot/utils/logging_config.py:72:13: error: Item "bool" of
"bool | list[Any] | str | None" has no attribute "append"  [union-attr]
                setup_results["errors"].append(f"Primary setup failed: {e}...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:72:13: error: Item "str" of
"bool | list[Any] | str | None" has no attribute "append"  [union-attr]
                setup_results["errors"].append(f"Primary setup failed: {e}...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:72:13: error: Item "None" of
"bool | list[Any] | str | None" has no attribute "append"  [union-attr]
                setup_results["errors"].append(f"Primary setup failed: {e}...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:183:13: error: Unsupported target for indexed
assignment ("object")  [index]
                config["handlers"]["console"] = {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:190:13: error: Value of type "object" is not
indexable  [index]
                config["root"]["handlers"].append("console")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:194:9: error: "object" has no attribute "update"
[attr-defined]
            config["handlers"].update(file_handlers)
            ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_config.py:197:9: error: "object" has no attribute "update"
[attr-defined]
            config["loggers"].update(self._create_logger_configs())
            ^~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:36:5: error: Name "get_balance_alert_manager"
already defined (possibly by an import)  [no-redef]
        get_balance_alert_manager: Callable | None = None
        ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:36:32: error: Missing type parameters for
generic type "Callable"  [type-arg]
        get_balance_alert_manager: Callable | None = None
                                   ^
bot/utils/balance_monitoring.py:37:5: error: Name
"get_balance_metrics_collector" already defined (possibly by an import)
[no-redef]
        get_balance_metrics_collector: Callable | None = None
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:37:36: error: Missing type parameters for
generic type "Callable"  [type-arg]
        get_balance_metrics_collector: Callable | None = None
                                       ^
bot/utils/balance_monitoring.py:38:5: error: Name "record_operation_complete"
already defined (possibly by an import)  [no-redef]
        record_operation_complete: Callable | None = None
        ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:38:32: error: Missing type parameters for
generic type "Callable"  [type-arg]
        record_operation_complete: Callable | None = None
                                   ^
bot/utils/balance_monitoring.py:39:5: error: Name "record_operation_start"
already defined (possibly by an import)  [no-redef]
        record_operation_start: Callable | None = None
        ^~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:39:29: error: Missing type parameters for
generic type "Callable"  [type-arg]
        record_operation_start: Callable | None = None
                                ^
bot/utils/balance_monitoring.py:447:17: error: Unsupported target for indexed
assignment ("object")  [index]
                    summary["metrics"][f"{component}.{operation}"] = self....
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:454:21: error: Unsupported target for indexed
assignment ("object")  [index]
                        summary["metrics"][f"{component}.{op}"] = self._fo...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/balance_monitoring.py:461:21: error: Unsupported target for indexed
assignment ("object")  [index]
                        summary["metrics"][f"{comp}.{op}"] = self._format_...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/__init__.py:38:5: error: Cannot assign to a type  [misc]
        WebSearchFormatter = None
        ^~~~~~~~~~~~~~~~~~
bot/utils/__init__.py:38:26: error: Incompatible types in assignment
(expression has type "None", variable has type "type[WebSearchFormatter]")
[assignment]
        WebSearchFormatter = None
                             ^~~~
bot/utils/__init__.py:39:5: error: Cannot assign to a type  [misc]
        ContentPriority = None
        ^~~~~~~~~~~~~~~
bot/utils/__init__.py:39:23: error: Incompatible types in assignment
(expression has type "None", variable has type "type[ContentPriority]")
[assignment]
        ContentPriority = None
                          ^~~~
bot/utils/__init__.py:40:5: error: Cannot assign to a type  [misc]
        FormattedContent = None
        ^~~~~~~~~~~~~~~~
bot/utils/__init__.py:40:24: error: Incompatible types in assignment
(expression has type "None", variable has type "type[FormattedContent]")
[assignment]
        FormattedContent = None
                           ^~~~
bot/strategy/llm_cache.py:207:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _start_cleanup_task(self):
        ^
bot/strategy/llm_cache.py:207:5: note: Use "-> None" if function does not return a value
bot/strategy/llm_cache.py:216:38: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
                    self._cleanup_task = asyncio.create_task(self._periodi...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/llm_cache.py:223:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _periodic_cleanup(self):
        ^
bot/strategy/llm_cache.py:223:5: note: Use "-> None" if function does not return a value
bot/strategy/llm_cache.py:234:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _cleanup_expired_entries(self):
        ^
bot/strategy/llm_cache.py:263:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        async def get_or_compute(
        ^
bot/strategy/llm_cache.py:327:9: error: Returning Any from function declared to
return "TradeAction"  [no-any-return]
            return response
            ^~~~~~~~~~~~~~~
bot/strategy/llm_cache.py:352:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _store_response(
        ^
bot/strategy/llm_cache.py:444:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def clear_cache(self):
        ^
bot/strategy/llm_cache.py:444:5: note: Use "-> None" if function does not return a value
bot/strategy/llm_cache.py:459:5: error: Function is missing a type annotation
[no-untyped-def]
        def __del__(self):
        ^
bot/strategy/llm_cache.py:462:13: error: Statement is unreachable
[unreachable]
                self._cleanup_task.cancel()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/inventory_manager.py:750:29: error: Argument "action_type" to
"RebalancingAction" has incompatible type "str"; expected
"Literal['BUY', 'SELL', 'HOLD']"  [arg-type]
                    action_type=action_type,
                                ^~~~~~~~~~~
bot/strategy/inventory_manager.py:778:29: error: Argument "action_type" to
"RebalancingAction" has incompatible type "str"; expected
"Literal['BUY', 'SELL', 'HOLD']"  [arg-type]
                    action_type=action_type,
                                ^~~~~~~~~~~
bot/strategy/inventory_manager.py:879:25: error: Argument "action_type" to
"RebalancingAction" has incompatible type "str"; expected
"Literal['BUY', 'SELL', 'HOLD']"  [arg-type]
                action_type=action_type,
                            ^~~~~~~~~~~
bot/strategy/inventory_manager.py:881:21: error: Argument "urgency" to
"RebalancingAction" has incompatible type "str"; expected
"Literal['LOW', 'MEDIUM', 'HIGH', 'EMERGENCY']"  [arg-type]
                urgency=urgency,
                        ^~~~~~~
bot/strategy/core.py:29:5: error: Function is missing a return type annotation
[no-untyped-def]
        def __init__(self):
        ^
bot/strategy/core.py:29:5: note: Use "-> None" if function does not return a value
bot/strategy/core.py:62:73: error: Missing type parameters for generic type
"dict"  [type-arg]
    ...trategy_error_fallback(self, error: Exception, context: dict) -> None:
                                                               ^
bot/strategy/core.py:212:5: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def _determine_action(self, market_bias: str, current_position) ->...
        ^
bot/strategy/core.py:276:16: error: Incompatible return value type (got
"float", expected "int")  [return-value]
            return size_pct
                   ^~~~~~~~
bot/monitoring/bluefin_health_monitor.py:97:40: error: Missing type parameters
for generic type "Task"  [type-arg]
            self.monitoring_task: Optional[asyncio.Task] = None
                                           ^
bot/mcp/omnisearch_client.py:251:17: error: Item "None" of "str | None" has no
attribute "omnisearch"  [union-attr]
                    settings_obj.omnisearch, "server_url", "http://localho...
                    ^~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/omnisearch_client.py:254:17: error: Item "None" of "str | None" has no
attribute "omnisearch"  [union-attr]
                    settings_obj.omnisearch.api_key.get_secret_value()
                    ^~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/omnisearch_client.py:255:20: error: Item "None" of "str | None" has no
attribute "omnisearch"  [union-attr]
                    if settings_obj.omnisearch.api_key
                       ^~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/omnisearch_client.py:797:21: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                        return await response.json()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/mcp/omnisearch_client.py:942:1: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
bot/mcp/omnisearch_client.py:942:1: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_service_client.py:55:5: error: Function is missing a
return type annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
bot/exchange/bluefin_service_client.py:60:5: error: Function is missing a type
annotation  [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, _exc_tb):
        ^
bot/exchange/bluefin_service_client.py:64:5: error: Function is missing a
return type annotation  [no-untyped-def]
        async def initialize(self):
        ^
bot/exchange/bluefin_service_client.py:64:5: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_service_client.py:76:5: error: Function is missing a
return type annotation  [no-untyped-def]
        async def close(self):
        ^
bot/exchange/bluefin_service_client.py:76:5: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_service_client.py:114:13: error: Statement is unreachable
[unreachable]
                if current_time - self._last_health_check < self._health_c...
                ^
bot/exchange/bluefin_service_client.py:121:24: error: Item "None" of
"ClientSession | None" has no attribute "get"  [union-attr]
                async with self._session.get(f"{self.base_url}/health") as...
                           ^~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:122:43: error: Incompatible types in
assignment (expression has type "bool | Any", variable has type "None")
[assignment]
                    self._service_available = response.status == 200
                                              ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:123:43: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                    self._last_health_check = current_time
                                              ^~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:126:21: error: Statement is unreachable
[unreachable]
                        logger.debug("Bluefin service health check: OK")
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:133:24: error: Incompatible return value
type (got "None", expected "bool")  [return-value]
                    return self._service_available
                           ^~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:139:39: error: Incompatible types in
assignment (expression has type "bool", variable has type "None")  [assignment]
                self._service_available = False
                                          ^~~~~
bot/exchange/bluefin_service_client.py:140:39: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                self._last_health_check = current_time
                                          ^~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:145:39: error: Incompatible types in
assignment (expression has type "bool", variable has type "None")  [assignment]
                self._service_available = False
                                          ^~~~~
bot/exchange/bluefin_service_client.py:146:39: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                self._last_health_check = current_time
                                          ^~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:151:39: error: Incompatible types in
assignment (expression has type "bool", variable has type "None")  [assignment]
                self._service_available = False
                                          ^~~~~
bot/exchange/bluefin_service_client.py:152:39: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                self._last_health_check = current_time
                                          ^~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:155:5: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def _make_request(
        ^
bot/exchange/bluefin_service_client.py:155:5: error: Missing return statement
[return]
        async def _make_request(
        ^
bot/exchange/bluefin_service_client.py:187:28: error: Item "None" of
"ClientSession | None" has no attribute "request"  [union-attr]
                    async with self._session.request(
                               ^~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:191:25: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                            return await response.json()
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_service_client.py:310:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def close_bluefin_service_client():
    ^
bot/exchange/bluefin_service_client.py:310:1: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_client.py:308:5: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _validate_parameters(self, **kwargs) -> bool:
        ^
bot/exchange/bluefin_client.py:403: error: Unused "type: ignore" comment
[unused-ignore]
                    self.balance_performance_metrics["balance_response_tim...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:408: error: Unused "type: ignore" comment
[unused-ignore]
                        len(self.balance_performance_metrics["balance_resp...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:411: error: Unused "type: ignore" comment
[unused-ignore]
                        self.balance_performance_metrics["balance_response...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:412: error: Unused "type: ignore" comment
[unused-ignore]
                            self.balance_performance_metrics["balance_resp...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:419: error: Unused "type: ignore" comment
[unused-ignore]
                    self.balance_performance_metrics["average_balance_resp...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:423: error: Unused "type: ignore" comment
[unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:433: error: Unused "type: ignore" comment
[unused-ignore]
                        not in self.balance_performance_metrics["balance_e...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:435: error: Unused "type: ignore" comment
[unused-ignore]
                        self.balance_performance_metrics["balance_error_co...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:438: error: Unused "type: ignore" comment
[unused-ignore]
                    self.balance_performance_metrics["balance_error_counts...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:643:36: error: Incompatible types in assignment
(expression has type "str", variable has type "None")  [assignment]
            self.last_successful_url = url
                                       ^~~
bot/exchange/bluefin_client.py:716:13: error: Statement is unreachable
[unreachable]
                if await self._try_connect_to_url(self.last_successful_url...
                ^
bot/exchange/bluefin_client.py:740:5: error: Name "_is_circuit_open" already
defined on line 600  [no-redef]
        def _is_circuit_open(self) -> bool:
        ^
bot/exchange/bluefin_client.py:826:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _record_success(self):
        ^
bot/exchange/bluefin_client.py:826:5: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_client.py:836:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _record_failure(self):
        ^
bot/exchange/bluefin_client.py:836:5: note: Use "-> None" if function does not return a value
bot/exchange/bluefin_client.py:908:9: error: Returning Any from function
declared to return "float"  [no-any-return]
            return final_delay
            ^~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:910:5: error: Function is missing a type
annotation  [no-untyped-def]
        async def _retry_request(self, func, *args, **kwargs):
        ^
bot/exchange/bluefin_client.py:974:34: error: Incompatible types in assignment
(expression has type "Exception", variable has type
"TimeoutError | ClientError | None")  [assignment]
                    last_exception = e
                                     ^
bot/exchange/bluefin_client.py:1696:13: error: Returning Any from function
declared to return "list[dict[str, Any]]"  [no-any-return]
                return positions
                ^~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:1973:17: error: Returning Any from function
declared to return "list[list[Any]]"  [no-any-return]
                    return candles
                    ^~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:2169:33: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                                    return data
                                    ^~~~~~~~~~~
bot/exchange/bluefin_client.py:2845:17: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                    status["performance"]["p95_response_time_ms"] = (
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:2848:17: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                    status["performance"]["p99_response_time_ms"] = (
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:2859:13: error: List comprehension has
incompatible type List[dict[str, Any]]; expected List[str]  [misc]
                {
                ^
bot/exchange/bluefin_client.py:2956:9: error: Need type annotation for
"recommendations" (hint: "recommendations: list[<type>] = ...")  [var-annotated]
            recommendations = []
            ^~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3109:9: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
            test_results["tests"]["basic_connectivity"] = (
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3112:9: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
            test_results["tests"][
            ^
bot/exchange/bluefin_client.py:3117:9: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
            test_results["tests"]["authentication"] = auth_result
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3118:9: error: "Collection[str]" has no
attribute "extend"  [attr-defined]
            test_results["recommendations"].extend(auth_recommendations)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3121:9: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
            test_results["tests"]["performance"] = perf_result
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3122:9: error: "Collection[str]" has no
attribute "extend"  [attr-defined]
            test_results["recommendations"].extend(perf_recommendations)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin_client.py:3126:52: error: "Collection[str]" has no
attribute "values"  [attr-defined]
    ...          test.get("status", "fail") for test in test_results["tests"]...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:3133:46: error: Incompatible types in assignment
(expression has type "float", target has type "Collection[str]")  [assignment]
            test_results["total_test_time_ms"] = (time.time() - test_start...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:3149:35: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
                recent_success_rate = recent_successes / len(recent_health...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin_client.py:3268:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
bot/exchange/bluefin_client.py:3273:5: error: Function is missing a type
annotation  [no-untyped-def]
        async def __aexit__(self, _exc_type, _exc_val, _exc_tb):
        ^
bot/data/market.py:32:34: error: Class cannot subclass "_BaseClient" (has type
"Any")  [misc]
        class CoinbaseAdvancedTrader(_BaseClient):
                                     ^~~~~~~~~~~
bot/data/market.py:32:34: error: Base type _BaseClient becomes "Any" due to an
unfollowed import  [no-any-unimported]
        class CoinbaseAdvancedTrader(_BaseClient):
                                     ^~~~~~~~~~~
bot/data/market.py:40:9: error: Function is missing a type annotation
[no-untyped-def]
            def __init__(self, **kwargs):
            ^
bot/data/market.py:47: error: Unused "type: ignore[assignment, misc]" comment
[unused-ignore]
        CoinbaseAPIError = MockCoinbaseAPIError  # type: ignore[misc,assig...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/data/market.py:52:9: error: Function is missing a type annotation
[no-untyped-def]
            def build_ws_jwt(_api_key, _api_secret):
            ^
bot/data/market.py:70:5: error: Function is missing a return type annotation
[no-untyped-def]
        def __init__(self):
        ^
bot/data/market.py:70:5: note: Use "-> None" if function does not return a value
bot/data/market.py:75:48: error: Missing type parameters for generic type
"dict"  [type-arg]
        def validate_ticker_message(self, message: dict) -> bool:
                                                   ^
bot/data/market.py:123:47: error: Missing type parameters for generic type
"dict"  [type-arg]
        def validate_trade_message(self, message: dict) -> bool:
                                                  ^
bot/data/market.py:163:45: error: Missing type parameters for generic type
"dict"  [type-arg]
        def _validate_ticker_event(self, event: dict) -> bool:
                                                ^
bot/data/market.py:190:45: error: Missing type parameters for generic type
"dict"  [type-arg]
        def _validate_ticker_data(self, ticker: dict) -> bool:
                                                ^
bot/data/market.py:224:44: error: Missing type parameters for generic type
"dict"  [type-arg]
        def _validate_trade_event(self, event: dict) -> bool:
                                               ^
bot/data/market.py:251:43: error: Missing type parameters for generic type
"dict"  [type-arg]
        def _validate_trade_data(self, trade: dict) -> bool:
                                              ^
bot/data/market.py:315:49: error: Missing type parameters for generic type
"dict"  [type-arg]
        def validate_data_quality(self, price_data: dict, symbol: str) -> ...
                                                    ^
bot/data/market.py:363:48: error: Missing type parameters for generic type
"dict"  [type-arg]
        def validate_message_timing(self, message: dict) -> bool:
                                                   ^
bot/data/market.py:448:24: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._ws_task: asyncio.Task | None = None
                           ^
bot/data/market.py:455:30: error: Missing type parameters for generic type
"Queue"  [type-arg]
            self._message_queue: asyncio.Queue = asyncio.Queue(maxsize=100...
                                 ^
bot/data/market.py:456:32: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._processing_task: asyncio.Task | None = None
                                   ^
bot/data/market.py:460:33: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self._subscribers: list[Callable] = []
                                    ^
bot/data/market.py:463:37: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._background_tasks: set[asyncio.Task] = set()
                                        ^
bot/data/market.py:554:21: error: Returning Any from function declared to
return "str | None"  [no-any-return]
                        return jwt_token
                        ^~~~~~~~~~~~~~~~
bot/data/market.py:639:13: error: Statement is unreachable  [unreachable]
                await self._ws_connection.close()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/market.py:1534:13: error: Returning Any from function declared to
return "Decimal | None"  [no-any-return]
                return self._price_cache["price"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/market.py:1542:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def to_dataframe(self, limit: int | None = None) -> pd.DataFrame:
        ^
bot/data/market.py:1623:52: error: Missing type parameters for generic type
"Callable"  [type-arg]
    ...  async def _safe_callback_async(self, callback: Callable, data: Marke...
                                                        ^
bot/data/market.py:1630:51: error: Missing type parameters for generic type
"Callable"  [type-arg]
    ...   async def _safe_callback_sync(self, callback: Callable, data: Marke...
                                                        ^
bot/data/market.py:1689:40: error: Right operand of "and" is never evaluated
[unreachable]
                if self._ws_connection and hasattr(self._ws_connection, "s...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/data/market.py:1690:17: error: Statement is unreachable  [unreachable]
                    ws_state = self._ws_connection.state
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/market.py:1708:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/data/market.py:2062:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def get_historical_data(
        ^
bot/data/market.py:2114:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def get_latest_ohlcv_dataframe(self, limit: int | None = None) -> ...
        ^
bot/data/market.py:2157:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _to_dataframe(self, data: list[MarketData]) -> pd.DataFrame:
        ^
bot/data/dominance.py:103:28: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._update_task: asyncio.Task | None = None
                               ^
bot/data/dominance.py:116:5: error: Function is missing a type annotation
[no-untyped-def]
        def __del__(self):
        ^
bot/data/dominance.py:126:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
bot/data/dominance.py:131:5: error: Function is missing a type annotation
[no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, _exc_tb):
        ^
bot/data/dominance.py:137:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _cleanup_all_instances(cls):
        ^
bot/data/dominance.py:137:5: note: Use "-> None" if function does not return a value
bot/data/dominance.py:146:21: error: Item "None" of "BaseConnector | None" has
no attribute "close"  [union-attr]
                        instance._session._connector.close()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/dominance.py:212:13: error: Statement is unreachable  [unreachable]
                logger.exception("Error fetching dominance data: %s")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/dominance.py:564:9: error: Need type annotation for "factors" (hint:
"factors: list[<type>] = ...")  [var-annotated]
            factors = []
            ^~~~~~~
bot/data/dominance.py:663:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def to_dataframe(self, hours: int = 24) -> pd.DataFrame:
        ^
bot/data/dominance.py:1792:13: error: Statement is unreachable  [unreachable]
                missing_fields.append("stablecoin_dominance")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/dominance.py:1794:13: error: Statement is unreachable  [unreachable]
                missing_fields.append("total_stablecoin_cap")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/dominance.py:1796:13: error: Statement is unreachable  [unreachable]
                missing_fields.append("crypto_total_market_cap")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/dominance.py:1913:17: error: Function is missing a type annotation
[no-untyped-def]
                    def format_value(value, default=""):
                    ^
bot/data/dominance.py:2082:64: error: Missing type parameters for generic type
"list"  [type-arg]
    ... candle: DominanceCandleData, index: int, errors: list, warnings: list
                                                         ^
bot/data/dominance.py:2118:22: error: Missing type parameters for generic type
"list"  [type-arg]
            all_candles: list,
                         ^
bot/data/dominance.py:2119:17: error: Missing type parameters for generic type
"list"  [type-arg]
            errors: list,
                    ^
bot/data/dominance.py:2120:19: error: Missing type parameters for generic type
"list"  [type-arg]
            warnings: list,
                      ^
bot/data/dominance.py:2144:64: error: Missing type parameters for generic type
"list"  [type-arg]
    ... candle: DominanceCandleData, index: int, errors: list, warnings: list
                                                         ^
bot/data/dominance.py:2177:64: error: Missing type parameters for generic type
"list"  [type-arg]
    ... candle: DominanceCandleData, index: int, errors: list, warnings: list
                                                         ^
bot/data/dominance.py:2211:64: error: Missing type parameters for generic type
"list"  [type-arg]
    ...candle: DominanceCandleData, index: int, errors: list, _warnings: list
                                                        ^
bot/data/dominance.py:2251:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _validate_volume_consistency(
        ^
bot/data/dominance.py:2252:66: error: Missing type parameters for generic type
"list"  [type-arg]
            self, candle: DominanceCandleData, index: int, warnings: list
                                                                     ^
bot/data/dominance.py:2373:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_sample_dominance_snapshots():
    ^
bot/data/dominance.py:2419:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_data_integrity(builder, snapshots):
    ^
bot/data/dominance.py:2438:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_candle_building(builder):
    ^
bot/data/dominance.py:2470:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_technical_indicators(builder, candles):
    ^
bot/data/dominance.py:2490:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_candle_validation(builder, updated_candles):
    ^
bot/data/dominance.py:2520:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_statistics_generation(builder, updated_candles):
    ^
bot/data/dominance.py:2552:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_tradingview_export(builder, updated_candles):
    ^
bot/data/dominance.py:2585:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_edge_cases(builder):
    ^
bot/data/dominance.py:2612:1: error: Function is missing a type annotation
[no-untyped-def]
    def _test_performance(base_time):
    ^
bot/data/dominance.py:2668:1: error: Function is missing a type annotation
[no-untyped-def]
    def _generate_final_summary(
    ^
bot/data/dominance.py:2716:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def test_dominance_candlestick_functionality():
    ^
bot/health.py:47:13: error: Returning Any from function declared to return
"dict[str, Any]"  [no-any-return]
                return self._cache[cache_key]["data"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/health.py:67:13: error: Returning Any from function declared to return
"dict[str, Any]"  [no-any-return]
                return self._cache[cache_key]["data"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/health.py:161:9: error: Returning Any from function declared to return
"bool"  [no-any-return]
            return age < self._cache_ttl
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/service_startup.py:96:50: error: Argument 2 to "ServiceStatus" has
incompatible type "float | Any | bool"; expected "bool"  [arg-type]
                status = ServiceStatus(service_name, config["required"])
                                                     ^~~~~~~~~~~~~~~~~~
bot/utils/service_startup.py:142:28: error: Incompatible types in assignment
(expression has type "BluefinServiceClient | None", variable has type
"WebSocketPublisher | None")  [assignment]
                    instance = await self._start_bluefin_service(max_wait)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/service_startup.py:146:28: error: Incompatible types in assignment
(expression has type "OmniSearchClient | None", variable has type
"WebSocketPublisher | None")  [assignment]
                    instance = await self._start_omnisearch(max_wait)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/service_startup.py:270:43: error: Argument 1 to "OmniSearchClient"
has incompatible type "Settings"; expected "str | None"  [arg-type]
                    client = OmniSearchClient(self.settings)
                                              ^~~~~~~~~~~~~
bot/utils/service_startup.py:295:41: error: Argument 1 to "OmniSearchClient"
has incompatible type "Settings"; expected "str | None"  [arg-type]
                    return OmniSearchClient(self.settings)
                                            ^~~~~~~~~~~~~
bot/utils/service_startup.py:299:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _print_startup_summary(self):
        ^
bot/utils/service_startup.py:299:5: note: Use "-> None" if function does not return a value
bot/utils/service_startup.py:344:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def shutdown_all_services(self, service_instances: dict[str,...
        ^
bot/utils/logging_migration.py:50:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["issues"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:58:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["suggestions"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:68:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["issues"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:76:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["suggestions"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:84:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["issues"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:91:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["suggestions"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:99:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["issues"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:106:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["suggestions"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:123:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["issues"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:130:13: error: "Sequence[str]" has no attribute
"append"  [attr-defined]
                analysis["suggestions"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:297:5: error: Need type annotation for
"python_files" (hint: "python_files: list[<type>] = ...")  [var-annotated]
        python_files = []
        ^~~~~~~~~~~~
bot/utils/logging_migration.py:301:5: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
        results["summary"]["total_files"] = len(python_files)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:308:13: error: Value of type "Collection[str]"
is not indexable  [index]
                results["summary"]["files_with_issues"] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:308:13: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                results["summary"]["files_with_issues"] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:311:17: error: Value of type "Collection[str]"
is not indexable  [index]
                    results["summary"]["high_severity_files"] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:311:17: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                    results["summary"]["high_severity_files"] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:313:17: error: Value of type "Collection[str]"
is not indexable  [index]
                    results["summary"]["medium_severity_files"] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:313:17: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                    results["summary"]["medium_severity_files"] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:315:13: error: "Collection[str]" has no
attribute "append"  [attr-defined]
                results["files"].append(analysis)
                ^~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:321:21: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                        results["common_issues"][issue_type] = 0
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:322:17: error: Value of type "Collection[str]"
is not indexable  [index]
                    results["common_issues"][issue_type] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/logging_migration.py:322:17: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                    results["common_issues"][issue_type] += 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/monitoring/monitoring_dashboard.py:1157:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def run_dashboard():
    ^
bot/monitoring/monitoring_dashboard.py:1157:1: note: Use "-> None" if function does not return a value
bot/monitoring/monitoring_dashboard.py:1167:9: error: Function is missing a
type annotation  [no-untyped-def]
            def signal_handler(signum, _frame):
            ^
bot/monitoring/auto_recovery.py:105:38: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.recovery_task: Optional[asyncio.Task] = None
                                         ^
bot/monitoring/auto_recovery.py:108:54: error: Missing type parameters for
generic type "Callable"  [type-arg]
            self.recovery_handlers: Dict[RecoveryAction, Callable] = {}
                                                         ^
bot/monitoring/auto_recovery.py:321:9: error: Statement is unreachable
[unreachable]
            return False
            ^~~~~~~~~~~~
bot/monitoring/auto_recovery.py:360:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return error_rate > rule.threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/monitoring/auto_recovery.py:370:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return avg_response_time > rule.threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/wavetrend.py:89:5: error: Argument 2 to
"_calculate_adaptive_threshold" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_adaptive_threshold(
        ^
bot/indicators/wavetrend.py:136:5: error: Argument 2 to
"_get_safe_minimum_threshold" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _get_safe_minimum_threshold(self, series: pd.Series) -> float:
        ^
bot/indicators/wavetrend.py:163:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_ema_fallback(self, series: pd.Series, length: int) ...
        ^
bot/indicators/wavetrend.py:163:5: error: Argument 2 to
"_calculate_ema_fallback" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_ema_fallback(self, series: pd.Series, length: int) ...
        ^
bot/indicators/wavetrend.py:190:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_sma_fallback(self, series: pd.Series, length: int) ...
        ^
bot/indicators/wavetrend.py:190:5: error: Argument 2 to
"_calculate_sma_fallback" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_sma_fallback(self, series: pd.Series, length: int) ...
        ^
bot/indicators/wavetrend.py:215:5: error: Return type becomes "tuple[Any, Any]"
due to an unfollowed import  [no-any-unimported]
        def calculate_wavetrend(
        ^
bot/indicators/wavetrend.py:215:5: error: Argument 2 to "calculate_wavetrend"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate_wavetrend(
        ^
bot/indicators/wavetrend.py:285:5: error: Return type becomes "tuple[Any, Any]"
due to an unfollowed import  [no-any-unimported]
        def _handle_calculation_exception(
        ^
bot/indicators/wavetrend.py:285:5: error: Argument 3 to
"_handle_calculation_exception" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _handle_calculation_exception(
        ^
bot/indicators/wavetrend.py:312:5: error: Return type becomes "tuple[Any, Any]"
due to an unfollowed import  [no-any-unimported]
        def _get_empty_wavetrend_result(
        ^
bot/indicators/wavetrend.py:312:5: error: Argument 2 to
"_get_empty_wavetrend_result" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _get_empty_wavetrend_result(
        ^
bot/indicators/wavetrend.py:320:5: error: Return type becomes
"tuple[Any, Any] | None" due to an unfollowed import  [no-any-unimported]
        def _validate_wavetrend_inputs(
        ^
bot/indicators/wavetrend.py:320:5: error: Argument 2 to
"_validate_wavetrend_inputs" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_wavetrend_inputs(
        ^
bot/indicators/wavetrend.py:354:5: error: Return type becomes
"tuple[Any, Any] | None" due to an unfollowed import  [no-any-unimported]
        def _calculate_esa_with_validation(
        ^
bot/indicators/wavetrend.py:354:5: error: Argument 2 to
"_calculate_esa_with_validation" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_esa_with_validation(
        ^
bot/indicators/wavetrend.py:425:5: error: Return type becomes "tuple[Any, Any]"
due to an unfollowed import  [no-any-unimported]
        def _perform_wavetrend_calculation(
        ^
bot/indicators/wavetrend.py:425:5: error: Argument 2 to
"_perform_wavetrend_calculation" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _perform_wavetrend_calculation(
        ^
bot/indicators/wavetrend.py:913:5: error: Return type becomes "dict[str, Any]"
due to an unfollowed import  [no-any-unimported]
        def get_overbought_oversold_conditions(
        ^
bot/indicators/wavetrend.py:913:5: error: Argument 2 to
"get_overbought_oversold_conditions" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_overbought_oversold_conditions(
        ^
bot/indicators/wavetrend.py:1024:5: error: Return type becomes "dict[str, Any]"
due to an unfollowed import  [no-any-unimported]
        def get_cross_conditions(
        ^
bot/indicators/wavetrend.py:1024:5: error: Argument 2 to "get_cross_conditions"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_cross_conditions(
        ^
bot/indicators/wavetrend.py:1024:5: error: Argument 3 to "get_cross_conditions"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_cross_conditions(
        ^
bot/indicators/wavetrend.py:1153:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/wavetrend.py:1153:5: error: Argument 2 to "calculate" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/wavetrend.py:1307:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/wavetrend.py:1385:5: error: Argument 2 to "get_latest_values"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/stochastic_rsi.py:82:5: error: Return type becomes
"tuple[Any, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_stoch_rsi(
        ^
bot/indicators/stochastic_rsi.py:82:5: error: Argument 2 to
"calculate_stoch_rsi" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_stoch_rsi(
        ^
bot/indicators/stochastic_rsi.py:165:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _calculate_stochastic(
        ^
bot/indicators/stochastic_rsi.py:165:5: error: Argument 2 to
"_calculate_stochastic" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_stochastic(
        ^
bot/indicators/stochastic_rsi.py:165:5: error: Argument 3 to
"_calculate_stochastic" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_stochastic(
        ^
bot/indicators/stochastic_rsi.py:165:5: error: Argument 4 to
"_calculate_stochastic" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_stochastic(
        ^
bot/indicators/stochastic_rsi.py:196:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/stochastic_rsi.py:196:5: error: Argument 2 to "calculate"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/stochastic_rsi.py:235:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def get_divergence_points(
        ^
bot/indicators/stochastic_rsi.py:235:5: error: Argument 2 to
"get_divergence_points" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_divergence_points(
        ^
bot/indicators/stochastic_rsi.py:235:5: error: Argument 3 to
"get_divergence_points" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_divergence_points(
        ^
bot/indicators/stochastic_rsi.py:333:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _find_local_extrema(
        ^
bot/indicators/stochastic_rsi.py:333:5: error: Argument 2 to
"_find_local_extrema" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _find_local_extrema(
        ^
bot/indicators/stochastic_rsi.py:369:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def get_cross_signals(self, k: pd.Series, d: pd.Series) -> pd.Seri...
        ^
bot/indicators/stochastic_rsi.py:369:5: error: Argument 2 to
"get_cross_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_cross_signals(self, k: pd.Series, d: pd.Series) -> pd.Seri...
        ^
bot/indicators/stochastic_rsi.py:369:5: error: Argument 3 to
"get_cross_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_cross_signals(self, k: pd.Series, d: pd.Series) -> pd.Seri...
        ^
bot/indicators/stochastic_rsi.py:459:5: error: Argument 2 to
"get_latest_values" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/stochastic_rsi.py:481:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def get_overbought_oversold_levels(
        ^
bot/indicators/stochastic_rsi.py:481:5: error: Argument 2 to
"get_overbought_oversold_levels" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_overbought_oversold_levels(
        ^
bot/indicators/stochastic_rsi.py:481:5: error: Argument 3 to
"get_overbought_oversold_levels" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_overbought_oversold_levels(
        ^
bot/indicators/stochastic_rsi.py:505:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, src: pd.Series) -> None:
        ^
bot/indicators/stochastic_rsi.py:558:5: error: Argument 2 to
"_validate_input_dataframe_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_dataframe_quality(self, df: pd.DataFrame) -> N...
        ^
bot/indicators/schaff_trend_cycle.py:100:5: error: Return type becomes "Any"
due to an unfollowed import  [no-any-unimported]
        def calculate_stc(
        ^
bot/indicators/schaff_trend_cycle.py:100:5: error: Argument 2 to
"calculate_stc" becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate_stc(
        ^
bot/indicators/schaff_trend_cycle.py:359:5: error: Return type becomes "Any"
due to an unfollowed import  [no-any-unimported]
        def _apply_recursive_smoothing(self, series: pd.Series, factor: fl...
        ^
bot/indicators/schaff_trend_cycle.py:359:5: error: Argument 2 to
"_apply_recursive_smoothing" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _apply_recursive_smoothing(self, series: pd.Series, factor: fl...
        ^
bot/indicators/schaff_trend_cycle.py:403:5: error: Return type becomes "Any"
due to an unfollowed import  [no-any-unimported]
        def get_trend_signals(
        ^
bot/indicators/schaff_trend_cycle.py:403:5: error: Argument 2 to
"get_trend_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_trend_signals(
        ^
bot/indicators/schaff_trend_cycle.py:438:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def get_cycle_analysis(self, stc_values: pd.Series) -> dict[str, p...
        ^
bot/indicators/schaff_trend_cycle.py:438:5: error: Argument 2 to
"get_cycle_analysis" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_cycle_analysis(self, stc_values: pd.Series) -> dict[str, p...
        ^
bot/indicators/schaff_trend_cycle.py:495:5: error: Return type becomes "Any"
due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/schaff_trend_cycle.py:495:5: error: Argument 2 to "calculate"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/schaff_trend_cycle.py:647:5: error: Argument 2 to
"get_latest_values" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/schaff_trend_cycle.py:738:5: error: Argument 2 to
"get_trade_suggestions" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_trade_suggestions(self, df: pd.DataFrame) -> list[dict[str...
        ^
bot/indicators/schaff_trend_cycle.py:829:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, src: pd.Series) -> None:
        ^
bot/indicators/schaff_trend_cycle.py:899:5: error: Argument 2 to
"_validate_input_dataframe_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_dataframe_quality(self, df: pd.DataFrame) -> N...
        ^
bot/indicators/schaff_trend_cycle.py:961:5: error: Argument 2 to
"_generate_calculation_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_calculation_summary(self, df: pd.DataFrame) -> dict[...
        ^
bot/indicators/schaff_trend_cycle.py:1055:5: error: Return type becomes "Any"
due to an unfollowed import  [no-any-unimported]
        def _handle_flat_market_conditions(
        ^
bot/indicators/schaff_trend_cycle.py:1055:5: error: Argument 2 to
"_handle_flat_market_conditions" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _handle_flat_market_conditions(
        ^
bot/indicators/ema_ribbon.py:86:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_ema_ribbon(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/ema_ribbon.py:86:5: error: Argument 2 to "calculate_ema_ribbon"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate_ema_ribbon(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/ema_ribbon.py:310:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_ribbon_direction(self, df: pd.DataFrame) -> pd.DataF...
        ^
bot/indicators/ema_ribbon.py:310:5: error: Argument 2 to
"calculate_ribbon_direction" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_ribbon_direction(self, df: pd.DataFrame) -> pd.DataF...
        ^
bot/indicators/ema_ribbon.py:452:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_crossover_signals(self, df: pd.DataFrame) -> pd.Data...
        ^
bot/indicators/ema_ribbon.py:452:5: error: Argument 2 to
"calculate_crossover_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_crossover_signals(self, df: pd.DataFrame) -> pd.Data...
        ^
bot/indicators/ema_ribbon.py:567:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_cross_patterns(self, df: pd.DataFrame) -> pd.DataFra...
        ^
bot/indicators/ema_ribbon.py:567:5: error: Argument 2 to
"calculate_cross_patterns" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_cross_patterns(self, df: pd.DataFrame) -> pd.DataFra...
        ^
bot/indicators/ema_ribbon.py:599:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_triangle_signals(self, df: pd.DataFrame) -> pd.DataF...
        ^
bot/indicators/ema_ribbon.py:599:5: error: Argument 2 to
"calculate_triangle_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_triangle_signals(self, df: pd.DataFrame) -> pd.DataF...
        ^
bot/indicators/ema_ribbon.py:635:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def get_ribbon_analysis(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/ema_ribbon.py:635:5: error: Argument 2 to "get_ribbon_analysis"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_ribbon_analysis(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/ema_ribbon.py:745:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_overall_signal(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/ema_ribbon.py:745:5: error: Argument 2 to
"_calculate_overall_signal" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_overall_signal(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/ema_ribbon.py:778:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _detect_crossover(self, series1: pd.Series, series2: pd.Series...
        ^
bot/indicators/ema_ribbon.py:778:5: error: Argument 2 to "_detect_crossover"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _detect_crossover(self, series1: pd.Series, series2: pd.Series...
        ^
bot/indicators/ema_ribbon.py:778:5: error: Argument 3 to "_detect_crossover"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _detect_crossover(self, series1: pd.Series, series2: pd.Series...
        ^
bot/indicators/ema_ribbon.py:801:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _detect_crossunder(self, series1: pd.Series, series2: pd.Serie...
        ^
bot/indicators/ema_ribbon.py:801:5: error: Argument 2 to "_detect_crossunder"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _detect_crossunder(self, series1: pd.Series, series2: pd.Serie...
        ^
bot/indicators/ema_ribbon.py:801:5: error: Argument 3 to "_detect_crossunder"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _detect_crossunder(self, series1: pd.Series, series2: pd.Serie...
        ^
bot/indicators/ema_ribbon.py:824:5: error: Argument 2 to "get_latest_values"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/ema_ribbon.py:917:5: error: Argument 2 to "validate_data"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def validate_data(self, df: pd.DataFrame) -> tuple[bool, str]:
        ^
bot/indicators/ema_ribbon.py:982:5: error: Argument 2 to "get_signal_summary"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_signal_summary(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/ema_ribbon.py:1029:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/ema_ribbon.py:1089:5: error: Argument 2 to
"_generate_signal_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_signal_summary(self, df: pd.DataFrame) -> dict[str, ...
        ^
bot/indicators/ema_ribbon.py:1179:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _handle_flat_market_conditions(self, df: pd.DataFrame) -> pd.D...
        ^
bot/indicators/ema_ribbon.py:1179:5: error: Argument 2 to
"_handle_flat_market_conditions" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _handle_flat_market_conditions(self, df: pd.DataFrame) -> pd.D...
        ^
bot/exchange/coinbase.py:31:34: error: Class cannot subclass "_BaseClient" (has
type "Any")  [misc]
        class CoinbaseAdvancedTrader(_BaseClient):
                                     ^~~~~~~~~~~
bot/exchange/coinbase.py:31:34: error: Base type _BaseClient becomes "Any" due
to an unfollowed import  [no-any-unimported]
        class CoinbaseAdvancedTrader(_BaseClient):
                                     ^~~~~~~~~~~
bot/exchange/coinbase.py:35:9: error: Function is missing a type annotation
[no-untyped-def]
            def get_fcm_balance_summary(self, **kwargs):
            ^
bot/exchange/coinbase.py:38:9: error: Function is missing a type annotation
[no-untyped-def]
            def get_fcm_positions(self, **kwargs):
            ^
bot/exchange/coinbase.py:42: error: Unused "type: ignore" comment
[unused-ignore]
            def get_accounts(self, *args, **kwargs):  # type: ignore[overr...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:42:9: error: Function is missing a type annotation
[no-untyped-def]
            def get_accounts(self, *args, **kwargs):  # type: ignore[overr...
            ^
bot/exchange/coinbase.py:42:9: note: Error code "no-untyped-def" not covered by "type: ignore" comment
bot/exchange/coinbase.py:48: error: Unused "type: ignore" comment
[unused-ignore]
                    accounts = resp.accounts  # type: ignore[attr-defined]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:68: error: Unused "type: ignore" comment
[unused-ignore]
                CoinbaseAdvancedTrader as _FallbackTrader,  # type: ignore...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/coinbase.py:70: error: Unused "type: ignore" comment
[unused-ignore]
            from coinbase_advanced_trader.exceptions import (  # type: ign...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/coinbase.py:89: error: Unused "type: ignore" comment
[unused-ignore]
            class CoinbaseAdvancedTrader:  # type: ignore[misc]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:89:9: error: Name "CoinbaseAdvancedTrader" already
defined on line 31  [no-redef]
            class CoinbaseAdvancedTrader:  # type: ignore[misc]
            ^
bot/exchange/coinbase.py:89:9: note: Error code "no-redef" not covered by "type: ignore" comment
bot/exchange/coinbase.py:90:13: error: Function is missing a type annotation
[no-untyped-def]
                def __init__(self, **kwargs):
                ^
bot/exchange/coinbase.py:141:5: error: Function is missing a type annotation
[no-untyped-def]
        def __init__(self, failure_callback=None):
        ^
bot/exchange/coinbase.py:152:51: error: Missing type parameters for generic
type "dict"  [type-arg]
        def validate_account_response(self, response: dict) -> bool:
                                                      ^
bot/exchange/coinbase.py:167:17: error: Statement is unreachable  [unreachable]
                    logger.warning("Account response is not a dictionary")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:187:51: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...   def validate_balance_response(self, response: dict | object) -> boo...
                                                        ^
bot/exchange/coinbase.py:216:27: error: "object" has no attribute
"balance_summary"  [attr-defined]
            balance_summary = response.balance_summary
                              ^~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:228:57: error: Missing type parameters for generic
type "dict"  [type-arg]
        def _validate_dict_balance_response(self, response: dict) -> bool:
                                                            ^
bot/exchange/coinbase.py:249:49: error: Missing type parameters for generic
type "dict"  [type-arg]
        def validate_order_response(self, response: dict | object) -> bool...
                                                    ^
bot/exchange/coinbase.py:309:52: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...  def validate_position_response(self, response: dict | object) -> boo...
                                                        ^
bot/exchange/coinbase.py:349:47: error: Missing type parameters for generic
type "dict"  [type-arg]
        def _validate_account_data(self, account: dict) -> bool:
                                                  ^
bot/exchange/coinbase.py:396:49: error: Missing type parameters for generic
type "dict"  [type-arg]
        def _validate_position_data(self, position: dict | object) -> bool...
                                                    ^
bot/exchange/coinbase.py:468:53: error: Missing type parameters for generic
type "dict"  [type-arg]
    ... def _validate_exchange_response(self, response: dict | object) -> boo...
                                                        ^
bot/exchange/coinbase.py:485:17: error: Statement is unreachable  [unreachable]
                    logger.warning("Invalid response type: %s", type(respo...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/coinbase.py:513:58: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...validate_order_creation_response(self, response: dict | object) -> boo...
                                                        ^
bot/exchange/coinbase.py:574:62: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...date_order_cancellation_response(self, response: dict | object) -> boo...
                                                        ^
bot/exchange/coinbase.py:837:5: error: Function is missing a type annotation
[no-untyped-def]
        def set_failure_callback(self, callback):
        ^
bot/exchange/coinbase.py:1035:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _retry_request(self, func, *args, **kwargs):
        ^
bot/exchange/coinbase.py:1117:34: error: Incompatible types in assignment
(expression has type "Exception", variable has type
"CoinbaseConnectionError | CoinbaseAPIError | None")  [assignment]
                    last_exception = e
                                     ^
bot/exchange/coinbase.py:1213:13: error: Statement is unreachable
[unreachable]
                return Decimal("0.00")
                ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:1217:13: error: Statement is unreachable
[unreachable]
                try:
                ^
bot/exchange/coinbase.py:1253:13: error: Statement is unreachable
[unreachable]
                return Decimal("0.00000000")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:1257:13: error: Statement is unreachable
[unreachable]
                try:
                ^
bot/exchange/coinbase.py:1320:17: error: Returning Any from function declared
to return "str"  [no-any-return]
                    return cached_contract
                    ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:1329:17: error: Returning Any from function declared
to return "str"  [no-any-return]
                    return active_contract
                    ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:1506:20: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                side = cast(
                       ^
bot/exchange/coinbase.py:1602:16: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
            side = cast(
                   ^
bot/exchange/coinbase.py:1670:16: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
            side = cast(
                   ^
bot/exchange/coinbase.py:1701:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/coinbase.py:1772:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:1790:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:1808:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:1869:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/coinbase.py:1925:26: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                        side=cast("Literal['BUY', 'SELL']", side),
                             ^
bot/exchange/coinbase.py:1968:20: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                side = cast("Literal['BUY', 'SELL']", "SELL")
                       ^
bot/exchange/coinbase.py:1971:20: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                side = cast("Literal['BUY', 'SELL']", "BUY")
                       ^
bot/exchange/coinbase.py:1999:20: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                side = cast("Literal['BUY', 'SELL']", "SELL")
                       ^
bot/exchange/coinbase.py:2002:20: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                side = cast("Literal['BUY', 'SELL']", "BUY")
                       ^
bot/exchange/coinbase.py:2041:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/coinbase.py:2119:26: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                        side=cast("Literal['BUY', 'SELL']", side),
                             ^
bot/exchange/coinbase.py:2177:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/coinbase.py:2259:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:2279:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:2299:30: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                            side=cast("Literal['BUY', 'SELL']", side),
                                 ^
bot/exchange/coinbase.py:2704:13: error: Returning Any from function declared
to return "FuturesAccountInfo | None"  [no-any-return]
                return self._futures_account_info
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/coinbase.py:3466:13: error: Dict entry 4 has incompatible type
"str": "dict[str, float]"; expected "str": "float"  [dict-item]
                "tier": fee_calculator.current_tier,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/price_conversion.py:17:1: error: Need type annotation for
"_ASTRONOMICAL_LOG_COUNTER" (hint:
"_ASTRONOMICAL_LOG_COUNTER: dict[<type>, <type>] = ...")  [var-annotated]
    _ASTRONOMICAL_LOG_COUNTER = {}
    ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/price_conversion.py:21:26: error: Need type annotation for
"_CIRCUIT_BREAKER_STATE"  [var-annotated]
    _CIRCUIT_BREAKER_STATE = {
                             ^
bot/utils/price_conversion.py:148:9: error: Statement is unreachable
[unreachable]
            return Decimal(0)
            ^~~~~~~~~~~~~~~~~
bot/utils/price_conversion.py:320:33: error: Missing type parameters for
generic type "list"  [type-arg]
    def convert_candle_data(candle: list, symbol: str | None = None) -> li...
                                    ^
bot/utils/price_conversion.py:658:17: error: Need type annotation for
"digit_counts" (hint: "digit_counts: dict[<type>, <type>] = ...")
[var-annotated]
                    digit_counts = {}
                    ^~~~~~~~~~~~
bot/utils/price_conversion.py:773:5: error: Returning Any from function
declared to return "bool"  [no-any-return]
        return failure_count >= _CIRCUIT_BREAKER_THRESHOLD
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/price_conversion.py:848:17: error: Returning Any from function
declared to return "Decimal"  [no-any-return]
                    return good_price_data["price"]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_websocket.py:23:5: error: Module "websockets.client" has no
attribute "WebSocketClientProtocol"; maybe "ClientProtocol"?  [attr-defined]
        from websockets.client import WebSocketClientProtocol
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_websocket.py:111:9: error: Type of variable becomes
"Any | None" due to an unfollowed import  [no-any-unimported]
            self._ws: WebSocketClientProtocol | None = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_websocket.py:136:32: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._connection_task: asyncio.Task | None = None
                                   ^
bot/data/bluefin_websocket.py:137:31: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._heartbeat_task: asyncio.Task | None = None
                                  ^
bot/data/bluefin_websocket.py:138:40: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._candle_aggregation_task: asyncio.Task | None = None
                                           ^
bot/data/bluefin_websocket.py:139:39: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._trade_aggregation_task: asyncio.Task | None = None
                                          ^
bot/data/bluefin_websocket.py:187:17: error: Statement is unreachable
[unreachable]
                    self._log_invalid_message(
                    ^
bot/data/bluefin_websocket.py:1619:21: error: Statement is unreachable
[unreachable]
                        break
                        ^~~~~
bot/data/bluefin_websocket.py:1854:39: error: Unexpected keyword argument
"last_trade_price" for "MarketData"  [call-arg]
                            market_data = MarketData(
                                          ^
bot/data/bluefin_websocket.py:1866:31: error: "BluefinWebSocketClient" has no
attribute "_process_tick_update"  [attr-defined]
                            await self._process_tick_update(
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_websocket.py:2277:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def on_candle_update(candle: MarketData):
        ^
bot/data/bluefin_market.py:30:5: error: Module "websockets.client" has no
attribute "WebSocketClientProtocol"; maybe "ClientProtocol"?  [attr-defined]
        from websockets.client import WebSocketClientProtocol
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:110:33: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self._subscribers: list[Callable] = []
                                    ^
bot/data/bluefin_market.py:126:9: error: Type of variable becomes "Any | None"
due to an unfollowed import  [no-any-unimported]
            self._ws: WebSocketClientProtocol | None = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:127:24: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._ws_task: asyncio.Task | None = None
                           ^
bot/data/bluefin_market.py:128:31: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._reconnect_task: asyncio.Task | None = None
                                  ^
bot/data/bluefin_market.py:139:30: error: Missing type parameters for generic
type "Queue"  [type-arg]
            self._message_queue: asyncio.Queue = asyncio.Queue(maxsize=100...
                                 ^
bot/data/bluefin_market.py:140:32: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._processing_task: asyncio.Task | None = None
                                   ^
bot/data/bluefin_market.py:144:36: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._candle_builder_task: asyncio.Task | None = None
                                       ^
bot/data/bluefin_market.py:553: error: Unused "type: ignore" comment
[unused-ignore]
                await self._ws_client.disconnect()  # type: ignore[attr-de...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/data/bluefin_market.py:870:13: error: Returning Any from function declared
to return "Decimal | None"  [no-any-return]
                return self._price_cache["price"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:878:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def to_dataframe(self, limit: int | None = None) -> pd.DataFrame:
        ^
bot/data/bluefin_market.py:961:52: error: Missing type parameters for generic
type "Callable"  [type-arg]
    ...  async def _safe_callback_async(self, callback: Callable, data: Marke...
                                                        ^
bot/data/bluefin_market.py:968:51: error: Missing type parameters for generic
type "Callable"  [type-arg]
    ...   async def _safe_callback_sync(self, callback: Callable, data: Marke...
                                                        ^
bot/data/bluefin_market.py:1068: error: Unused "type: ignore" comment
[unused-ignore]
                ws_status = self._ws_client.get_status()  # type: ignore[a...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/data/bluefin_market.py:1119: error: Unused "type: ignore" comment
[unused-ignore]
                return len(self._ws_client.get_candles()) > 0  # type: ign...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/data/bluefin_market.py:1827:17: error: Need type annotation for "candles"
(hint: "candles: list[<type>] = ...")  [var-annotated]
                    candles = []
                    ^~~~~~~
bot/data/bluefin_market.py:2409: error: Unused "type: ignore" comment
[unused-ignore]
                await self._ws_client.connect()  # type: ignore[attr-defin...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:2490:30: error: "BluefinMarketDataProvider" has no
attribute "_sanitize_websocket_data"  [attr-defined]
                sanitized_data = self._sanitize_websocket_data(data)
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:2504:28: error: "BluefinMarketDataProvider" has no
attribute "_validate_price_continuity"; maybe "_validate_api_connectivity"?
[attr-defined]
                        if not self._validate_price_continuity(price):
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:2552:30: error: "BluefinMarketDataProvider" has no
attribute "_sanitize_websocket_data"  [attr-defined]
                sanitized_data = self._sanitize_websocket_data(data)
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:2561:39: error: "BluefinMarketDataProvider" has no
attribute "_sanitize_trade_data"  [attr-defined]
                        sanitized_trade = self._sanitize_trade_data(trade)
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/data/bluefin_market.py:3389:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def get_historical_data(
        ^
bot/data/bluefin_market.py:3441:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def get_latest_ohlcv_dataframe(self, limit: int | None = None) -> ...
        ^
bot/data/bluefin_market.py:3484:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _to_dataframe(self, data: list[MarketData]) -> pd.DataFrame:
        ^
bot/paper_trading.py:271:19: error: Missing type parameters for generic type
"dict"  [type-arg]
            metadata: dict | None = None,
                      ^
bot/paper_trading.py:314:13: error: Statement is unreachable  [unreachable]
                return Decimal("0.00")
                ^~~~~~~~~~~~~~~~~~~~~~
bot/paper_trading.py:318:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/paper_trading.py:356:13: error: Statement is unreachable  [unreachable]
                return Decimal("0.00000000")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/paper_trading.py:360:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/paper_trading.py:391:20: error: Missing type parameters for generic type
"dict"  [type-arg]
            _metadata: dict | None = None,
                       ^
bot/paper_trading.py:1742:21: error: Function is missing a type annotation
[no-untyped-def]
                        def serialize_value(obj):
                        ^
bot/paper_trading.py:1761:21: error: Function is missing a type annotation
[no-untyped-def]
                        def serialize_dict(d):
                        ^
bot/indicators/sommi_patterns.py:54: error: Argument 4 to "__init__" becomes
"Any" due to an unfollowed import  [no-any-unimported]
    class PatternSignal:
    ^~~~~~~~~~~~~~~~~~~
bot/indicators/sommi_patterns.py:54: error: Argument 3 to "__mypy-replace"
becomes "Any" due to an unfollowed import  [no-any-unimported]
    class PatternSignal:
    ^~~~~~~~~~~~~~~~~~~
bot/indicators/sommi_patterns.py:59:5: error: Type of variable becomes "Any"
due to an unfollowed import  [no-any-unimported]
        timestamp: pd.Timestamp
        ^~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/sommi_patterns.py:117:9: error: Type of variable becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
            self._htf_cache: dict[str, pd.DataFrame] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/sommi_patterns.py:144:5: error: Return type becomes
"tuple[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_higher_timeframe_wt(
        ^
bot/indicators/sommi_patterns.py:144:5: error: Argument 2 to
"calculate_higher_timeframe_wt" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_higher_timeframe_wt(
        ^
bot/indicators/sommi_patterns.py:224:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _calculate_vwap(self, ohlcv_data: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/sommi_patterns.py:224:5: error: Argument 2 to "_calculate_vwap"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _calculate_vwap(self, ohlcv_data: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/sommi_patterns.py:246:5: error: Return type becomes
"tuple[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        def _empty_htf_series(
        ^
bot/indicators/sommi_patterns.py:246:5: error: Argument 2 to
"_empty_htf_series" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _empty_htf_series(
        ^
bot/indicators/sommi_patterns.py:253:5: error: Argument 2 to
"_determine_resample_rule" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _determine_resample_rule(self, index: pd.DatetimeIndex, multip...
        ^
bot/indicators/sommi_patterns.py:325:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def calculate_heikin_ashi_candles(self, ohlc_data: pd.DataFrame) -...
        ^
bot/indicators/sommi_patterns.py:325:5: error: Argument 2 to
"calculate_heikin_ashi_candles" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_heikin_ashi_candles(self, ohlc_data: pd.DataFrame) -...
        ^
bot/indicators/sommi_patterns.py:395:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_sommi_flags(
        ^
bot/indicators/sommi_patterns.py:395:5: error: Argument 2 to
"calculate_sommi_flags" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_flags(
        ^
bot/indicators/sommi_patterns.py:395:5: error: Argument 3 to
"calculate_sommi_flags" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_flags(
        ^
bot/indicators/sommi_patterns.py:395:5: error: Argument 4 to
"calculate_sommi_flags" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_flags(
        ^
bot/indicators/sommi_patterns.py:482:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _calculate_flag_confidence(
        ^
bot/indicators/sommi_patterns.py:482:5: error: Argument 2 to
"_calculate_flag_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_flag_confidence(
        ^
bot/indicators/sommi_patterns.py:482:5: error: Argument 3 to
"_calculate_flag_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_flag_confidence(
        ^
bot/indicators/sommi_patterns.py:482:5: error: Argument 4 to
"_calculate_flag_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_flag_confidence(
        ^
bot/indicators/sommi_patterns.py:482:5: error: Argument 5 to
"_calculate_flag_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_flag_confidence(
        ^
bot/indicators/sommi_patterns.py:496:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def _empty_flag_result(self, index: pd.Index) -> dict[str, pd.Seri...
        ^
bot/indicators/sommi_patterns.py:496:5: error: Argument 2 to
"_empty_flag_result" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _empty_flag_result(self, index: pd.Index) -> dict[str, pd.Seri...
        ^
bot/indicators/sommi_patterns.py:508:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_sommi_diamonds(
        ^
bot/indicators/sommi_patterns.py:508:5: error: Argument 2 to
"calculate_sommi_diamonds" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_diamonds(
        ^
bot/indicators/sommi_patterns.py:508:5: error: Argument 3 to
"calculate_sommi_diamonds" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_diamonds(
        ^
bot/indicators/sommi_patterns.py:508:5: error: Argument 4 to
"calculate_sommi_diamonds" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_sommi_diamonds(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Argument 2 to
"_calculate_diamond_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Argument 3 to
"_calculate_diamond_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Argument 4 to
"_calculate_diamond_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Argument 5 to
"_calculate_diamond_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:611:5: error: Argument 6 to
"_calculate_diamond_confidence" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_diamond_confidence(
        ^
bot/indicators/sommi_patterns.py:642:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def _empty_diamond_result(self, index: pd.Index) -> dict[str, pd.S...
        ^
bot/indicators/sommi_patterns.py:642:5: error: Argument 2 to
"_empty_diamond_result" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _empty_diamond_result(self, index: pd.Index) -> dict[str, pd.S...
        ^
bot/indicators/sommi_patterns.py:654:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def get_combined_sommi_analysis(
        ^
bot/indicators/sommi_patterns.py:654:5: error: Argument 2 to
"get_combined_sommi_analysis" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_combined_sommi_analysis(
        ^
bot/indicators/sommi_patterns.py:777:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def _resample_for_htf(self, price_data: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/sommi_patterns.py:777:5: error: Argument 2 to
"_resample_for_htf" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _resample_for_htf(self, price_data: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/sommi_patterns.py:807:5: error: Argument 2 to
"get_latest_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_latest_signals(self, analysis_df: pd.DataFrame) -> list[Pa...
        ^
bot/indicators/sommi_patterns.py:891:56: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, pattern_type: PatternType, current_data: dict
                                                           ^
bot/indicators/sommi_patterns.py:922:47: error: Missing type parameters for
generic type "dict"  [type-arg]
        def _validate_flag_conditions(self, data: dict, pattern_type: Patt...
                                                  ^
bot/indicators/sommi_patterns.py:929:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return (
                ^
bot/indicators/sommi_patterns.py:936:9: error: Returning Any from function
declared to return "bool"  [no-any-return]
            return (
            ^
bot/indicators/sommi_patterns.py:944:21: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, data: dict, pattern_type: PatternType
                        ^
bot/indicators/sommi_patterns.py:952:13: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return (
                ^
bot/indicators/sommi_patterns.py:964:5: error: Return type becomes "Any" due to
an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/sommi_patterns.py:964:5: error: Argument 2 to "calculate"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/cipher_b_signals.py:46: error: Argument 7 to "__init__" becomes
"Any | None" due to an unfollowed import  [no-any-unimported]
    class CipherBSignal:
    ^~~~~~~~~~~~~~~~~~~
bot/indicators/cipher_b_signals.py:46: error: Argument 6 to "__mypy-replace"
becomes "Any | None" due to an unfollowed import  [no-any-unimported]
    class CipherBSignal:
    ^~~~~~~~~~~~~~~~~~~
bot/indicators/cipher_b_signals.py:54:5: error: Type of variable becomes
"Any | None" due to an unfollowed import  [no-any-unimported]
        timestamp: pd.Timestamp | None = None
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/cipher_b_signals.py:232:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_basic_signals(
        ^
bot/indicators/cipher_b_signals.py:232:5: error: Argument 2 to
"calculate_basic_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_basic_signals(
        ^
bot/indicators/cipher_b_signals.py:232:5: error: Argument 3 to
"calculate_basic_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_basic_signals(
        ^
bot/indicators/cipher_b_signals.py:232:5: error: Argument 4 to
"calculate_basic_signals" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_basic_signals(
        ^
bot/indicators/cipher_b_signals.py:291:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_divergence_signals(
        ^
bot/indicators/cipher_b_signals.py:399:5: error: Return type becomes "Any" due
to an unfollowed import  [no-any-unimported]
        def calculate_gold_signals(
        ^
bot/indicators/cipher_b_signals.py:399:5: error: Argument 2 to
"calculate_gold_signals" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_gold_signals(
        ^
bot/indicators/cipher_b_signals.py:399:5: error: Argument 3 to
"calculate_gold_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_gold_signals(
        ^
bot/indicators/cipher_b_signals.py:399:5: error: Argument 4 to
"calculate_gold_signals" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_gold_signals(
        ^
bot/indicators/cipher_b_signals.py:468:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_small_circles(
        ^
bot/indicators/cipher_b_signals.py:468:5: error: Argument 2 to
"calculate_small_circles" becomes "dict[str, Any]" due to an unfollowed import
[no-any-unimported]
        def calculate_small_circles(
        ^
bot/indicators/cipher_b_signals.py:513:5: error: Argument 2 to
"_calculate_wt_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_wt_divergences(
        ^
bot/indicators/cipher_b_signals.py:513:5: error: Argument 3 to
"_calculate_wt_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_wt_divergences(
        ^
bot/indicators/cipher_b_signals.py:515:20: error: Missing type parameters for
generic type "list"  [type-arg]
        ) -> dict[str, list]:
                       ^
bot/indicators/cipher_b_signals.py:537:5: error: Argument 2 to
"_calculate_rsi_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_rsi_divergences(
        ^
bot/indicators/cipher_b_signals.py:537:5: error: Argument 3 to
"_calculate_rsi_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_rsi_divergences(
        ^
bot/indicators/cipher_b_signals.py:539:20: error: Missing type parameters for
generic type "list"  [type-arg]
        ) -> dict[str, list]:
                       ^
bot/indicators/cipher_b_signals.py:561:5: error: Argument 2 to
"_calculate_stoch_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_stoch_divergences(
        ^
bot/indicators/cipher_b_signals.py:561:5: error: Argument 3 to
"_calculate_stoch_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_stoch_divergences(
        ^
bot/indicators/cipher_b_signals.py:563:20: error: Missing type parameters for
generic type "list"  [type-arg]
        ) -> dict[str, list]:
                       ^
bot/indicators/cipher_b_signals.py:594:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def _prepare_fractal_data(
        ^
bot/indicators/cipher_b_signals.py:594:5: error: Argument 2 to
"_prepare_fractal_data" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _prepare_fractal_data(
        ^
bot/indicators/cipher_b_signals.py:638:5: error: Argument 2 to
"get_all_cipher_b_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_all_cipher_b_signals(
        ^
bot/indicators/cipher_b_signals.py:1080:5: error: Argument 2 to
"get_latest_signal_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_latest_signal_summary(self, df: pd.DataFrame) -> dict[str,...
        ^
bot/indicators/cipher_a_signals.py:171:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_diamond_patterns(
        ^
bot/indicators/cipher_a_signals.py:171:5: error: Argument 2 to
"calculate_diamond_patterns" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_diamond_patterns(
        ^
bot/indicators/cipher_a_signals.py:171:5: error: Argument 3 to
"calculate_diamond_patterns" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_diamond_patterns(
        ^
bot/indicators/cipher_a_signals.py:326:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_yellow_cross_signals(
        ^
bot/indicators/cipher_a_signals.py:326:5: error: Argument 2 to
"calculate_yellow_cross_signals" becomes "dict[str, Any]" due to an unfollowed
import  [no-any-unimported]
        def calculate_yellow_cross_signals(
        ^
bot/indicators/cipher_a_signals.py:326:5: error: Argument 3 to
"calculate_yellow_cross_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_yellow_cross_signals(
        ^
bot/indicators/cipher_a_signals.py:326:5: error: Argument 4 to
"calculate_yellow_cross_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_yellow_cross_signals(
        ^
bot/indicators/cipher_a_signals.py:326:5: error: Argument 5 to
"calculate_yellow_cross_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_yellow_cross_signals(
        ^
bot/indicators/cipher_a_signals.py:592:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_extreme_diamonds(
        ^
bot/indicators/cipher_a_signals.py:592:5: error: Argument 2 to
"calculate_extreme_diamonds" becomes "dict[str, Any]" due to an unfollowed
import  [no-any-unimported]
        def calculate_extreme_diamonds(
        ^
bot/indicators/cipher_a_signals.py:592:5: error: Argument 3 to
"calculate_extreme_diamonds" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_extreme_diamonds(
        ^
bot/indicators/cipher_a_signals.py:592:5: error: Argument 4 to
"calculate_extreme_diamonds" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_extreme_diamonds(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Argument 2 to
"calculate_candle_patterns" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Argument 3 to
"calculate_candle_patterns" becomes "Any | None" due to an unfollowed import
[no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Argument 4 to
"calculate_candle_patterns" becomes "Any | None" due to an unfollowed import
[no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Argument 5 to
"calculate_candle_patterns" becomes "dict[str, Any] | None" due to an unfollowed
import  [no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:668:5: error: Argument 6 to
"calculate_candle_patterns" becomes "dict[str, Any] | None" due to an unfollowed
import  [no-any-unimported]
        def calculate_candle_patterns(
        ^
bot/indicators/cipher_a_signals.py:821:5: error: Return type becomes "Any" due
to an unfollowed import  [no-any-unimported]
        def get_all_cipher_a_signals(self, df: pd.DataFrame) -> pd.DataFra...
        ^
bot/indicators/cipher_a_signals.py:821:5: error: Argument 2 to
"get_all_cipher_a_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_all_cipher_a_signals(self, df: pd.DataFrame) -> pd.DataFra...
        ^
bot/indicators/cipher_a_signals.py:1058:5: error: Return type becomes
"dict[str, Any]" due to an unfollowed import  [no-any-unimported]
        def _calculate_signal_strength_and_confidence(
        ^
bot/indicators/cipher_a_signals.py:1058:5: error: Argument 2 to
"_calculate_signal_strength_and_confidence" becomes "Any" due to an unfollowed
import  [no-any-unimported]
        def _calculate_signal_strength_and_confidence(
        ^
bot/indicators/cipher_a_signals.py:1166:5: error: Return type becomes "Any" due
to an unfollowed import  [no-any-unimported]
        def _generate_signal_summary(self, df: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/cipher_a_signals.py:1166:5: error: Argument 2 to
"_generate_signal_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_signal_summary(self, df: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/cipher_a_signals.py:1204:5: error: Argument 2 to
"get_latest_values" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/cipher_a_signals.py:1273:5: error: Argument 2 to
"validate_signal_data" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def validate_signal_data(self, df: pd.DataFrame) -> tuple[bool, st...
        ^
bot/indicators/cipher_a_signals.py:1295:5: error: Argument 2 to
"_get_basic_validation_error" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _get_basic_validation_error(self, df: pd.DataFrame) -> str | N...
        ^
bot/indicators/cipher_a_signals.py:1327:5: error: Argument 2 to
"_get_advanced_validation_error" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _get_advanced_validation_error(self, df: pd.DataFrame) -> str ...
        ^
bot/indicators/cipher_a_signals.py:1347:5: error: Argument 2 to
"_validate_input_data_quality" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _validate_input_data_quality(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/cipher_a_signals.py:1451:5: error: Argument 2 to
"_generate_complete_signal_summary" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_complete_signal_summary(self, df: pd.DataFrame) -> d...
        ^
bot/exchange/bluefin.py:44: error: Unused "type: ignore" comment
[unused-ignore]
        class BluefinServiceClient:  # type: ignore[misc]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin.py:44:5: error: Name "BluefinServiceClient" already
defined (possibly by an import)  [no-redef]
        class BluefinServiceClient:  # type: ignore[misc]
        ^
bot/exchange/bluefin.py:44:5: note: Error code "no-redef" not covered by "type: ignore" comment
bot/exchange/bluefin.py:45:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def __init__(self):
            ^
bot/exchange/bluefin.py:45:9: note: Use "-> None" if function does not return a value
bot/exchange/bluefin.py:48: error: Unused "type: ignore" comment
[unused-ignore]
        class BluefinServiceConnectionError(Exception):  # type: ignore[mi...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin.py:48:5: error: Name "BluefinServiceConnectionError"
already defined (possibly by an import)  [no-redef]
        class BluefinServiceConnectionError(Exception):  # type: ignore[mi...
        ^
bot/exchange/bluefin.py:48:5: note: Error code "no-redef" not covered by "type: ignore" comment
bot/exchange/bluefin.py:209:42: error: Function "builtins.callable" is not
valid as a type  [valid-type]
            self._order_callbacks: dict[str, callable] = {}  # order_id ->...
                                             ^
bot/exchange/bluefin.py:209:42: note: Perhaps you meant "typing.Callable" instead of "callable"?
bot/exchange/bluefin.py:210:43: error: Missing type parameters for generic type
"dict"  [type-arg]
            self._order_book_cache: dict[str, dict] = {}  # symbol -> orde...
                                              ^
bot/exchange/bluefin.py:248:13: error: Statement is unreachable  [unreachable]
                return Decimal("0.00")
                ^~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin.py:252:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/exchange/bluefin.py:288:13: error: Statement is unreachable  [unreachable]
                return Decimal("0.00000000")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/exchange/bluefin.py:292:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/exchange/bluefin.py:885:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/bluefin.py:946:26: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                        side=cast("Literal['BUY', 'SELL']", side),
                             ^
bot/exchange/bluefin.py:996:22: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                    side=cast("Literal['BUY', 'SELL']", side),
                         ^
bot/exchange/bluefin.py:1053:26: error: Redundant cast to
"Literal['BUY', 'SELL']"  [redundant-cast]
                        side=cast("Literal['BUY', 'SELL']", side),
                             ^
bot/exchange/bluefin.py:1133:19: error: Missing type parameters for generic
type "dict"  [type-arg]
            metadata: dict | None = None,
                      ^
bot/exchange/bluefin.py:1203:78: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...f _fetch_account_data(self, account_type: AccountType | None) -> dict:
                                                                        ^
bot/exchange/bluefin.py:1235:29: error: Missing type parameters for generic
type "dict"  [type-arg]
            self, account_data: dict, account_type: AccountType | None
                                ^
bot/exchange/bluefin.py:1277:75: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...self, total_balance: Decimal, raw_balance: Decimal, account_data: dict
                                                                         ^
bot/exchange/bluefin.py:1514:17: error: Statement is unreachable  [unreachable]
                    logger.info("PAPER TRADING: Simulated cancelling all o...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/exchange/bluefin.py:1654:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _retry_request(self, func, *args, **kwargs):
        ^
bot/exchange/bluefin.py:1662:10: error: Missing type parameters for generic
type "list"  [type-arg]
        ) -> list:
             ^
bot/exchange/bluefin.py:1769:34: error: Missing type parameters for generic
type "dict"  [type-arg]
            self, order_levels: list[dict], symbol: str
                                     ^
bot/exchange/bluefin.py:2027:75: error: Missing type parameters for generic
type "dict"  [type-arg]
    ... def get_order_book_depth(self, symbol: str, levels: int = 5) -> dict:
                                                                        ^
bot/exchange/bluefin.py:2152:79: error: Missing type parameters for generic
type "dict"  [type-arg]
    ... estimate_market_impact(self, symbol: str, quantity: Decimal) -> dict:
                                                                        ^
bot/exchange/bluefin.py:2280:64: error: Function "builtins.callable" is not
valid as a type  [valid-type]
    ...ister_order_callback(self, order_id: str, callback: callable) -> None:
                                                           ^
bot/exchange/bluefin.py:2280:64: note: Perhaps you meant "typing.Callable" instead of "callable"?
bot/exchange/bluefin.py:2302:61: error: Missing type parameters for generic
type "dict"  [type-arg]
    ...self, order_id: str, order_status: str, order_data: dict | None = None
                                                           ^
bot/exchange/bluefin.py:2314:13: error: Statement is unreachable  [unreachable]
                try:
                ^
bot/exchange/bluefin.py:2447:24: error: Argument "symbol" to
"place_limit_order" of "BluefinClient" has incompatible type "str | None";
expected "str"  [arg-type]
                    symbol=symbol,
                           ^~~~~~
bot/exchange/bluefin.py:2513:38: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self, symbol: str, callback: Callable | None = None
                                         ^
bot/exchange/bluefin.py:2547:53: error: Missing type parameters for generic
type "dict"  [type-arg]
    ... async def batch_place_orders(self, orders: list[dict]) -> list[Order]...
                                                        ^
bot/exchange/bluefin.py:2562:9: error: Need type annotation for
"orders_by_symbol" (hint: "orders_by_symbol: dict[<type>, <type>] = ...")
[var-annotated]
            orders_by_symbol = {}
            ^~~~~~~~~~~~~~~~
bot/exchange/bluefin.py:2603:34: error: Missing type parameters for generic
type "dict"  [type-arg]
            self, order_levels: list[dict], symbol: str
                                     ^
bot/exchange/bluefin.py:2667:42: error: Missing type parameters for generic
type "dict"  [type-arg]
        def get_order_latency_stats(self) -> dict:
                                             ^
bot/exchange/bluefin.py:2734:44: error: Missing type parameters for generic
type "dict"  [type-arg]
        def get_market_making_metrics(self) -> dict:
                                               ^
bot/data/example_bluefin_websocket_usage.py:18:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def on_new_candle(candle: MarketData):
    ^
bot/data/example_bluefin_websocket_usage.py:32:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def main():
    ^
bot/data/example_bluefin_websocket_usage.py:32:1: note: Use "-> None" if function does not return a value
bot/data/example_bluefin_websocket_usage.py:82:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def integrate_with_existing_provider():
    ^
bot/data/example_bluefin_websocket_usage.py:90:5: error: Function is missing a
return type annotation  [no-untyped-def]
        async def enhanced_connect(self, fetch_historical: bool = True):
        ^
bot/data/example_bluefin_websocket_usage.py:90:5: error: Function is missing a
type annotation for one or more arguments  [no-untyped-def]
        async def enhanced_connect(self, fetch_historical: bool = True):
        ^
bot/data/example_bluefin_websocket_usage.py:120:5: error: Cannot assign to a
method  [method-assign]
        provider.connect = enhanced_connect.__get__(provider, BluefinMarke...
        ^~~~~~~~~~~~~~~~
bot/position_manager.py:800:40: error: Missing type parameters for generic type
"Task"  [type-arg]
        def _handle_save_error(self, task: asyncio.Task) -> None:
                                           ^
bot/indicators/vumanchu.py:179:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def calculate_async(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:179:5: error: Argument 2 to "calculate_async"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        async def calculate_async(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:199:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def calculate_streaming(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:199:5: error: Argument 2 to "calculate_streaming"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        async def calculate_streaming(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:269:13: error: Statement is unreachable
[unreachable]
                return await self.calculate_async(df)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:271:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def _calculate_core_indicators_async(self, df: pd.DataFrame)...
        ^
bot/indicators/vumanchu.py:271:5: error: Argument 2 to
"_calculate_core_indicators_async" becomes "Any" due to an unfollowed import
[no-any-unimported]
        async def _calculate_core_indicators_async(self, df: pd.DataFrame)...
        ^
bot/indicators/vumanchu.py:274:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def _calc_core():
            ^
bot/indicators/vumanchu.py:304:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def _calculate_ema_ribbon_async(self, df: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:304:5: error: Argument 2 to
"_calculate_ema_ribbon_async" becomes "Any" due to an unfollowed import
[no-any-unimported]
        async def _calculate_ema_ribbon_async(self, df: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:307:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def _calc_ema():
            ^
bot/indicators/vumanchu.py:333:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def _calculate_advanced_indicators_async(
        ^
bot/indicators/vumanchu.py:333:5: error: Argument 2 to
"_calculate_advanced_indicators_async" becomes "Any" due to an unfollowed import
 [no-any-unimported]
        async def _calculate_advanced_indicators_async(
        ^
bot/indicators/vumanchu.py:338:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def _calc_advanced():
            ^
bot/indicators/vumanchu.py:364:5: error: Return type becomes
"Coroutine[Any, Any, Any]" due to an unfollowed import  [no-any-unimported]
        async def _calculate_signal_patterns_async(self, df: pd.DataFrame)...
        ^
bot/indicators/vumanchu.py:364:5: error: Argument 2 to
"_calculate_signal_patterns_async" becomes "Any" due to an unfollowed import
[no-any-unimported]
        async def _calculate_signal_patterns_async(self, df: pd.DataFrame)...
        ^
bot/indicators/vumanchu.py:367:9: error: Function is missing a return type
annotation  [no-untyped-def]
            def _calc_signals():
            ^
bot/indicators/vumanchu.py:400:24: error: "DivergenceSignal" has no attribute
"divergence_type"  [attr-defined]
                        if div.divergence_type in [
                           ^~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:401:25: error: "type[DivergenceType]" has no
attribute "BULLISH_REGULAR"  [attr-defined]
                            DivergenceType.BULLISH_REGULAR,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:402:25: error: "type[DivergenceType]" has no
attribute "BULLISH_HIDDEN"  [attr-defined]
                            DivergenceType.BULLISH_HIDDEN,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:405:42: error: "DivergenceSignal" has no attribute
"end_idx"  [attr-defined]
                                result.index[div.end_idx], "wt_divergence_...
                                             ^~~~~~~~~~~
bot/indicators/vumanchu.py:407:26: error: "DivergenceSignal" has no attribute
"divergence_type"  [attr-defined]
                        elif div.divergence_type in [
                             ^~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:408:25: error: "type[DivergenceType]" has no
attribute "BEARISH_REGULAR"  [attr-defined]
                            DivergenceType.BEARISH_REGULAR,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:409:25: error: "type[DivergenceType]" has no
attribute "BEARISH_HIDDEN"  [attr-defined]
                            DivergenceType.BEARISH_HIDDEN,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:412:42: error: "DivergenceSignal" has no attribute
"end_idx"  [attr-defined]
                                result.index[div.end_idx], "wt_divergence_...
                                             ^~~~~~~~~~~
bot/indicators/vumanchu.py:417:24: error: "DivergenceSignal" has no attribute
"divergence_type"  [attr-defined]
                        if div.divergence_type in [
                           ^~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:418:25: error: "type[DivergenceType]" has no
attribute "BULLISH_REGULAR"  [attr-defined]
                            DivergenceType.BULLISH_REGULAR,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:419:25: error: "type[DivergenceType]" has no
attribute "BULLISH_HIDDEN"  [attr-defined]
                            DivergenceType.BULLISH_HIDDEN,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:422:42: error: "DivergenceSignal" has no attribute
"end_idx"  [attr-defined]
                                result.index[div.end_idx], "rsi_divergence...
                                             ^~~~~~~~~~~
bot/indicators/vumanchu.py:424:26: error: "DivergenceSignal" has no attribute
"divergence_type"  [attr-defined]
                        elif div.divergence_type in [
                             ^~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:425:25: error: "type[DivergenceType]" has no
attribute "BEARISH_REGULAR"  [attr-defined]
                            DivergenceType.BEARISH_REGULAR,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:426:25: error: "type[DivergenceType]" has no
attribute "BEARISH_HIDDEN"  [attr-defined]
                            DivergenceType.BEARISH_HIDDEN,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:429:42: error: "DivergenceSignal" has no attribute
"end_idx"  [attr-defined]
                                result.index[div.end_idx], "rsi_divergence...
                                             ^~~~~~~~~~~
bot/indicators/vumanchu.py:466:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:466:5: error: Argument 2 to "calculate" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:502:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _validate_input_data(self, df: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:502:5: error: Argument 2 to "_validate_input_data"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _validate_input_data(self, df: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:540:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _create_fallback_dataframe(
        ^
bot/indicators/vumanchu.py:540:5: error: Argument 2 to
"_create_fallback_dataframe" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _create_fallback_dataframe(
        ^
bot/indicators/vumanchu.py:572:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _validate_data_quality(self, df: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:572:5: error: Argument 2 to "_validate_data_quality"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _validate_data_quality(self, df: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:592:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _prepare_calculation_data(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:592:5: error: Argument 2 to
"_prepare_calculation_data" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _prepare_calculation_data(self, df: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:605:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_indicator_components(self, result: pd.DataFrame) ->...
        ^
bot/indicators/vumanchu.py:605:5: error: Argument 2 to
"_calculate_indicator_components" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_indicator_components(self, result: pd.DataFrame) ->...
        ^
bot/indicators/vumanchu.py:622:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_ema_ribbon(self, result: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:622:5: error: Argument 2 to "_calculate_ema_ribbon"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _calculate_ema_ribbon(self, result: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:636:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_additional_indicators(self, result: pd.DataFrame) -...
        ^
bot/indicators/vumanchu.py:636:5: error: Argument 2 to
"_calculate_additional_indicators" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_additional_indicators(self, result: pd.DataFrame) -...
        ^
bot/indicators/vumanchu.py:662:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_divergence_signals(self, result: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:662:5: error: Argument 2 to
"_calculate_divergence_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_divergence_signals(self, result: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:692:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _calculate_wt_divergences(self, result: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:692:5: error: Argument 2 to
"_calculate_wt_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_wt_divergences(self, result: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:702:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def _calculate_rsi_divergences(self, result: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:702:5: error: Argument 2 to
"_calculate_rsi_divergences" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _calculate_rsi_divergences(self, result: pd.DataFrame):
        ^
bot/indicators/vumanchu.py:712:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _initialize_divergence_series(self, result: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:712:5: error: Argument 2 to
"_initialize_divergence_series" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _initialize_divergence_series(self, result: pd.DataFrame) -> p...
        ^
bot/indicators/vumanchu.py:720:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _process_divergences(
        ^
bot/indicators/vumanchu.py:720:5: error: Argument 2 to "_process_divergences"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _process_divergences(
        ^
bot/indicators/vumanchu.py:721:50: error: Missing type parameters for generic
type "list"  [type-arg]
            self, result: pd.DataFrame, divergences: list, indicator_type:...
                                                     ^
bot/indicators/vumanchu.py:747:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _set_default_divergence_columns(self, result: pd.DataFrame) ->...
        ^
bot/indicators/vumanchu.py:747:5: error: Argument 2 to
"_set_default_divergence_columns" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _set_default_divergence_columns(self, result: pd.DataFrame) ->...
        ^
bot/indicators/vumanchu.py:755:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _finalize_calculation(self, result: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:755:5: error: Argument 2 to "_finalize_calculation"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _finalize_calculation(self, result: pd.DataFrame) -> pd.DataFr...
        ^
bot/indicators/vumanchu.py:765:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _handle_calculation_error(self, result: pd.DataFrame) -> pd.Da...
        ^
bot/indicators/vumanchu.py:765:5: error: Argument 2 to
"_handle_calculation_error" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _handle_calculation_error(self, result: pd.DataFrame) -> pd.Da...
        ^
bot/indicators/vumanchu.py:773:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _generate_enhanced_signals(self, df: pd.DataFrame) -> pd.Serie...
        ^
bot/indicators/vumanchu.py:773:5: error: Argument 2 to
"_generate_enhanced_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_enhanced_signals(self, df: pd.DataFrame) -> pd.Serie...
        ^
bot/indicators/vumanchu.py:894:5: error: Argument 2 to
"_add_compatibility_indicators" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_compatibility_indicators(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/vumanchu.py:919:5: error: Argument 2 to "get_latest_values"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:1028:5: error: Argument 2 to "get_all_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_all_signals(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:1074:5: error: Argument 2 to "get_signal_strength"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_signal_strength(self, df: pd.DataFrame) -> float:
        ^
bot/indicators/vumanchu.py:1097:9: error: Returning Any from function declared
to return "float"  [no-any-return]
            return max(-100.0, min(100.0, strength_score * 20.0))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:1099:5: error: Argument 2 to "interpret_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def interpret_signals(self, df: pd.DataFrame) -> str:
        ^
bot/indicators/vumanchu.py:1318:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:1318:5: error: Argument 2 to "calculate" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def calculate(self, df: pd.DataFrame) -> pd.DataFrame:
        ^
bot/indicators/vumanchu.py:1541:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _integrate_cipher_b_signals(
        ^
bot/indicators/vumanchu.py:1541:5: error: Argument 2 to
"_integrate_cipher_b_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _integrate_cipher_b_signals(
        ^
bot/indicators/vumanchu.py:1638:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _generate_enhanced_signals(self, df: pd.DataFrame) -> pd.Serie...
        ^
bot/indicators/vumanchu.py:1638:5: error: Argument 2 to
"_generate_enhanced_signals" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _generate_enhanced_signals(self, df: pd.DataFrame) -> pd.Serie...
        ^
bot/indicators/vumanchu.py:1767:5: error: Argument 2 to
"_add_legacy_indicators" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_legacy_indicators(self, df: pd.DataFrame) -> None:
        ^
bot/indicators/vumanchu.py:1830:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _calculate_wave(self, df: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/vumanchu.py:1830:5: error: Argument 2 to "_calculate_wave"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _calculate_wave(self, df: pd.DataFrame) -> pd.Series:
        ^
bot/indicators/vumanchu.py:1858:5: error: Argument 2 to "get_latest_values"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_values(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:1958:5: error: Argument 2 to "get_all_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_all_signals(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:2001:5: error: Argument 2 to "get_signal_strength"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_signal_strength(self, df: pd.DataFrame) -> float:
        ^
bot/indicators/vumanchu.py:2024:9: error: Returning Any from function declared
to return "float"  [no-any-return]
            return max(-100.0, min(100.0, strength_score * 20.0))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/vumanchu.py:2026:5: error: Argument 2 to "interpret_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def interpret_signals(self, df: pd.DataFrame) -> str:
        ^
bot/indicators/vumanchu.py:2119:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def calculate_all(
        ^
bot/indicators/vumanchu.py:2119:5: error: Argument 2 to "calculate_all" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def calculate_all(
        ^
bot/indicators/vumanchu.py:2119:5: error: Argument 3 to "calculate_all" becomes
"Any | None" due to an unfollowed import  [no-any-unimported]
        def calculate_all(
        ^
bot/indicators/vumanchu.py:2218:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _add_utility_indicators(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/indicators/vumanchu.py:2218:5: error: Argument 2 to
"_add_utility_indicators" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_utility_indicators(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/indicators/vumanchu.py:2284:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _add_combined_analysis(self, df: pd.DataFrame) -> pd.DataFrame...
        ^
bot/indicators/vumanchu.py:2284:5: error: Argument 2 to
"_add_combined_analysis" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_combined_analysis(self, df: pd.DataFrame) -> pd.DataFrame...
        ^
bot/indicators/vumanchu.py:2366:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _add_dominance_analysis(
        ^
bot/indicators/vumanchu.py:2366:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _add_dominance_analysis(
        ^
bot/indicators/vumanchu.py:2366:5: error: Argument 2 to
"_add_dominance_analysis" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_dominance_analysis(
        ^
bot/indicators/vumanchu.py:2641:5: error: Argument 2 to
"_calculate_dominance_price_divergence" becomes "Any" due to an unfollowed
import  [no-any-unimported]
        def _calculate_dominance_price_divergence(
        ^
bot/indicators/vumanchu.py:2641:5: error: Argument 3 to
"_calculate_dominance_price_divergence" becomes "Any" due to an unfollowed
import  [no-any-unimported]
        def _calculate_dominance_price_divergence(
        ^
bot/indicators/vumanchu.py:2719:5: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _analyze_dominance_sentiment(
        ^
bot/indicators/vumanchu.py:2719:5: error: Argument 2 to
"_analyze_dominance_sentiment" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _analyze_dominance_sentiment(
        ^
bot/indicators/vumanchu.py:2719:5: error: Argument 3 to
"_analyze_dominance_sentiment" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _analyze_dominance_sentiment(
        ^
bot/indicators/vumanchu.py:2804:5: error: Argument 2 to "get_latest_state"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_latest_state(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:2875:5: error: Argument 2 to "get_all_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_all_signals(self, df: pd.DataFrame) -> dict[str, Any]:
        ^
bot/indicators/vumanchu.py:2918:5: error: Argument 2 to "get_signal_strength"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def get_signal_strength(self, df: pd.DataFrame) -> dict[str, float...
        ^
bot/indicators/vumanchu.py:2943:5: error: Argument 2 to "interpret_signals"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def interpret_signals(self, df: pd.DataFrame) -> str:
        ^
bot/indicators/vumanchu.py:3013:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _add_cipher_a_fallbacks(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/indicators/vumanchu.py:3013:5: error: Argument 2 to
"_add_cipher_a_fallbacks" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_cipher_a_fallbacks(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/indicators/vumanchu.py:3050:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _add_cipher_b_fallbacks(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/indicators/vumanchu.py:3050:5: error: Argument 2 to
"_add_cipher_b_fallbacks" becomes "Any" due to an unfollowed import
[no-any-unimported]
        def _add_cipher_b_fallbacks(self, df: pd.DataFrame) -> pd.DataFram...
        ^
bot/utils/graceful_shutdown.py:23:1: error: Module "bot.config" has no
attribute "get_config"  [attr-defined]
    from bot.config import get_config
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:33:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/utils/graceful_shutdown.py:33:5: note: Use "-> None" if function does not return a value
bot/utils/graceful_shutdown.py:40:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize_exchange(self):
        ^
bot/utils/graceful_shutdown.py:40:5: note: Use "-> None" if function does not return a value
bot/utils/graceful_shutdown.py:43:32: error: Too many arguments for
"ExchangeFactory"  [call-arg]
                exchange_factory = ExchangeFactory(self.config)
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:44:35: error: "ExchangeFactory" has no attribute
"create"  [attr-defined]
                self.exchange = await exchange_factory.create()
                                      ^~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:50:43: error: Missing type parameters for
generic type "list"  [type-arg]
        async def get_open_positions(self) -> list:
                                              ^
bot/utils/graceful_shutdown.py:53:31: error: Item "None" of "Any | None" has no
attribute "get_open_positions"  [union-attr]
                positions = await self.exchange.get_open_positions()
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:55:13: error: Returning Any from function
declared to return "list[Any]"  [no-any-return]
                return positions
                ^~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:77:27: error: Item "None" of "Any | None" has no
attribute "place_order"  [union-attr]
                order = await self.exchange.place_order(
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:92:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def save_state(self, positions: list):
        ^
bot/utils/graceful_shutdown.py:92:43: error: Missing type parameters for
generic type "list"  [type-arg]
        async def save_state(self, positions: list):
                                              ^
bot/utils/graceful_shutdown.py:117:28: error: Item "None" of "Any | None" has
no attribute "get_open_orders"  [union-attr]
                orders = await self.exchange.get_open_orders()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:124:31: error: Item "None" of "Any | None" has
no attribute "cancel_order"  [union-attr]
                            await self.exchange.cancel_order(order_id)
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/utils/graceful_shutdown.py:185:1: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
bot/utils/graceful_shutdown.py:185:1: note: Use "-> None" if function does not return a value
bot/strategy/spread_calculator.py:414:20: error: "BluefinFeeCalculator" has no
attribute "calculate_fees"; maybe "calculate_maker_fee" or
"calculate_taker_fee"?  [attr-defined]
                fees = self.fee_calculator.calculate_fees(notional_value)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/spread_calculator.py:435:13: error: Returning Any from function
declared to return "Decimal"  [no-any-return]
                return min_profitable_spread
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_strategy.py:179:41: error: "Decimal" has no
attribute "round_trip_cost"  [attr-defined]
                    min_profitable_spread = round_trip_fee.round_trip_cost...
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_strategy.py:317:17: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                    total_signals += 0.5  # RSI gets half weight
                    ^~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_strategy.py:334:17: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                    total_signals += 0.5  # EMA gets half weight
                    ^~~~~~~~~~~~~~~~~~~~
bot/risk/risk_manager.py:717:45: error: Non-overlapping equality check (left
operand type: "Literal['LONG', 'SHORT']", right operand type: "Literal['FLAT']")
 [comparison-overlap]
                    if position.entry_price and position.side != "FLAT":
                                                ^~~~~~~~~~~~~~~~~~~~~~~
bot/risk/risk_manager.py:850:9: error: Returning Any from function declared to
return "float"  [no-any-return]
            return max(0, (initial_balance - current_balance) / initial_ba...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/risk/risk_manager.py:873:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_trade_outcome(self, profit_loss: Decimal):
        ^
bot/mcp/__main__.py:13:1: error: Function is missing a return type annotation
[no-untyped-def]
    def main():
    ^
bot/mcp/__main__.py:13:1: note: Use "-> None" if function does not return a value
bot/mcp/__main__.py:35:1: error: Cannot find implementation or library stub for
module named "server_standalone"  [import-not-found]
                from server_standalone import main as standalone_main
    ^
bot/mcp/__main__.py:35:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
bot/learning/experience_manager.py:77:29: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._monitor_task: asyncio.Task | None = None
                                ^
bot/learning/experience_manager.py:81:38: error: Missing type parameters for
generic type "Task"  [type-arg]
            self._reflection_tasks: list[asyncio.Task] = []
                                         ^
bot/learning/experience_manager.py:277:21: error: Non-overlapping equality
check (left operand type: "Literal['BUY', 'SELL']", right operand type:
"Literal['LONG', 'SHORT', 'FLAT']")  [comparison-overlap]
                    and trade.entry_order.side == position.side
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/learning/experience_manager.py:384:13: error: Statement is unreachable
[unreachable]
                duration_minutes = 0.0
                ^~~~~~~~~~~~~~~~~~~~~~
bot/indicators/__init__.py:26:26: error: Missing type parameters for generic
type "ndarray"  [type-arg]
        highs: list[float] | np.ndarray,
                             ^
bot/indicators/__init__.py:27:25: error: Missing type parameters for generic
type "ndarray"  [type-arg]
        lows: list[float] | np.ndarray,
                            ^
bot/indicators/__init__.py:28:27: error: Missing type parameters for generic
type "ndarray"  [type-arg]
        closes: list[float] | np.ndarray,
                              ^
bot/indicators/__init__.py:45:9: error: Returning Any from function declared to
return "float"  [no-any-return]
            return np.mean(true_ranges[-period:])
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/indicators/__init__.py:50:26: error: Missing type parameters for generic
type "ndarray"  [type-arg]
        highs: list[float] | np.ndarray, lows: list[float] | np.ndarray, w...
                             ^
bot/strategy/market_making_order_manager.py:53:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/market_making_order_manager.py:53:5: note: Use "-> None" if function does not return a value
bot/strategy/market_making_order_manager.py:60:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def update_fill(self, side: str, quantity: Decimal, price: Decimal...
        ^
bot/strategy/market_making_order_manager.py:95:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def add_fill(self, quantity: Decimal, price: Decimal, timestamp: d...
        ^
bot/strategy/market_making_order_manager.py:110:9: error: Returning Any from
function declared to return "Decimal"  [no-any-return]
            return sum(f["quantity"] for f in self.fill_events)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_order_manager.py:186:29: error: Missing type
parameters for generic type "Task"  [type-arg]
            self._monitor_task: asyncio.Task | None = None
                                ^
bot/strategy/market_making_order_manager.py:319:25: error: Function is missing
a return type annotation  [no-untyped-def]
                            def create_callback():
                            ^
bot/llm_logging.py:143:5: error: Function is missing a type annotation
[no-untyped-def]
        def default(self, obj):
        ^
bot/llm_logging.py:507:5: error: Signature of "on_chain_start" incompatible
with supertype "CallbackManagerMixin"  [override]
        def on_chain_start(
        ^
bot/llm_logging.py:507:5: note:      Superclass:
bot/llm_logging.py:507:5: note:          def on_chain_start(self, serialized: dict[str, Any], inputs: dict[str, Any], *, run_id: UUID, parent_run_id: UUID | None = ..., tags: list[str] | None = ..., metadata: dict[str, Any] | None = ..., **kwargs: Any) -> Any
bot/llm_logging.py:507:5: note:      Subclass:
bot/llm_logging.py:507:5: note:          def on_chain_start(self, serialized: dict[str, Any], _inputs: dict[str, Any], *, run_id: UUID, _parent_run_id: UUID | None = ..., tags: list[str] | None = ..., _metadata: dict[str, Any] | None = ..., **kwargs: Any) -> Any
bot/llm_logging.py:525:5: error: Signature of "on_chain_end" incompatible with
supertype "ChainManagerMixin"  [override]
        def on_chain_end(
        ^
bot/llm_logging.py:525:5: note:      Superclass:
bot/llm_logging.py:525:5: note:          def on_chain_end(self, outputs: dict[str, Any], *, run_id: UUID, parent_run_id: UUID | None = ..., **kwargs: Any) -> Any
bot/llm_logging.py:525:5: note:      Subclass:
bot/llm_logging.py:525:5: note:          def on_chain_end(self, _outputs: dict[str, Any], *, run_id: UUID, _parent_run_id: UUID | None = ..., **kwargs: Any) -> Any
bot/strategy/market_making_performance_monitor.py:125:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/market_making_performance_monitor.py:125:5: note: Use "-> None" if function does not return a value
bot/strategy/market_making_performance_monitor.py:618:24: error: Incompatible
return value type (got "dict[str, Decimal | Literal[0]]", expected
"dict[str, Decimal]")  [return-value]
                    return pnl_breakdown
                           ^~~~~~~~~~~~~
bot/strategy/market_making_performance_monitor.py:662:52: error:
"SpreadAnalysis" has no attribute "timestamp"  [attr-defined]
    ...                  if hasattr(s, "timestamp") and s.timestamp >= cutoff...
                                                        ^~~~~~~~~~~
bot/strategy/market_making_performance_monitor.py:1177:13: error: Returning Any
from function declared to return "float"  [no-any-return]
                return (time_efficiency + rate_efficiency) / 2.0
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_engine.py:40:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/market_making_engine.py:40:5: note: Use "-> None" if function does not return a value
bot/strategy/market_making_engine.py:111:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def _initialize_components(self):
        ^
bot/strategy/market_making_engine.py:111:5: note: Use "-> None" if function does not return a value
bot/strategy/market_making_engine.py:205:26: error: "VuManChuIndicators" has no
attribute "calculate"; maybe "calculate_all"?  [attr-defined]
                indicators = self.indicators.calculate(market_state.ohlcv_...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_engine.py:208:20: error: "MarketMakingStrategy" has
no attribute "calculate_directional_bias"  [attr-defined]
                bias = self.strategy.calculate_directional_bias(
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_engine.py:223:13: error: Returning Any from function
declared to return "DirectionalBias"  [no-any-return]
                return bias
                ^~~~~~~~~~~
bot/strategy/market_making_engine.py:250:27: error: "DynamicSpreadCalculator"
has no attribute "calculate_optimal_spread"; maybe "calculate_base_spread" or
"calculate_level_spreads"?  [attr-defined]
                spread_info = self.spread_calculator.calculate_optimal_spr...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_engine.py:257:28: error: Unexpected keyword argument
"market_state" for "generate_order_levels" of "MarketMakingStrategy"  [call-arg]
                order_levels = self.strategy.generate_order_levels(
                               ^
bot/strategy/market_making_strategy.py:387:5: note: "generate_order_levels" of "MarketMakingStrategy" defined here
bot/strategy/market_making_engine.py:257:28: error: Unexpected keyword argument
"directional_bias" for "generate_order_levels" of "MarketMakingStrategy"
[call-arg]
                order_levels = self.strategy.generate_order_levels(
                               ^
bot/strategy/market_making_strategy.py:387:5: note: "generate_order_levels" of "MarketMakingStrategy" defined here
bot/strategy/market_making_engine.py:257:28: error: Unexpected keyword argument
"spread_calculation" for "generate_order_levels" of "MarketMakingStrategy"
[call-arg]
                order_levels = self.strategy.generate_order_levels(
                               ^
bot/strategy/market_making_strategy.py:387:5: note: "generate_order_levels" of "MarketMakingStrategy" defined here
bot/strategy/market_making_engine.py:257:28: error: Unexpected keyword argument
"inventory_metrics" for "generate_order_levels" of "MarketMakingStrategy"
[call-arg]
                order_levels = self.strategy.generate_order_levels(
                               ^
bot/strategy/market_making_strategy.py:387:5: note: "generate_order_levels" of "MarketMakingStrategy" defined here
bot/strategy/market_making_engine.py:267:38: error: Unexpected keyword argument
"current_price" for "suggest_rebalancing_action" of "InventoryManager"
[call-arg]
                    rebalancing_action = self.inventory_manager.suggest_re...
                                         ^
bot/strategy/inventory_manager.py:334:5: note: "suggest_rebalancing_action" of "InventoryManager" defined here
bot/strategy/market_making_engine.py:267:38: error: Unexpected keyword argument
"volatility" for "suggest_rebalancing_action" of "InventoryManager"  [call-arg]
                    rebalancing_action = self.inventory_manager.suggest_re...
                                         ^
bot/strategy/inventory_manager.py:334:5: note: "suggest_rebalancing_action" of "InventoryManager" defined here
bot/strategy/market_making_engine.py:267:38: error: Unexpected keyword argument
"market_trend" for "suggest_rebalancing_action" of "InventoryManager"
[call-arg]
                    rebalancing_action = self.inventory_manager.suggest_re...
                                         ^
bot/strategy/inventory_manager.py:334:5: note: "suggest_rebalancing_action" of "InventoryManager" defined here
bot/strategy/market_making_engine.py:391:21: error: Argument 1 to "float" has
incompatible type "SupportsDunderLT[Any] | SupportsDunderGT[Any]"; expected
"str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
                        min(action.quantity / self.max_position_value * 10...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/market_making_engine.py:399:23: error: Unexpected keyword argument
"current_price" for "execute_rebalancing_trade" of "InventoryManager"
[call-arg]
                success = self.inventory_manager.execute_rebalancing_trade...
                          ^
bot/strategy/inventory_manager.py:393:5: note: "execute_rebalancing_trade" of "InventoryManager" defined here
bot/strategy/market_making_engine.py:573:5: error: Function is missing a return
type annotation  [no-untyped-def]
        async def run_context(self):
        ^
bot/strategy/llm_agent.py:25: error: Unused "type: ignore" comment
[unused-ignore]
        RunnablePassthrough = None  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/llm_agent.py:135:13: error: Statement is unreachable
[unreachable]
                logger.warning("LangChain not available - using fallback d...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/llm_agent.py:1158:13: error: Statement is unreachable
[unreachable]
                elif isinstance(result, TradeAction):
                ^
bot/strategy/llm_agent.py:1489:17: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
                    return json.loads(json_str)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/llm_agent.py:1497:17: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
                    return json.loads(json_str)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/memory_enhanced_agent.py:625:17: error: Function is missing a
return type annotation  [no-untyped-def]
                    async def get_crypto_sentiment():
                    ^
bot/strategy/memory_enhanced_agent.py:627:38: error: Item "None" of
"OmniSearchClient | None" has no attribute "search_crypto_sentiment"
[union-attr]
                            return await self._omnisearch_client.search_cr...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/memory_enhanced_agent.py:634:17: error: Function is missing a
return type annotation  [no-untyped-def]
                    async def get_market_correlation():
                    ^
bot/strategy/memory_enhanced_agent.py:636:38: error: Item "None" of
"OmniSearchClient | None" has no attribute "search_market_correlation"
[union-attr]
                            return await self._omnisearch_client.search_ma...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/memory_enhanced_agent.py:929:17: error: Function is missing a
return type annotation  [no-untyped-def]
                    async def get_sentiment_for_storage():
                    ^
bot/strategy/memory_enhanced_agent.py:931:38: error: Item "None" of
"OmniSearchClient | None" has no attribute "search_crypto_sentiment"
[union-attr]
                            return await self._omnisearch_client.search_cr...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/memory_enhanced_agent.py:938:17: error: Function is missing a
return type annotation  [no-untyped-def]
                    async def get_correlation_for_storage():
                    ^
bot/strategy/memory_enhanced_agent.py:940:38: error: Item "None" of
"OmniSearchClient | None" has no attribute "search_market_correlation"
[union-attr]
                            return await self._omnisearch_client.search_ma...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/market_making_integration.py:30:1: error: Function is missing a
return type annotation  [no-untyped-def]
    def _get_market_making_engine_factory():
    ^
bot/strategy/market_making_integration.py:47:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
bot/strategy/market_making_integration.py:47:5: note: Use "-> None" if function does not return a value
bot/strategy/market_making_integration.py:177:25: error: Item "None" of
"Any | None" has no attribute "client_type"  [union-attr]
                        and self.exchange_client.client_type == "bluefin"
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/strategy/market_making_integration.py:243:13: error: Returning Any from
function declared to return "TradeAction"  [no-any-return]
                return action
                ^~~~~~~~~~~~~
bot/strategy/market_making_integration.py:276:9: error: Returning Any from
function declared to return "TradeAction"  [no-any-return]
            return await self.market_making_engine.analyze_market_and_deci...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/strategy/market_making_integration.py:448:5: error: Function is missing a
return type annotation  [no-untyped-def]
        async def managed_lifecycle(self):
        ^
bot/backtest/engine.py:105:5: error: Argument 2 to "run_backtest" becomes "Any"
due to an unfollowed import  [no-any-unimported]
        async def run_backtest(
        ^
bot/backtest/engine.py:157:5: error: Return type becomes "Any" due to an
unfollowed import  [no-any-unimported]
        def _prepare_data(
        ^
bot/backtest/engine.py:157:5: error: Argument 2 to "_prepare_data" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        def _prepare_data(
        ^
bot/backtest/engine.py:202:5: error: Argument 2 to "_simulate_trading" becomes
"Any" due to an unfollowed import  [no-any-unimported]
        async def _simulate_trading(self, data: pd.DataFrame, strategy_typ...
        ^
bot/backtest/engine.py:244:5: error: Argument 2 to "_create_market_state"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        def _create_market_state(
        ^
bot/backtest/engine.py:293: error: Unused "type: ignore" comment
[unused-ignore]
                position_side = self.current_position.side  # type: ignore...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/backtest/engine.py:316:5: error: Argument 4 to "_execute_backtest_trade"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        async def _execute_backtest_trade(
        ^
bot/backtest/engine.py:413:5: error: Argument 3 to "_check_exit_conditions"
becomes "Any" due to an unfollowed import  [no-any-unimported]
        async def _check_exit_conditions(
        ^
bot/strategy/__init__.py:11:5: error: Cannot assign to a type  [misc]
        MemoryEnhancedLLMAgent = None  # type: ignore[assignment]
        ^~~~~~~~~~~~~~~~~~~~~~
bot/strategy/__init__.py:11:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:48:9: error: Function is missing a type annotation
[no-untyped-def]
            def __init__(self, *_args, **_kwargs):
            ^
bot/__init__.py:69:5: error: Cannot assign to a type  [misc]
        BacktestEngine = _create_import_fallback("BacktestEngine", ["panda...
        ^~~~~~~~~~~~~~
bot/__init__.py:69:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:70:5: error: Cannot assign to a type  [misc]
        BacktestResults = _create_import_fallback("BacktestResults", ["pan...
        ^~~~~~~~~~~~~~~
bot/__init__.py:70:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:71:5: error: Cannot assign to a type  [misc]
        BacktestTrade = _create_import_fallback("BacktestTrade", ["pandas"...
        ^~~~~~~~~~~~~
bot/__init__.py:71:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:86:9: error: Cannot assign to a type  [misc]
            DominanceData = _create_import_fallback("DominanceData", ["req...
            ^~~~~~~~~~~~~
bot/__init__.py:86:9: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:87:9: error: Cannot assign to a type  [misc]
            DominanceDataProvider = _create_import_fallback(
            ^~~~~~~~~~~~~~~~~~~~~
bot/__init__.py:91:9: error: Cannot assign to a type  [misc]
            MarketDataProvider = _create_import_fallback(
            ^~~~~~~~~~~~~~~~~~
bot/__init__.py:94:9: error: Cannot assign to a type  [misc]
            DominanceData = _create_import_fallback("DominanceData", ["req...
            ^~~~~~~~~~~~~
bot/__init__.py:94:9: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:95:9: error: Cannot assign to a type  [misc]
            DominanceDataProvider = _create_import_fallback(
            ^~~~~~~~~~~~~~~~~~~~~
bot/__init__.py:107:5: error: Cannot assign to a type  [misc]
        CoinbaseClient = _create_import_fallback("CoinbaseClient", ["coinb...
        ^~~~~~~~~~~~~~
bot/__init__.py:107:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:117:5: error: Cannot assign to a type  [misc]
        CipherA = _create_import_fallback("CipherA", ["pandas", "numpy", "...
        ^~~~~~~
bot/__init__.py:117:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:118:5: error: Cannot assign to a type  [misc]
        CipherB = _create_import_fallback("CipherB", ["pandas", "numpy", "...
        ^~~~~~~
bot/__init__.py:118:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:119:5: error: Cannot assign to a type  [misc]
        VuManChuIndicators = _create_import_fallback(
        ^~~~~~~~~~~~~~~~~~
bot/__init__.py:129:5: error: Cannot assign to a type  [misc]
        RiskManager = _create_import_fallback("RiskManager", ["decimal"]) ...
        ^~~~~~~~~~~
bot/__init__.py:129:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:130:5: error: Cannot assign to a type  [misc]
        CoreStrategy = _create_import_fallback("CoreStrategy", ["abc"])  #...
        ^~~~~~~~~~~~
bot/__init__.py:130:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:140:5: error: Cannot assign to a type  [misc]
        LLMAgent = _create_import_fallback("LLMAgent", ["langchain", "open...
        ^~~~~~~~
bot/__init__.py:140:5: note: Error code "misc" not covered by "type: ignore" comment
bot/__init__.py:154:5: error: Cannot assign to a type  [misc]
        RAGReader = _create_import_fallback("RAGReader", ["langchain", "ch...
        ^~~~~~~~~
bot/__init__.py:154:5: note: Error code "misc" not covered by "type: ignore" comment
bot/main.py:321:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_basic_setup(self, config_file: str | None, dry_run...
        ^
bot/main.py:346:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_core_components(self):
        ^
bot/main.py:346:5: note: Use "-> None" if function does not return a value
bot/main.py:349:27: error: Variable "bot.main.MarketDataProviderType" is not
valid as a type  [valid-type]
            self.market_data: MarketDataProviderType = None
                              ^
bot/main.py:349:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
bot/main.py:376:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_optional_components(self):
        ^
bot/main.py:376:5: note: Use "-> None" if function does not return a value
bot/main.py:383:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_omnisearch(self):
        ^
bot/main.py:383:5: note: Use "-> None" if function does not return a value
bot/main.py:415:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_websocket_components(self):
        ^
bot/main.py:415:5: note: Use "-> None" if function does not return a value
bot/main.py:420:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_websocket_publisher(self):
        ^
bot/main.py:420:5: note: Use "-> None" if function does not return a value
bot/main.py:439:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_command_consumer(self):
        ^
bot/main.py:439:5: note: Use "-> None" if function does not return a value
bot/main.py:461:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_llm_agent(self):
        ^
bot/main.py:461:5: note: Use "-> None" if function does not return a value
bot/main.py:470:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_memory_enhanced_agent(self):
        ^
bot/main.py:470:5: note: Use "-> None" if function does not return a value
bot/main.py:515:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_standard_agent(self):
        ^
bot/main.py:515:5: note: Use "-> None" if function does not return a value
bot/main.py:536:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_market_making_integrator(self):
        ^
bot/main.py:536:5: note: Use "-> None" if function does not return a value
bot/main.py:570:37: error: Incompatible types in assignment (expression has
type "str", variable has type
"Literal['conservative', 'moderate', 'aggressive', 'custom']")  [assignment]
                    mm_config.profile = self._market_making_profile_overri...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:602:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_trading_infrastructure(self):
        ^
bot/main.py:602:5: note: Use "-> None" if function does not return a value
bot/main.py:631:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_dominance_provider(self):
        ^
bot/main.py:631:5: note: Use "-> None" if function does not return a value
bot/main.py:658:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_tracking(self):
        ^
bot/main.py:658:5: note: Use "-> None" if function does not return a value
bot/main.py:701:9: error: Function is missing a return type annotation
[no-untyped-def]
            def __init__(self):
            ^
bot/main.py:701:9: note: Use "-> None" if function does not return a value
bot/main.py:705:9: error: Function is missing a return type annotation
[no-untyped-def]
            def track_operation(
            ^
bot/main.py:721:9: error: Function is missing a type annotation
[no-untyped-def]
            def add_alert_callback(self, callback):
            ^
bot/main.py:724:9: error: Function is missing a type annotation
[no-untyped-def]
            def get_performance_summary(self, _duration=None):
            ^
bot/main.py:737:9: error: Function is missing a return type annotation
[no-untyped-def]
            async def start_monitoring(self, resource_monitor_interval: fl...
            ^
bot/main.py:740:9: error: Function is missing a return type annotation
[no-untyped-def]
            async def stop_monitoring(self):
            ^
bot/main.py:740:9: note: Use "-> None" if function does not return a value
bot/main.py:743:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _initialize_performance_monitoring(self):
        ^
bot/main.py:743:5: note: Use "-> None" if function does not return a value
bot/main.py:777:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _configure_performance_thresholds(self, thresholds: Any):
        ^
bot/main.py:809:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _log_component_status(self):
        ^
bot/main.py:809:5: note: Use "-> None" if function does not return a value
bot/main.py:936:60: error: Missing type parameters for generic type "dict"
[type-arg]
    ... async def _handle_update_risk_limits(self, parameters: dict) -> None:
                                                               ^
bot/main.py:966:54: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _handle_manual_trade(self, parameters: dict) -> bool:
                                                         ^
bot/main.py:1021:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def _handle_performance_alert(self, alert) -> None:
        ^
bot/main.py:1079:9: error: Statement is unreachable  [unreachable]
            if not self.market_data.is_connected():
            ^
bot/main.py:1085:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _get_market_data_provider(self):
        ^
bot/main.py:1097:9: error: Statement is unreachable  [unreachable]
            return self.market_data
            ^~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1125:42: error: Missing type parameters for generic type "list"
[type-arg]
        def _get_latest_market_data(self) -> list:
                                             ^
bot/main.py:1129:49: error: Right operand of "and" is never evaluated
[unreachable]
                if self.market_data is not None and hasattr(
                                                    ^
bot/main.py:1132:17: error: Statement is unreachable  [unreachable]
                    method = self.market_data.get_latest_ohlcv
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1150:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def _validate_trading_timing(self, latest_candle) -> bool:
        ^
bot/main.py:1187:17: error: Statement is unreachable  [unreachable]
                    self.logger.warning(
                    ^
bot/main.py:1264:39: error: Incompatible types in assignment (expression has
type "str", variable has type
"Literal['conservative', 'moderate', 'aggressive', 'custom']")  [assignment]
                    mm_settings.profile = self._market_making_profile_over...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:1401:17: error: Statement is unreachable  [unreachable]
                    data_status = self.market_data.get_data_status()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1473:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_exchange(self):
        ^
bot/main.py:1473:5: note: Use "-> None" if function does not return a value
bot/main.py:1495:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_market_data(self):
        ^
bot/main.py:1495:5: note: Use "-> None" if function does not return a value
bot/main.py:1512:9: error: Statement is unreachable  [unreachable]
            await self.market_data.connect()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1514:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_bluefin_market_data(
        ^
bot/main.py:1532:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_bluefin_fallback_market_data(
        ^
bot/main.py:1540:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_realtime_market_data(self, interval_seconds: int)...
        ^
bot/main.py:1543:1: error: Skipping analyzing "bot.data.realtime_market":
module is installed, but missing library stubs or py.typed marker
[import-untyped]
                from .data.realtime_market import RealtimeMarketDataProvid...
    ^
bot/main.py:1571:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_standard_market_data_fallback(self):
        ^
bot/main.py:1579:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_coinbase_market_data(self):
        ^
bot/main.py:1586:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _verify_llm_agent(self):
        ^
bot/main.py:1586:5: note: Use "-> None" if function does not return a value
bot/main.py:1594:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_market_making_integration(self):
        ^
bot/main.py:1594:5: note: Use "-> None" if function does not return a value
bot/main.py:1619:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _connect_optional_services(self):
        ^
bot/main.py:1619:5: note: Use "-> None" if function does not return a value
bot/main.py:1621:9: error: Need type annotation for "service_statuses" (hint:
"service_statuses: dict[<type>, <type>] = ...")  [var-annotated]
            service_statuses = {}  # Initialize to empty dict for fallback
            ^~~~~~~~~~~~~~~~
bot/main.py:1662:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _connect_omnisearch(self):
        ^
bot/main.py:1662:5: note: Use "-> None" if function does not return a value
bot/main.py:1666:31: error: Item "None" of "Any | None" has no attribute
"connect"  [union-attr]
                connected = await self.omnisearch_client.connect()
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1675:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_trading_components(self):
        ^
bot/main.py:1675:5: note: Use "-> None" if function does not return a value
bot/main.py:1681:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_experience_manager(self):
        ^
bot/main.py:1681:5: note: Use "-> None" if function does not return a value
bot/main.py:1695:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _setup_memory_system(self):
        ^
bot/main.py:1695:5: note: Use "-> None" if function does not return a value
bot/main.py:1711:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_pattern_performance(self):
        ^
bot/main.py:1714:35: error: Item "None" of "Any | None" has no attribute
"get_pattern_statistics"  [union-attr]
                pattern_stats = await self.memory_server.get_pattern_stati...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:1735:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _connect_dominance_provider(self):
        ^
bot/main.py:1735:5: note: Use "-> None" if function does not return a value
bot/main.py:1748:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _initialize_dashboard_components(self):
        ^
bot/main.py:1748:5: note: Use "-> None" if function does not return a value
bot/main.py:1767:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _start_command_consumer(self):
        ^
bot/main.py:1767:5: note: Use "-> None" if function does not return a value
bot/main.py:1782:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _start_performance_monitoring(self):
        ^
bot/main.py:1782:5: note: Use "-> None" if function does not return a value
bot/main.py:1839:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_data_timeout(self):
        ^
bot/main.py:1839:5: note: Use "-> None" if function does not return a value
bot/main.py:1842:13: error: Statement is unreachable  [unreachable]
                status = self.market_data.get_data_status()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1852:51: error: Missing type parameters for generic type "list"
[type-arg]
        async def _fetch_initial_market_data(self) -> list:
                                                      ^
bot/main.py:1855:45: error: Right operand of "and" is never evaluated
[unreachable]
            if self.market_data is not None and hasattr(
                                                ^
bot/main.py:1858:13: error: Statement is unreachable  [unreachable]
                method = self.market_data.get_latest_ohlcv
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:1875:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _resolve_market_data_async(self, data):
        ^
bot/main.py:1890:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def _validate_market_data_type(self, data) -> list:
        ^
bot/main.py:1890:51: error: Missing type parameters for generic type "list"
[type-arg]
        def _validate_market_data_type(self, data) -> list:
                                                      ^
bot/main.py:1910:16: error: Incompatible return value type (got
"list[Any] | tuple[Any, ...]", expected "list[Any]")  [return-value]
            return data
                   ^~~~
bot/main.py:1913:21: error: Missing type parameters for generic type "list"
[type-arg]
            self, data: list, min_candles_required: int, require_24h_data:...
                        ^
bot/main.py:1925:21: error: Missing type parameters for generic type "list"
[type-arg]
            self, data: list, min_candles_required: int, interval_seconds:...
                        ^
bot/main.py:1952:21: error: Missing type parameters for generic type "list"
[type-arg]
            self, data: list, min_candles_required: int
                        ^
bot/main.py:1977:13: error: Right operand of "and" is never evaluated
[unreachable]
                self.market_data is not None
                ^
bot/main.py:1981:13: error: Statement is unreachable  [unreachable]
                self.logger.info("📡 WebSocket is receiving real-time marke...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:2013:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_data_wait_progress(self, elapsed_time: float, data:...
        ^
bot/main.py:2013:72: error: Missing type parameters for generic type "list"
[type-arg]
    ...nc def _log_data_wait_progress(self, elapsed_time: float, data: list):
                                                                       ^
bot/main.py:2029:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_realtime_provider_status(self, elapsed_time: float,...
        ^
bot/main.py:2029:78: error: Missing type parameters for generic type "list"
[type-arg]
    ... _log_realtime_provider_status(self, elapsed_time: float, data: list):
                                                                       ^
bot/main.py:2036:17: error: Right operand of "and" is never evaluated
[unreachable]
                and isinstance(self.market_data, RealtimeMarketDataProvide...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2038:13: error: Statement is unreachable  [unreachable]
                status = self.market_data.get_status()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2060:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_standard_provider_status(self, elapsed_time: float,...
        ^
bot/main.py:2060:78: error: Missing type parameters for generic type "list"
[type-arg]
    ... _log_standard_provider_status(self, elapsed_time: float, data: list):
                                                                       ^
bot/main.py:2063:13: error: Statement is unreachable  [unreachable]
                status = self.market_data.get_data_status()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2089:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_basic_provider_status(self, elapsed_time: float, da...
        ^
bot/main.py:2089:75: error: Missing type parameters for generic type "list"
[type-arg]
    ...def _log_basic_provider_status(self, elapsed_time: float, data: list):
                                                                       ^
bot/main.py:2118:21: error: Right operand of "and" is never evaluated
[unreachable]
                    and isinstance(self.market_data, RealtimeMarketDataPro...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:2121:17: error: Statement is unreachable  [unreachable]
                    data_status = self.market_data.get_status()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2142:49: error: Right operand of "or" is never evaluated
[unreachable]
            if not realtime_market_data_provider or not isinstance(
                                                    ^
bot/main.py:2149:17: error: Statement is unreachable  [unreachable]
                    data_status = self.market_data.get_data_status()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2284:21: error: Statement is unreachable  [unreachable]
                        latest_data = self.market_data.get_latest_ohlcv(li...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:2306:9: error: Statement is unreachable  [unreachable]
            if not self.market_data.is_connected():
            ^
bot/main.py:2459:51: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _setup_trading_environment(self) -> dict:
                                                      ^
bot/main.py:2485:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _get_realtime_provider_class(self):
        ^
bot/main.py:2494:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _process_trading_iteration(
        ^
bot/main.py:2495:29: error: Missing type parameters for generic type "dict"
[type-arg]
            self, loop_context: dict, loop_count: int, _loop_start
                                ^
bot/main.py:2526:52: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _get_market_data(self, loop_context: dict) -> list:
                                                       ^
bot/main.py:2526:61: error: Missing type parameters for generic type "list"
[type-arg]
        async def _get_market_data(self, loop_context: dict) -> list:
                                                                ^
bot/main.py:2530:13: error: Statement is unreachable  [unreachable]
                return await self._get_realtime_market_data(
                ^
bot/main.py:2533:45: error: Right operand of "and" is never evaluated
[unreachable]
            if self.market_data is not None and hasattr(
                                                ^
bot/main.py:2536:13: error: Statement is unreachable  [unreachable]
                return await self._get_standard_market_data()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2539:73: error: Missing type parameters for generic type "list"
[type-arg]
    ...nc def _get_realtime_market_data(self, interval_seconds: int) -> list:
                                                                        ^
bot/main.py:2542:27: error: MarketDataProviderType? has no attribute
"get_candle_history"  [attr-defined]
                latest_data = self.market_data.get_candle_history(
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2548:17: error: MarketDataProviderType? has no attribute
"tick_aggregator"  [attr-defined]
                    self.market_data.tick_aggregator.force_complete_candle...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2549:31: error: MarketDataProviderType? has no attribute
"get_candle_history"  [attr-defined]
                    latest_data = self.market_data.get_candle_history(
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2553:13: error: Returning Any from function declared to return
"list[Any]"  [no-any-return]
                return latest_data
                ^~~~~~~~~~~~~~~~~~
bot/main.py:2556:50: error: Missing type parameters for generic type "list"
[type-arg]
        async def _get_standard_market_data(self) -> list:
                                                     ^
bot/main.py:2558:18: error: MarketDataProviderType? has no attribute
"get_latest_ohlcv"  [attr-defined]
            method = self.market_data.get_latest_ohlcv
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2576:24: error: Incompatible return value type (got
"list[Any] | tuple[Any, ...]", expected "list[Any]")  [return-value]
                    return latest_data
                           ^~~~~~~~~~~
bot/main.py:2580:9: error: Returning Any from function declared to return
"list[Any]"  [no-any-return]
            return latest_data
            ^~~~~~~~~~~~~~~~~~
bot/main.py:2582:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _resolve_async_data(self, latest_data):
        ^
bot/main.py:2595:70: error: Missing type parameters for generic type "list"
[type-arg]
    ..._process_market_data_and_indicators(self, latest_data: list) -> tuple:
                                                              ^
bot/main.py:2595:79: error: Missing type parameters for generic type "tuple"
[type-arg]
    ..._process_market_data_and_indicators(self, latest_data: list) -> tuple:
                                                                       ^
bot/main.py:2611:13: error: Function is missing a return type annotation
[no-untyped-def]
                def fallback_context():
                ^
bot/main.py:2639:46: error: Missing type parameters for generic type "tuple"
[type-arg]
        async def _calculate_indicators(self) -> tuple:
                                                 ^
bot/main.py:2647:9: error: Statement is unreachable  [unreachable]
            market_data = self.market_data.to_dataframe(limit=200)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2664:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _get_dominance_candles(self):
        ^
bot/main.py:2686:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _compute_indicators(self, market_data, dominance_candles...
        ^
bot/main.py:2686:76: error: Missing type parameters for generic type "dict"
[type-arg]
    ...def _compute_indicators(self, market_data, dominance_candles) -> dict:
                                                                        ^
bot/main.py:2707:13: error: Returning Any from function declared to return
"dict[Any, Any]"  [no-any-return]
                return indicator_state
                ^~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2723:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _publish_indicator_data(self, indicator_state: dict):
        ^
bot/main.py:2723:62: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _publish_indicator_data(self, indicator_state: dict):
                                                                 ^
bot/main.py:2725:15: error: Item "None" of "Any | None" has no attribute
"publish_indicator_data"  [union-attr]
            await self.websocket_publisher.publish_indicator_data(
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:2739:62: error: Missing type parameters for generic type "dict"
[type-arg]
    ...sync def _prepare_indicator_data(self, indicator_state: dict) -> dict:
                                                               ^
bot/main.py:2777:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _process_dominance_data(self, indicator_dict: dict):
        ^
bot/main.py:2777:61: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _process_dominance_data(self, indicator_dict: dict):
                                                                ^
bot/main.py:2821:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def _create_dominance_metrics(self, dominance_data) -> dict:
        ^
bot/main.py:2821:60: error: Missing type parameters for generic type "dict"
[type-arg]
        def _create_dominance_metrics(self, dominance_data) -> dict:
                                                               ^
bot/main.py:2856:48: error: Missing type parameters for generic type "dict"
[type-arg]
        def _get_default_dominance_values(self) -> dict:
                                                   ^
bot/main.py:2868:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _create_market_state(
        ^
bot/main.py:2896:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _execute_trading_logic(
        ^
bot/main.py:2943:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _get_llm_decision(self, market_state):
        ^
bot/main.py:2984:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _record_trading_decision(self, market_state, trade_actio...
        ^
bot/main.py:3016:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _publish_trading_decision(
        ^
bot/main.py:3049:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _execute_trade_decision(
        ^
bot/main.py:3061:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _execute_directional_trade(
        ^
bot/main.py:3082:5: error: Function is missing a type annotation
[no-untyped-def]
        async def _execute_non_directional_trade(
        ^
bot/main.py:3117:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_periodic_tasks(
        ^
bot/main.py:3117:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _handle_periodic_tasks(
        ^
bot/main.py:3118:63: error: Missing type parameters for generic type "dict"
[type-arg]
            self, loop_count: int, last_status_log, loop_context: dict
                                                                  ^
bot/main.py:3138:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _log_pattern_statistics(self):
        ^
bot/main.py:3141:35: error: Item "None" of "Any | None" has no attribute
"get_pattern_statistics"  [union-attr]
                pattern_stats = await self.memory_server.get_pattern_stati...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:3164:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_status_logging(
        ^
bot/main.py:3164:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _handle_status_logging(
        ^
bot/main.py:3172:17: error: Statement is unreachable  [unreachable]
                    data_status = self.market_data.get_data_status()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3199:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _update_paper_trading_metrics(self, loop_count: int):
        ^
bot/main.py:3205:17: error: Item "None" of "PaperTradingAccount | None" has no
attribute "update_daily_performance"  [union-attr]
                    self.paper_account.update_daily_performance()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3210:21: error: Item "None" of "PaperTradingAccount | None" has no
attribute "get_performance_metrics_for_monitor"  [union-attr]
                        self.paper_account.get_performance_metrics_for_mon...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:3229:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_loop_timing(self, loop_start, target_frequency: ...
        ^
bot/main.py:3229:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _handle_loop_timing(self, loop_start, target_frequency: ...
        ^
bot/main.py:3263:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_loop_error(
        ^
bot/main.py:3264:64: error: Missing type parameters for generic type "dict"
[type-arg]
            self, error: Exception, loop_count: int, loop_context: dict
                                                                   ^
bot/main.py:3314:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_loop_error_enhanced(
        ^
bot/main.py:3318:23: error: Missing type parameters for generic type "dict"
[type-arg]
            loop_context: dict,
                          ^
bot/main.py:3366:75: error: Missing type parameters for generic type "dict"
[type-arg]
    ...self, error_category: str, consecutive_errors: int, loop_context: dict
                                                                         ^
bot/main.py:3388:9: error: Returning Any from function declared to return
"float"  [no-any-return]
            return min(base_delay * backoff_multiplier, 60.0)  # Cap at 1 ...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3390:52: error: Missing type parameters for generic type "dict"
[type-arg]
        async def _perform_basic_health_check(self) -> dict:
                                                       ^
bot/main.py:3409:43: error: MarketDataProviderType? has no attribute
"get_current_price"  [attr-defined]
                        current_price = await self.market_data.get_current...
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:3455:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_emergency_situation(self, error_categories: dict...
        ^
bot/main.py:3455:67: error: Missing type parameters for generic type "dict"
[type-arg]
    ...  async def _handle_emergency_situation(self, error_categories: dict):
                                                                       ^
bot/main.py:3475:23: error: "TradingEngine" has no attribute
"_emergency_close_positions"  [attr-defined]
                    await self._emergency_close_positions()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3509:17: error: Statement is unreachable  [unreachable]
                    self.logger.error("Market data not available for trade...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:3512:35: error: MarketDataProviderType? has no attribute
"get_current_price"  [attr-defined]
                current_price = await self.market_data.get_current_price()...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3512:35: note: Error code "attr-defined" not covered by "type: ignore" comment
bot/main.py:3525:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _execute_trade(
        ^
bot/main.py:3929:5: error: Function is missing a return type annotation
[no-untyped-def]
        def _display_status_update(
        ^
bot/main.py:4185:13: error: Returning Any from function declared to return
"dict[str, Any]"  [no-any-return]
                return summary
                ^~~~~~~~~~~~~~
bot/main.py:4225:17: error: Statement is unreachable  [unreachable]
                    console.print("  • Disconnecting from market data...")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4568:37: error: Unexpected keyword argument "format" for
"export_trade_history" of "PositionManager"  [call-arg]
                        trade_history = self.position_manager.export_trade...
                                        ^
bot/main.py:5401:1: error: Library stubs not installed for "yaml"
[import-untyped]
                    import yaml
    ^
bot/main.py:5401:1: note: Hint: "python3 -m pip install types-PyYAML"
bot/main.py:5401:1: note: (or run "mypy --install-types" to install all missing stub packages)
bot/position_manager.py:1073:5: note: "export_trade_history" of "PositionManager" defined here
bot/main.py:5199:25: error: Unexpected keyword argument "format" for
"export_trade_history" of "PositionManager"  [call-arg]
            trade_history = position_manager.export_trade_history(
                            ^
bot/position_manager.py:1073:5: note: "export_trade_history" of "PositionManager" defined here
bot/main.py:3229:5: error: Function is missing a return type annotation
[no-untyped-def]
        async def _handle_loop_timing(self, loop_start, target_frequency: ...
        ^
bot/main.py:3229:5: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        async def _handle_loop_timing(self, loop_start, target_frequency: ...
        ^
bot/main.py:3237:13: error: Cannot determine type of "_loop_timing_counter"
[has-type]
                self._loop_timing_counter += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:3512: error: Unused "type: ignore" comment  [unused-ignore]
                current_price = await self.market_data.get_current_price()...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:4221: error: Unused "type: ignore" comment  [unused-ignore]
                    cleanup_tasks.append(cancel_task)  # type: ignore[arg-...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
bot/main.py:4228: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4236: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4247: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4281: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4292: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:4303: error: Unused "type: ignore" comment  [unused-ignore]
                    )  # type: ignore[arg-type]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
bot/main.py:5603:17: error: Statement is unreachable  [unreachable]
                    console.print(f"   ❌ Unknown exchange type: {exchange_...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
