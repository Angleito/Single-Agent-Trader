[tool.poetry]
name = "ai-trading-bot"
version = "0.1.0"
description = "AI-assisted crypto futures trading bot for Coinbase with VuManChu Cipher indicators"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "bot"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
pip = "^24.0.0"
setuptools = "^69.0.0"
pandas = "^2.2.0"
numpy = "^1.26.0"
pandas-ta = "^0.3.14b0"
scipy = "^1.11.0"
langchain = "^0.2.0"
langchain-openai = "^0.1.0"
pydantic = "^2.6.0"
pydantic-settings = "^2.2.0"
python-dotenv = "^1.0.0"
coinbase-advanced-py = "^1.3.0"
# bluefin-v2-client = "^4.2.13"  # Install separately in Docker due to build complexity
openai = "^1.12.0"
click = "^8.1.7"
websockets = "^12.0"
aiohttp = ">=3.8.5,<4.0.0"
rich = "^13.7.0"
requests = "^2.31.0"
docker = "^7.1.0"
websocket-client = "1.6.4"
psutil = "^6.1.0"
aiofiles = "^24.0.0"
python-socketio = "5.8.0"
aiohappyeyeballs = "^2.6.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.12.0"
python-dateutil = "^2.8.0"
black = "^24.0.0"
ruff = "^0.3.0"
pre-commit = "^3.6.0"
mypy = "^1.8.0"
types-requests = "^2.31.0"
memory-profiler = "^0.61.0"
safety = "^3.5.2"

[tool.poetry.scripts]
ai-trading-bot = "bot.main:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["bot"]
omit = ["tests/*", "bot/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]