# Docker Compose extension for performance monitoring
#
# Usage: docker-compose -f docker-compose.yml -f scripts/docker-compose-monitoring.yml up

version: '3.9'

services:
  performance-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: performance-monitor
    command: python scripts/performance-monitor.py
    ports:
      - "9090:9090"  # Prometheus metrics endpoint
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
      - ./scripts:/app/scripts:ro
      - /dev/shm:/dev/shm  # Shared memory for zero-copy metrics
    networks:
      - trading-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Prometheus server for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./scripts/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - trading-network
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./scripts/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - trading-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:

networks:
  trading-network:
    external: true
