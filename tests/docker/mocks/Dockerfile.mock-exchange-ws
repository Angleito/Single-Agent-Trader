# Mock Exchange WebSocket Dockerfile
# 
# Creates a generic mock exchange WebSocket service for testing orderbook functionality
# Provides high-frequency orderbook updates for stress testing
#
# Build: docker build -t mock-exchange-ws -f tests/docker/mocks/Dockerfile.mock-exchange-ws .

FROM python:3.12-slim-bullseye

# Metadata
LABEL maintainer="AI Trading Bot Team"
LABEL description="Mock exchange WebSocket service for orderbook stress testing"
LABEL service="mock-exchange-ws"

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    netcat \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install --no-cache-dir \
    websockets==12.0 \
    asyncio==3.4.3 \
    aiohttp==3.9.1 \
    python-json-logger==2.0.7 \
    faker==20.1.0 \
    numpy==1.26.2

# Create mock service user
RUN useradd -m -s /bin/bash mockuser

# Set working directory
WORKDIR /app

# Copy mock service implementation
COPY tests/docker/mocks/exchange_ws_mock_service.py /app/exchange_ws_mock_service.py
COPY tests/docker/mocks/common/ /app/common/

# Create necessary directories
RUN mkdir -p /app/data /app/logs && \
    chown -R mockuser:mockuser /app

# Switch to mock user
USER mockuser

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    WEBSOCKET_PORT=8082 \
    UPDATE_FREQUENCY=100 \
    ORDERBOOK_LEVELS=20 \
    SYMBOLS=BTC-USD,ETH-USD,SOL-USD \
    PRICE_VOLATILITY=0.015 \
    LOG_LEVEL=INFO

# Expose ports
EXPOSE 8082

# Health check
HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 \
    CMD nc -z localhost 8082 || exit 1

# Start mock service
CMD ["python", "exchange_ws_mock_service.py"]