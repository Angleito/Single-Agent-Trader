============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0
rootdir: /Users/angel/Documents/Projects/cursorprod
configfile: pyproject.toml
plugins: anyio-4.9.0, cov-6.2.1, mock-3.14.1, hypothesis-6.135.14, asyncio-1.0.0
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 539 items

tests/unit/test_balance_operations.py .........................          [  4%]
tests/unit/test_balance_validation.py ...........................        [  9%]
tests/unit/test_centralized_logging.py ............F.F........           [ 13%]
tests/unit/test_dominance.py ........F....                               [ 16%]
tests/unit/test_exchange_factory.py .F..F...FFF.                         [ 18%]
tests/unit/test_financial_sentiment.py ...........................F..... [ 24%]
..............F..                                                        [ 27%]
tests/unit/test_indicators.py F.......                                   [ 29%]
tests/unit/test_inventory_manager.py ..................                  [ 32%]
tests/unit/test_market_context.py ...F.....F......F...F....FFF.......... [ 39%]
.......FF.F..FF.                                                         [ 42%]
tests/unit/test_market_making_integration.py ...F....................    [ 47%]
tests/unit/test_market_making_performance_monitor.py FF..F........       [ 49%]
tests/unit/test_omnisearch_client.py ...........................F.F.FFF. [ 56%]
F..........FFFF.                                                         [ 58%]
tests/unit/test_order_manager.py .FFFFFF...FFFFFFF.F.F                   [ 62%]
tests/unit/test_paper_trading_balance.py ....FF.F...F.F.FFF.             [ 66%]
tests/unit/test_performance_optimization.py F...F....                    [ 68%]
tests/unit/test_position_manager.py ...FFFFFFFFFFFFFFF.FFFFFF            [ 72%]
tests/unit/test_position_order_integration.py ..F.FFFFFF                 [ 74%]
tests/unit/test_risk_manager.py ....FFFFFFFFFFFF                         [ 77%]
tests/unit/test_task_management_patterns.py .....                        [ 78%]
tests/unit/test_type_safe_logging.py ..............................      [ 84%]
tests/unit/test_validator.py ............                                [ 86%]
tests/unit/test_web_search_formatter.py ........F....FFF................ [ 92%]
.......................F......EE.F..                                     [ 98%]
tests/unit/test_websocket_performance.py ......                          [100%]

==================================== ERRORS ====================================
_ ERROR at setup of TestWebSearchFormatterIntegration.test_complete_correlation_formatting_workflow _
tests/unit/test_web_search_formatter.py:1104: in sample_correlation_analysis
    return CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f56e40>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
_ ERROR at setup of TestWebSearchFormatterIntegration.test_comprehensive_market_context_workflow _
tests/unit/test_web_search_formatter.py:1104: in sample_correlation_analysis
    return CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f56900>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
=================================== FAILURES ===================================
__________________ TestSecurityFilter.test_api_key_redaction ___________________
tests/unit/test_centralized_logging.py:225: in test_api_key_redaction
    assert "sk-1234567890abcdef" not in safe_text
E   AssertionError: assert 'sk-1234567890abcdef' not in 'API_KEY=sk-...567890abcdef'
E
E     'sk-1234567890abcdef' is contained here:
E       API_KEY=sk-1234567890abcdef
_________________ TestSecurityFilter.test_log_record_filtering _________________
tests/unit/test_centralized_logging.py:267: in test_log_record_filtering
    assert "sk-test123456789" not in record.msg
E   AssertionError: assert 'sk-test123456789' not in 'API call wi...est123456789'
E
E     'sk-test123456789' is contained here:
E       API call with key sk-test123456789
__________________ TestDominanceDataProvider.test_update_loop __________________
tests/unit/test_dominance.py:275: in test_update_loop
    assert dominance_provider.fetch_current_dominance.call_count >= 2
E   AssertionError: assert 0 >= 2
E    +  where 0 = <AsyncMock id='4877235408'>.call_count
E    +    where <AsyncMock id='4877235408'> = <bot.data.dominance.DominanceDataProvider object at 0x122ad1050>.fetch_current_dominance
---------------------------- Captured stderr setup -----------------------------
INFO - bot.data.dominance - Initialized DominanceDataProvider with coingecko source
_______________ TestExchangeFactory.test_create_bluefin_exchange _______________
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='test_private_key', network='testnet', dry_run=True)
E     Actual: BluefinClient(private_key='test_private_key', network='testnet', service_url='http://bluefin-service:8080', dry_run=True)

During handling of the above exception, another exception occurred:
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:991: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='test_private_key', network='testnet', dry_run=True)
E     Actual: BluefinClient(private_key='test_private_key', network='testnet', service_url='http://bluefin-service:8080', dry_run=True)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': T...service:8080'} == {'dry_run': T..._private_key'}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': 'http://bluefin-service:8080'}
E     Use -v to get more diff

During handling of the above exception, another exception occurred:
tests/unit/test_exchange_factory.py:75: in test_create_bluefin_exchange
    mock_bluefin_client.assert_called_once_with(
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='test_private_key', network='testnet', dry_run=True)
E     Actual: BluefinClient(private_key='test_private_key', network='testnet', service_url='http://bluefin-service:8080', dry_run=True)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': T...service:8080'} == {'dry_run': T..._private_key'}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': 'http://bluefin-service:8080'}
E     Use -v to get more diff
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.factory - Creating bluefin exchange client (dry_run=True)
INFO - bot.exchange.factory - Created Bluefin client (network=testnet, service_url=http://bluefin-service:8080, has_key=True)
__________ TestExchangeFactory.test_bluefin_uses_settings_private_key __________
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='settings_private_key', network='mainnet', dry_run=False)
E     Actual: BluefinClient(private_key='settings_private_key', network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>, dry_run=False)

During handling of the above exception, another exception occurred:
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:991: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='settings_private_key', network='mainnet', dry_run=False)
E     Actual: BluefinClient(private_key='settings_private_key', network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>, dry_run=False)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': F...'4877224992'>} == {'dry_run': F..._private_key'}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': <MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>}
E     Use -v to get more diff

During handling of the above exception, another exception occurred:
tests/unit/test_exchange_factory.py:144: in test_bluefin_uses_settings_private_key
    mock_bluefin_client.assert_called_once_with(
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key='settings_private_key', network='mainnet', dry_run=False)
E     Actual: BluefinClient(private_key='settings_private_key', network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>, dry_run=False)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': F...'4877224992'>} == {'dry_run': F..._private_key'}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': <MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>}
E     Use -v to get more diff
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.factory - Creating bluefin exchange client (dry_run=False)
INFO - bot.exchange.factory - Created Bluefin client (network=mainnet, service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4877224992'>, has_key=True)
______________ TestExchangeFactory.test_logging_coinbase_creation ______________
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1050: in assert_any_call
    raise AssertionError(
E   AssertionError: info('Creating coinbase exchange client (dry_run=True)') call not found

During handling of the above exception, another exception occurred:
tests/unit/test_exchange_factory.py:227: in test_logging_coinbase_creation
    mock_logger.info.assert_any_call(
E   AssertionError: info('Creating coinbase exchange client (dry_run=True)') call not found
E
E   pytest introspection follows:
E
E   Args:
E   assert ('Created Coi..., 'cdp', True) == ('Creating co...y_run=True)',)
E
E     At index 0 diff: 'Created Coinbase client (auth_method=%s, sandbox=%s)' != 'Creating coinbase exchange client (dry_run=True)'
E     Left contains 2 more items, first extra item: 'cdp'
E     Use -v to get more diff
______________ TestExchangeFactory.test_logging_bluefin_creation _______________
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1050: in assert_any_call
    raise AssertionError(
E   AssertionError: info('Creating bluefin exchange client (dry_run=False)') call not found

During handling of the above exception, another exception occurred:
tests/unit/test_exchange_factory.py:251: in test_logging_bluefin_creation
    mock_logger.info.assert_any_call(
E   AssertionError: info('Creating bluefin exchange client (dry_run=False)') call not found
E
E   pytest introspection follows:
E
E   Args:
E   assert ('Created Blu...e:8080', True) == ('Creating bl..._run=False)',)
E
E     At index 0 diff: 'Created Bluefin client (network=%s, service_url=%s, has_key=%s)' != 'Creating bluefin exchange client (dry_run=False)'
E     Left contains 3 more items, first extra item: 'testnet'
E     Use -v to get more diff
___________ TestExchangeFactory.test_bluefin_no_private_key_provided ___________
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key=None, network='mainnet', dry_run=True)
E     Actual: BluefinClient(private_key=None, network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>, dry_run=True)

During handling of the above exception, another exception occurred:
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:991: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key=None, network='mainnet', dry_run=True)
E     Actual: BluefinClient(private_key=None, network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>, dry_run=True)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': T...'4879393056'>} == {'dry_run': T...te_key': None}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': <MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>}
E     Use -v to get more diff

During handling of the above exception, another exception occurred:
tests/unit/test_exchange_factory.py:275: in test_bluefin_no_private_key_provided
    mock_bluefin_client.assert_called_once_with(
E   AssertionError: expected call not found.
E   Expected: BluefinClient(private_key=None, network='mainnet', dry_run=True)
E     Actual: BluefinClient(private_key=None, network='mainnet', service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>, dry_run=True)
E
E   pytest introspection follows:
E
E   Kwargs:
E   assert {'dry_run': T...'4879393056'>} == {'dry_run': T...te_key': None}
E
E     Omitting 3 identical items, use -vv to show
E     Left contains 1 more item:
E     {'service_url': <MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>}
E     Use -v to get more diff
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.factory - Creating bluefin exchange client (dry_run=True)
INFO - bot.exchange.factory - Created Bluefin client (network=mainnet, service_url=<MagicMock name='settings.exchange.bluefin_service_url' id='4879393056'>, has_key=False)
____ TestFinancialSentimentService.test_calculate_correlation_score_neutral ____
tests/unit/test_financial_sentiment.py:460: in test_calculate_correlation_score_neutral
    assert abs(correlation) < 0.5  # Should be relatively neutral
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert 0.55 < 0.5
E    +  where 0.55 = abs(0.55)
----------------------------- Captured stderr call -----------------------------
INFO - bot.services.financial_sentiment - Financial sentiment service initialized
_ TestFinancialSentimentServiceIntegration.test_full_analysis_workflow_bearish _
tests/unit/test_financial_sentiment.py:908: in test_full_analysis_workflow_bearish
    assert "regulatory" in formatted.lower() or "fear" in formatted.lower()
E   AssertionError: assert ('regulatory' in '=== financial sentiment analysis ===\n\noverall market sentiment: strongly bearish\nsentiment score: -0.89 (range: -1... | high confidence supports acting on sentiment signals | weak correlation suggests crypto-specific factors dominate\n' or 'fear' in '=== financial sentiment analysis ===\n\noverall market sentiment: strongly bearish\nsentiment score: -0.89 (range: -1... | high confidence supports acting on sentiment signals | weak correlation suggests crypto-specific factors dominate\n')
E    +  where '=== financial sentiment analysis ===\n\noverall market sentiment: strongly bearish\nsentiment score: -0.89 (range: -1... | high confidence supports acting on sentiment signals | weak correlation suggests crypto-specific factors dominate\n' = <built-in method lower of str object at 0x115a2de00>()
E    +    where <built-in method lower of str object at 0x115a2de00> = '=== FINANCIAL SENTIMENT ANALYSIS ===\n\nOverall Market Sentiment: STRONGLY BEARISH\nSentiment Score: -0.89 (Range: -1... | High confidence supports acting on sentiment signals | Weak correlation suggests crypto-specific factors dominate\n'.lower
E    +  and   '=== financial sentiment analysis ===\n\noverall market sentiment: strongly bearish\nsentiment score: -0.89 (range: -1... | high confidence supports acting on sentiment signals | weak correlation suggests crypto-specific factors dominate\n' = <built-in method lower of str object at 0x115a2de00>()
E    +    where <built-in method lower of str object at 0x115a2de00> = '=== FINANCIAL SENTIMENT ANALYSIS ===\n\nOverall Market Sentiment: STRONGLY BEARISH\nSentiment Score: -0.89 (Range: -1... | High confidence supports acting on sentiment signals | Weak correlation suggests crypto-specific factors dominate\n'.lower
----------------------------- Captured stderr call -----------------------------
INFO - bot.services.financial_sentiment - Financial sentiment service initialized
___________________ TestCipherA.test_cipher_a_initialization ___________________
tests/unit/test_indicators.py:18: in test_cipher_a_initialization
    assert hasattr(cipher_a, "wt_signal_length")
E   AssertionError: assert False
E    +  where False = hasattr(<bot.indicators.vumanchu.CipherA object at 0x122d5a510>, 'wt_signal_length')
----------------------------- Captured stderr call -----------------------------
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.rsimfi - RSI+MFI indicator initialized
INFO - bot.indicators.cipher_a_signals - Cipher A Signals calculator initialized
INFO - bot.indicators.ema_ribbon - EMA Ribbon indicator initialized
INFO - bot.indicators.rsimfi - RSI+MFI indicator initialized
INFO - bot.indicators.schaff_trend_cycle - Schaff Trend Cycle indicator initialized
INFO - bot.indicators.divergence_detector - Divergence detector initialized
_________________ TestMarketRegime.test_market_regime_creation _________________
tests/unit/test_market_context.py:103: in test_market_regime_creation
    regime = MarketRegime(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for MarketRegime
E   regime_change_probability
E     Field required [type=missing, input_value={'regime_type': <MarketRe..._environment': 'STABLE'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.9/v/missing
____________ TestMomentumAlignment.test_momentum_alignment_creation ____________
tests/unit/test_market_context.py:210: in test_momentum_alignment_creation
    alignment = MomentumAlignment(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for MomentumAlignment
E   momentum_sustainability
E     Field required [type=missing, input_value={'directional_alignment':...d_strength_nasdaq': 0.6}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.9/v/missing
_ TestMarketContextAnalyzer.test_analyze_crypto_nasdaq_correlation_error_handling _
tests/unit/test_market_context.py:362: in test_analyze_crypto_nasdaq_correlation_error_handling
    assert correlation.direction == "ERROR"
E   AssertionError: assert 'INSUFFICIENT_DATA' == 'ERROR'
E
E     - ERROR
E     + INSUFFICIENT_DATA
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
WARNING - bot.analysis.market_context - Insufficient data for correlation analysis
______ TestMarketContextAnalyzer.test_assess_risk_sentiment_extreme_fear _______
tests/unit/test_market_context.py:457: in test_assess_risk_sentiment_extreme_fear
    assert sentiment.volatility_expectation > 20.0
E   AssertionError: assert 20.0 > 20.0
E    +  where 20.0 = RiskSentiment(fear_greed_index=0.0, sentiment_level=<SentimentLevel.EXTREME_FEAR: 'EXTREME_FEAR'>, volatility_expectat...sentiment_divergence=False, timestamp=datetime.datetime(2025, 6, 23, 13, 24, 15, 902925, tzinfo=datetime.timezone.utc)).volatility_expectation
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
_____ TestMarketContextAnalyzer.test_calculate_momentum_alignment_negative _____
tests/unit/test_market_context.py:567: in test_calculate_momentum_alignment_negative
    assert alignment.directional_alignment < 0.0  # Opposite directions
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 0.04199999999999998 < 0.0
E    +  where 0.04199999999999998 = MomentumAlignment(directional_alignment=0.04199999999999998, strength_alignment=0.8333333333333334, crypto_momentum_sc...et_momentum_flow='NEUTRAL', timestamp=datetime.datetime(2025, 6, 23, 13, 24, 15, 913892, tzinfo=datetime.timezone.utc)).directional_alignment
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
__ TestMarketContextAnalyzer.test_calculate_momentum_alignment_error_handling __
tests/unit/test_market_context.py:588: in test_calculate_momentum_alignment_error_handling
    assert "Analysis error" in alignment.momentum_divergences[0]
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   IndexError: list index out of range
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
___________ TestMarketContextAnalyzer.test_generate_context_summary ____________
tests/unit/test_market_context.py:605: in test_generate_context_summary
    regime = MarketRegime(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for MarketRegime
E   regime_change_probability
E     Field required [type=missing, input_value={'regime_type': <MarketRe..._environment': 'STABLE'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.9/v/missing
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
___________ TestMarketContextAnalyzer.test_determine_momentum_regime ___________
tests/unit/test_market_context.py:931: in test_determine_momentum_regime
    assert regime1 == "ACCELERATION"
E   AssertionError: assert 'NORMAL' == 'ACCELERATION'
E
E     - ACCELERATION
E     + NORMAL
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
_______ TestMarketContextAnalyzer.test_analyze_cross_asset_momentum_flow _______
tests/unit/test_market_context.py:960: in test_analyze_cross_asset_momentum_flow
    assert flow2 == "RISK_ON_FLOW"
E   AssertionError: assert 'NEUTRAL' == 'RISK_ON_FLOW'
E
E     - RISK_ON_FLOW
E     + NEUTRAL
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
___ TestMarketContextAnalyzerIntegration.test_full_regime_detection_workflow ___
tests/unit/test_market_context.py:1041: in test_full_regime_detection_workflow
    assert len(regime.key_drivers) > 0
E   AssertionError: assert 0 > 0
E    +  where 0 = len([])
E    +    where [] = MarketRegime(regime_type=<MarketRegimeType.RISK_ON: 'RISK_ON'>, confidence=0.37499999999999994, key_drivers=[], fed_po...ime_change_probability=0.1, timestamp=datetime.datetime(2025, 6, 23, 13, 24, 15, 962653, tzinfo=datetime.timezone.utc)).key_drivers
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
___ TestMarketContextAnalyzerIntegration.test_comprehensive_market_analysis ____
tests/unit/test_market_context.py:1121: in test_comprehensive_market_analysis
    assert len(summary) > 500  # Should be comprehensive
    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 48 > 500
E    +  where 48 = len('Error: Could not generate market context summary')
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
ERROR - bot.analysis.market_context - Error generating context summary
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/analysis/market_context.py", line 667, in generate_context_summary
    f"{correlation.rolling_correlation_7d:.3f}",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unsupported format string passed to NoneType.__format__
___ TestMarketContextAnalyzerIntegration.test_error_resilience_comprehensive ___
tests/unit/test_market_context.py:1141: in test_error_resilience_comprehensive
    assert correlation.direction == "ERROR"
E   AssertionError: assert 'INSUFFICIENT_DATA' == 'ERROR'
E
E     - ERROR
E     + INSUFFICIENT_DATA
----------------------------- Captured stderr call -----------------------------
INFO - bot.analysis.market_context - Market context analyzer initialized
WARNING - bot.analysis.market_context - Insufficient data for correlation analysis
_______ TestMarketMakingIntegrator.test_initialize_without_market_making _______
tests/unit/test_market_making_integration.py:275: in test_initialize_without_market_making
    assert not integrator.status.market_making_enabled
E   assert not True
E    +  where True = <bot.strategy.market_making_integration.MarketMakingIntegrationStatus object at 0x122abaea0>.market_making_enabled
E    +    where <bot.strategy.market_making_integration.MarketMakingIntegrationStatus object at 0x122abaea0> = MarketMakingIntegrator(symbol=BTC-USD, market_making_enabled=True, initialized=True, running=False).status
----------------------------- Captured stderr call -----------------------------
INFO - bot.strategy.market_making_integration - MarketMakingIntegrator initialized for symbol BTC-USD (dry_run=True, market_making_symbols=['SUI-PERP'])
INFO - bot.strategy.market_making_integration - Initializing market making integration...
INFO - bot.strategy.market_making_integration - Creating Bluefin client for market making...
INFO - bot.exchange.factory - Creating bluefin exchange client (dry_run=True)
INFO - bot.exchange.bluefin - 📊 Paper Trading Mode - Safe simulation mode enabled
INFO - bot.error_handling - Registered service Bluefin_connection with fallback strategy
INFO - bot.error_handling - Registered service Bluefin_trading with fallback strategy
INFO - bot.exchange.base - Initialized Bluefin exchange with error handling and balance validation
INFO - bot.exchange.bluefin_client - Bluefin client initialized with service discovery
INFO - bot.exchange.bluefin_client - Bluefin service client initialized with valid authentication
INFO - bot.exchange.bluefin_fee_calculator - Initialized BluefinFeeCalculator - Maker: 0.0100%, Taker: 0.0350%
INFO - bot.exchange.bluefin - ✅ Bluefin exchange monitoring enabled
INFO - bot.exchange.bluefin - Initialized BluefinClient (network=testnet, service_url=http://bluefin-service:8080, dry_run=True)
INFO - bot.exchange.factory - Created Bluefin client (network=testnet, service_url=http://bluefin-service:8080, has_key=False)
INFO - bot.exchange.bluefin_fee_calculator - Initialized BluefinFeeCalculator - Maker: 0.0100%, Taker: 0.0350%
INFO - bot.system_monitor - Registered component core_strategy for health monitoring
INFO - bot.strategy.core - Initialized CoreStrategy with error handling
INFO - bot.strategy.market_making_strategy - Initialized MarketMakingStrategy with base_spread=10.00 bps, levels=3
INFO - bot.order_manager - Loaded 0 active orders
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.strategy.market_making_order_manager - Initialized MarketMakingOrderManager for BTC-USD with 5 levels, 0.100% price threshold
INFO - bot.strategy.inventory_manager - 📁 Inventory state loaded for BTC-USD: position=0, avg_price=None
INFO - bot.strategy.inventory_manager - 🎯 Initialized InventoryManager for BTC-USD:
  • Max position: 10.0% of equity
  • Rebalancing threshold: 0.7%
  • Emergency threshold: 15.0%
  • Inventory timeout: 4.0 hours
  • Current position: 0
INFO - bot.strategy.market_making_performance_monitor - Initialized MarketMakingPerformanceMonitor for BTC-USD with 10000 max history
INFO - bot.strategy.spread_calculator - Initialized DynamicSpreadCalculator - Base: 10 bps, Range: 5-100 bps
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.rsimfi - RSI+MFI indicator initialized
INFO - bot.indicators.cipher_a_signals - Cipher A Signals calculator initialized
INFO - bot.indicators.ema_ribbon - EMA Ribbon indicator initialized
INFO - bot.indicators.rsimfi - RSI+MFI indicator initialized
INFO - bot.indicators.schaff_trend_cycle - Schaff Trend Cycle indicator initialized
INFO - bot.indicators.divergence_detector - Divergence detector initialized
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.divergence_detector - Divergence detector initialized
INFO - bot.indicators.cipher_b_signals - Cipher B Signals calculator initialized
INFO - bot.indicators.ema_ribbon - EMA Ribbon indicator initialized
INFO - bot.indicators.wavetrend - WaveTrend indicator initialized
INFO - bot.indicators.rsimfi - RSI+MFI indicator initialized
INFO - bot.indicators.sommi_patterns - Sommi patterns detector initialized
INFO - bot.indicators.divergence_detector - Divergence detector initialized
INFO - bot.strategy.market_making_engine - Successfully initialized all market making components
INFO - bot.strategy.market_making_engine - Initialized MarketMakingEngine for BTC-USD with cycle interval 1.00s
INFO - bot.strategy.market_making_engine - Starting market making engine for BTC-USD
INFO - bot.order_manager - OrderManager started
INFO - bot.strategy.market_making_order_manager - MarketMakingOrderManager started
INFO - bot.performance_monitor - Started resource monitoring
INFO - bot.performance_monitor - Performance monitoring started
INFO - bot.strategy.market_making_performance_monitor - Market making performance monitoring started
INFO - bot.strategy.market_making_engine - Market making engine started successfully
INFO - bot.strategy.market_making_integration - Market making engine initialized successfully
INFO - bot.strategy.market_making_integration - Market making enabled for symbols ['SUI-PERP']
INFO - bot.strategy.market_making_integration - Market making integration initialized successfully
_______ TestMarketMakingPerformanceMonitor.test_check_performance_alerts _______
tests/unit/test_market_making_performance_monitor.py:372: in test_check_performance_alerts
    assert len(alerts) > 0
E   assert 0 > 0
E    +  where 0 = len([])
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.bluefin_fee_calculator - Initialized BluefinFeeCalculator - Maker: 0.0100%, Taker: 0.0350%
INFO - bot.strategy.market_making_performance_monitor - Initialized MarketMakingPerformanceMonitor for BTC-PERP with 1000 max history
ERROR - bot.strategy.market_making_performance_monitor - Error checking performance alerts: can't subtract offset-naive and offset-aware datetimes
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/strategy/market_making_performance_monitor.py", line 864, in check_performance_alerts
    if self._can_send_alert(MarketMakingAlert.LOW_FILL_RATE):
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/angel/Documents/Projects/cursorprod/bot/strategy/market_making_performance_monitor.py", line 1373, in _can_send_alert
    return datetime.now(UTC) - last_alert_time > cooldown_period
           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
TypeError: can't subtract offset-naive and offset-aware datetimes
______ TestMarketMakingPerformanceMonitor.test_completed_trade_detection _______
tests/unit/test_market_making_performance_monitor.py:538: in test_completed_trade_detection
    assert len(self.monitor.completed_trades) == 1
E   assert 0 == 1
E    +  where 0 = len(deque([]))
E    +    where deque([]) = <bot.strategy.market_making_performance_monitor.MarketMakingPerformanceMonitor object at 0x122abba80>.completed_trades
E    +      where <bot.strategy.market_making_performance_monitor.MarketMakingPerformanceMonitor object at 0x122abba80> = <tests.unit.test_market_making_performance_monitor.TestMarketMakingPerformanceMonitor testMethod=test_completed_trade_detection>.monitor
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.bluefin_fee_calculator - Initialized BluefinFeeCalculator - Maker: 0.0100%, Taker: 0.0350%
INFO - bot.strategy.market_making_performance_monitor - Initialized MarketMakingPerformanceMonitor for BTC-PERP with 1000 max history
ERROR - bot.strategy.market_making_performance_monitor - Error checking for completed trades: '>' not supported between instances of 'NoneType' and 'int'
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/strategy/market_making_performance_monitor.py", line 1106, in _check_for_completed_trades
    if target_spread > 0
       ^^^^^^^^^^^^^^^^^
TypeError: '>' not supported between instances of 'NoneType' and 'int'
_______ TestMarketMakingPerformanceMonitor.test_get_performance_metrics ________
tests/unit/test_market_making_performance_monitor.py:317: in test_get_performance_metrics
    assert metrics["total_trades"] == 5
           ^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'total_trades'
----------------------------- Captured stderr call -----------------------------
INFO - bot.exchange.bluefin_fee_calculator - Initialized BluefinFeeCalculator - Maker: 0.0100%, Taker: 0.0350%
INFO - bot.strategy.market_making_performance_monitor - Initialized MarketMakingPerformanceMonitor for BTC-PERP with 1000 max history
ERROR - bot.strategy.market_making_performance_monitor - Error calculating performance metrics: can't subtract offset-naive and offset-aware datetimes
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/strategy/market_making_performance_monitor.py", line 647, in get_performance_metrics
    if (current_time - self._cache_timestamp) < self._cache_ttl:
        ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
TypeError: can't subtract offset-naive and offset-aware datetimes
_____________________ TestOmniSearchClient.test_disconnect _____________________
tests/unit/test_omnisearch_client.py:468: in test_disconnect
    client._session.close.assert_called_once()
    ^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'NoneType' object has no attribute 'close'
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Disconnected from OmniSearch service
INFO - bot.mcp.omnisearch_client - Disconnected from OmniSearch service
___________ TestOmniSearchClient.test_search_financial_news_api_call ___________
tests/unit/test_omnisearch_client.py:530: in test_search_financial_news_api_call
    assert len(results) == 1
E   assert 0 == 1
E    +  where 0 = len([])
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Financial news search failed for 'bitcoin news'
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 379, in search_financial_news
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Financial news search failed for 'bitcoin news'
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 379, in search_financial_news
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback news results for: bitcoin news
INFO - bot.mcp.omnisearch_client - Using fallback news results for: bitcoin news
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - WARNING - No fallback news available for: bitcoin news
WARNING - bot.mcp.omnisearch_client - No fallback news available for: bitcoin news
__________ TestOmniSearchClient.test_search_crypto_sentiment_success ___________
tests/unit/test_omnisearch_client.py:586: in test_search_crypto_sentiment_success
    assert sentiment.overall_sentiment == "bullish"
E   AssertionError: assert 'neutral' == 'bullish'
E
E     - bullish
E     + neutral
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Crypto sentiment search failed for BTC
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 454, in search_crypto_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Crypto sentiment search failed for BTC
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 454, in search_crypto_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback sentiment for: BTC
INFO - bot.mcp.omnisearch_client - Using fallback sentiment for: BTC
__________ TestOmniSearchClient.test_search_nasdaq_sentiment_success ___________
tests/unit/test_omnisearch_client.py:619: in test_search_nasdaq_sentiment_success
    assert sentiment.overall_sentiment == "bearish"
E   AssertionError: assert 'neutral' == 'bearish'
E
E     - bearish
E     + neutral
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - NASDAQ sentiment search failed
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 517, in search_nasdaq_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - NASDAQ sentiment search failed
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 517, in search_nasdaq_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback sentiment for: NASDAQ
INFO - bot.mcp.omnisearch_client - Using fallback sentiment for: NASDAQ
_________ TestOmniSearchClient.test_search_market_correlation_success __________
tests/unit/test_omnisearch_client.py:644: in test_search_market_correlation_success
    assert correlation.correlation_coefficient == 0.45
E   AssertionError: assert 0.0 == 0.45
E    +  where 0.0 = MarketCorrelation(primary_symbol='BTC', secondary_symbol='QQQ', correlation_coefficient=0.0, timeframe='30d', strength...ta=None, r_squared=None, last_updated=datetime.datetime(2025, 6, 23, 13, 24, 16, 508738, tzinfo=datetime.timezone.utc)).correlation_coefficient
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Market correlation search failed for BTC-QQQ
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Market correlation search failed for BTC-QQQ
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback correlation for: BTC-QQQ
INFO - bot.mcp.omnisearch_client - Using fallback correlation for: BTC-QQQ
--------------------------- Captured stderr teardown ---------------------------
ERROR - asyncio - Task was destroyed but it is pending!
task: <Task pending name='Task-125' coro=<MarketMakingOrderManager._monitor_orders() running at [REDACTED]_making_order_manager.py:878> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR - asyncio - Task was destroyed but it is pending!
task: <Task pending name='Task-126' coro=<ResourceMonitor._monitor_resources() running at [REDACTED]_monitor.py:404> wait_for=<Future pending cb=[Task.task_wakeup()]>>
_____ TestOmniSearchClient.test_search_market_correlation_percentage_value _____
tests/unit/test_omnisearch_client.py:700: in test_search_market_correlation_percentage_value
    assert correlation.correlation_coefficient == 0.45
E   AssertionError: assert 0.0 == 0.45
E    +  where 0.0 = MarketCorrelation(primary_symbol='ETH', secondary_symbol='SPY', correlation_coefficient=0.0, timeframe='7d', strength=...ta=None, r_squared=None, last_updated=datetime.datetime(2025, 6, 23, 13, 24, 16, 522423, tzinfo=datetime.timezone.utc)).correlation_coefficient
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Market correlation search failed for ETH-SPY
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Market correlation search failed for ETH-SPY
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback correlation for: ETH-SPY
INFO - bot.mcp.omnisearch_client - Using fallback correlation for: ETH-SPY
__________ TestOmniSearchClientIntegration.test_full_search_workflow ___________
tests/unit/test_omnisearch_client.py:957: in test_full_search_workflow
    assert connected is True
E   assert False is True
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Failed to connect to OmniSearch service
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 314, in connect
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        f"{self.server_url}/health", headers=headers
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Failed to connect to OmniSearch service
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 314, in connect
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        f"{self.server_url}/health", headers=headers
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
_______ TestOmniSearchClientIntegration.test_sentiment_analysis_workflow _______
tests/unit/test_omnisearch_client.py:987: in test_sentiment_analysis_workflow
    assert sentiment.overall_sentiment == "bullish"
E   AssertionError: assert 'neutral' == 'bullish'
E
E     - bullish
E     + neutral
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Crypto sentiment search failed for BTC
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 454, in search_crypto_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Crypto sentiment search failed for BTC
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 454, in search_crypto_sentiment
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback sentiment for: BTC
INFO - bot.mcp.omnisearch_client - Using fallback sentiment for: BTC
______ TestOmniSearchClientIntegration.test_correlation_analysis_workflow ______
tests/unit/test_omnisearch_client.py:1014: in test_correlation_analysis_workflow
    assert correlation.correlation_coefficient == 0.73
E   AssertionError: assert 0.0 == 0.73
E    +  where 0.0 = MarketCorrelation(primary_symbol='BTC', secondary_symbol='QQQ', correlation_coefficient=0.0, timeframe='30d', strength...ta=None, r_squared=None, last_updated=datetime.datetime(2025, 6, 23, 13, 24, 16, 578096, tzinfo=datetime.timezone.utc)).correlation_coefficient
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - ERROR - Market correlation search failed for BTC-QQQ
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
ERROR - bot.mcp.omnisearch_client - Market correlation search failed for BTC-QQQ
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 592, in search_market_correlation
    results = await self._search_with_fallback(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "/Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py", line 793, in _search_with_fallback
    async with self._session.get(
               ~~~~~~~~~~~~~~~~~^
        url, headers=headers, params=params
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ) as response:
    ^
TypeError: 'coroutine' object does not support the asynchronous context manager protocol
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - Using fallback correlation for: BTC-QQQ
INFO - bot.mcp.omnisearch_client - Using fallback correlation for: BTC-QQQ
_________ TestOmniSearchClientIntegration.test_caching_across_requests _________
tests/unit/test_omnisearch_client.py:1033: in test_caching_across_requests
    assert mock_search.call_count == 1  # Not called again
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 2 == 1
E    +  where 2 = <AsyncMock name='_search_with_fallback' id='4883883952'>.call_count
----------------------------- Captured stderr call -----------------------------
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch Client: Initialized for http://localhost:8766
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch Client: Initialized for http://localhost:8766
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch: Found 0 financial news results for 'test query'
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch: Found 0 financial news results for 'test query'
2025-06-23 06:24:16 - bot.mcp.omnisearch_client - INFO - 🔍 OmniSearch: Found 0 financial news results for 'test query'
INFO - bot.mcp.omnisearch_client - 🔍 OmniSearch: Found 0 financial news results for 'test query'
________________ TestOrderManager.test_cancel_nonexistent_order ________________
tests/unit/test_order_manager.py:227: in test_cancel_nonexistent_order
    assert cancelled_order is None
E   assert False is None
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
WARNING - bot.order_manager - Cannot cancel order non-existent-id: not found in active orders
______________________ TestOrderManager.test_cancel_order ______________________
tests/unit/test_order_manager.py:221: in test_cancel_order
    assert cancelled_order.status == OrderStatus.CANCELLED
           ^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'bool' object has no attribute 'status'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.606568_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
INFO - bot.order_manager - Order order_1750685056.606568_BTC-USD_BUY completed with status CANCELLED
INFO - bot.order_manager - Order order_1750685056.606568_BTC-USD_BUY cancelled
__________________ TestOrderManager.test_create_market_order ___________________
tests/unit/test_order_manager.py:85: in test_create_market_order
    assert order.order_type == "MARKET"
           ^^^^^^^^^^^^^^^^
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:856: in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
E   AttributeError: 'Order' object has no attribute 'order_type'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.613272_ETH-USD_SELL: SELL 2.0 ETH-USD (MARKET)
______________________ TestOrderManager.test_create_order ______________________
tests/unit/test_order_manager.py:77: in test_create_order
    assert order.id in self.order_manager._orders
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute '_orders'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.627948_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
_______________ TestOrderManager.test_create_order_with_timeout ________________
tests/unit/test_order_manager.py:99: in test_create_order_with_timeout
    assert order.timeout_seconds == 300
           ^^^^^^^^^^^^^^^^^^^^^
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:856: in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
E   AttributeError: 'Order' object has no attribute 'timeout_seconds'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.633159_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
_____________________ TestOrderManager.test_get_all_orders _____________________
tests/unit/test_order_manager.py:304: in test_get_all_orders
    all_orders = self.order_manager.get_all_orders()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute 'get_all_orders'. Did you mean: 'cancel_all_orders'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.649325_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.649818_ETH-USD_SELL: SELL 2.0 ETH-USD (MARKET)
__________________ TestOrderManager.test_get_orders_by_symbol __________________
tests/unit/test_order_manager.py:140: in test_get_orders_by_symbol
    btc_orders = self.order_manager.get_orders_by_symbol("BTC-USD")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute 'get_orders_by_symbol'. Did you mean: 'get_orders_by_status'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.657788_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.658104_ETH-USD_SELL: SELL 2.0 ETH-USD (LIMIT)
___________________ TestOrderManager.test_get_pending_orders ___________________
tests/unit/test_order_manager.py:331: in test_get_pending_orders
    pending_orders = self.order_manager.get_pending_orders()
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute 'get_pending_orders'. Did you mean: 'get_active_orders'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.66246_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.662795_ETH-USD_SELL: SELL 2.0 ETH-USD (LIMIT)
INFO - bot.order_manager - Order order_1750685056.662795_ETH-USD_SELL completed with status FILLED
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
_____________________ TestOrderManager.test_order_cleanup ______________________
tests/unit/test_order_manager.py:433: in test_order_cleanup
    old_order.created_at = datetime.now(UTC) - timedelta(days=8)
    ^^^^^^^^^^^^^^^^^^^^
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:884: in __setattr__
    raise ValueError(f'"{self.__class__.__name__}" object has no field "{name}"')
E   ValueError: "Order" object has no field "created_at"
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.667716_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
_________________ TestOrderManager.test_order_history_tracking _________________
tests/unit/test_order_manager.py:273: in test_order_history_tracking
    self.order_manager.update_order_status(order.id, OrderStatus.SUBMITTED)
                                                     ^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: type object 'OrderStatus' has no attribute 'SUBMITTED'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.681798_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
______________ TestOrderManager.test_order_manager_initialization ______________
tests/unit/test_order_manager.py:56: in test_order_manager_initialization
    assert self.order_manager._orders == {}
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute '_orders'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
___________________ TestOrderManager.test_order_persistence ____________________
tests/unit/test_order_manager.py:373: in test_order_persistence
    self.order_manager.save_state()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OrderManager' object has no attribute 'save_state'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.690325_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
____________________ TestOrderManager.test_order_statistics ____________________
tests/unit/test_order_manager.py:419: in test_order_statistics
    assert stats["fill_rate"] == 1 / 3  # 1 filled out of 3
           ^^^^^^^^^^^^^^^^^^
E   KeyError: 'fill_rate'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.694754_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.69511_ETH-USD_SELL: SELL 2.0 ETH-USD (LIMIT)
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.695383_BTC-USD_SELL: SELL 0.05 BTC-USD (MARKET)
INFO - bot.order_manager - Order order_1750685056.694754_BTC-USD_BUY completed with status FILLED
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Order order_1750685056.69511_ETH-USD_SELL completed with status CANCELLED
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
_________________ TestOrderManager.test_partial_fill_handling __________________
tests/unit/test_order_manager.py:242: in test_partial_fill_handling
    OrderStatus.PARTIALLY_FILLED,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: type object 'OrderStatus' has no attribute 'PARTIALLY_FILLED'
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.703364_BTC-USD_BUY: BUY 1.0 BTC-USD (LIMIT)
__________________ TestOrderManager.test_update_order_status ___________________
tests/unit/test_order_manager.py:190: in test_update_order_status
    updated_order = self.order_manager.update_order_status(
E   TypeError: OrderManager.update_order_status() got an unexpected keyword argument 'fill_price'. Did you mean '_fill_price'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
ERROR - bot.order_manager - Failed to save order state
Traceback (most recent call last):
  File "/Users/angel/Documents/Projects/cursorprod/bot/order_manager.py", line 608, in _save_state
    "status": order.status.value,
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'value'
INFO - bot.order_manager - Created order order_1750685056.708609_BTC-USD_BUY: BUY 0.1 BTC-USD (LIMIT)
___________ TestPaperTradingBalance.test_margin_calculation_accuracy ___________
tests/unit/test_paper_trading_balance.py:158: in test_margin_calculation_accuracy
    assert abs(actual_margin_ratio - expected_margin_ratio) < 0.02
E   assert 0.16050100200400802 < 0.02
E    +  where 0.16050100200400802 = abs((0.20050100200400803 - 0.04))
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
----------------------------- Captured stderr call -----------------------------
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: LONG | Symbol: BTC-USD | Current Price: $50000 | Size: 20.0% | Reason: Margin test
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: LONG
  • Current Real Price: $50000
  • Position Size: 0.20000000 BTC
  • Position Value: $10000.00000000
  • Leverage: 5x
  • Required Margin: $2000.00000000
  • Available Balance: $10000.00
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $50000
  • Execution Price: $50025.0000 (slippage: 0.050%)
  • Slippage Cost: $5.00
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $10000.00
INFO - bot.paper_trading - 📈 Paper Trading: Opened LONG position | 0.20000000 BTC-USD @ $50025.00 | Trade ID: paper_000000
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$9990.00, trades=1
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 0 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmpwqlanutu/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.7ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: LONG
  📊 Size: 0.20000000 BTC-USD
  💵 Price: $50025.00
  💸 Value: $10005.00
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $49524.75 ($-100.05)
  🟢 Take Profit: $51025.50 ($+200.10)
  🏦 New Balance: $9990.00
  📈 New Equity: $10000.00
  🔒 Margin Used: $2001.00
  💳 Available: $7999.00
  📋 Order ID: paper_000000
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: LONG 0.20000000 BTC-USD @ $50025.00 | Value: $10000.00 | Balance: $9990.00 → $10000.00
INFO - bot.data.market - Initialized MarketDataProvider for BTC-USD at 1m
INFO - bot.data.bluefin_market - Trade aggregation enabled for standard interval '1m'. This provides enhanced granularity for candle building.
INFO - bot.data.bluefin_market - Trade aggregation enabled for standard interval '1m'. This provides enhanced granularity for candle building.
INFO - bot.data.bluefin_market - Initialized BluefinMarketDataProvider
INFO - bot.data.bluefin_market - Using trade aggregation mode for enhanced granularity
INFO - bot.data.bluefin_market - Using real Bluefin market data via WebSocket
_____________ TestPaperTradingBalance.test_fee_deduction_accuracy ______________
tests/unit/test_paper_trading_balance.py:188: in test_fee_deduction_accuracy
    assert account.current_balance == expected_balance
E   AssertionError: assert Decimal('9987.00') == Decimal('9989.50')
E    +  where Decimal('9987.00') = <bot.paper_trading.PaperTradingAccount object at 0x122b7e250>.current_balance
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
----------------------------- Captured stderr call -----------------------------
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: LONG | Symbol: BTC-USD | Current Price: $50000 | Size: 10.0% | Reason: Fee test
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: LONG
  • Current Real Price: $50000
  • Position Size: 0.10000000 BTC
  • Position Value: $5000.00000000
  • Leverage: 5x
  • Required Margin: $1000.00000000
  • Available Balance: $10000.00
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $50000
  • Execution Price: $50025.0000 (slippage: 0.050%)
  • Slippage Cost: $2.50
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $10.5000
  • Trade Value: $5000.00
INFO - bot.paper_trading - 📈 Paper Trading: Opened LONG position | 0.10000000 BTC-USD @ $50025.00 | Trade ID: paper_000000
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$9987.00, trades=1
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 0 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp1o8br1p0/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.3ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: LONG
  📊 Size: 0.10000000 BTC-USD
  💵 Price: $50025.00
  💸 Value: $5002.50
  🏷️ Fees: $10.5000 @ 0.1000%
  🔴 Stop Loss: $49524.75 ($-50.02)
  🟢 Take Profit: $51025.50 ($+100.05)
  🏦 New Balance: $9987.00
  📈 New Equity: $10000.00
  🔒 Margin Used: $1000.50
  💳 Available: $8999.50
  📋 Order ID: paper_000000
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: LONG 0.10000000 BTC-USD @ $50025.00 | Value: $5000.00 | Balance: $9987.00 → $10000.00
_____ TestPaperTradingBalance.test_position_closing_balance_reconciliation _____
tests/unit/test_paper_trading_balance.py:248: in test_position_closing_balance_reconciliation
    assert account.equity > initial_equity
E   AssertionError: assert Decimal('10000.00') > Decimal('10000.00')
E    +  where Decimal('10000.00') = <bot.paper_trading.PaperTradingAccount object at 0x122b7f790>.equity
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
----------------------------- Captured stderr call -----------------------------
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: LONG | Symbol: BTC-USD | Current Price: $50000 | Size: 10.0% | Reason: Open position
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: LONG
  • Current Real Price: $50000
  • Position Size: 0.10000000 BTC
  • Position Value: $5000.00000000
  • Leverage: 5x
  • Required Margin: $1000.00000000
  • Available Balance: $10000.00
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $50000
  • Execution Price: $50025.0000 (slippage: 0.050%)
  • Slippage Cost: $2.50
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $5000.00
INFO - bot.paper_trading - 📈 Paper Trading: Opened LONG position | 0.10000000 BTC-USD @ $50025.00 | Trade ID: paper_000000
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$9992.50, trades=1
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 0 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp0ld11tta/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.3ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: LONG
  📊 Size: 0.10000000 BTC-USD
  💵 Price: $50025.00
  💸 Value: $5002.50
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $49524.75 ($-50.02)
  🟢 Take Profit: $51025.50 ($+100.05)
  🏦 New Balance: $9992.50
  📈 New Equity: $10000.00
  🔒 Margin Used: $1000.50
  💳 Available: $8999.50
  📋 Order ID: paper_000000
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: LONG 0.10000000 BTC-USD @ $50025.00 | Value: $5000.00 | Balance: $9992.50 → $10000.00
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: CLOSE | Symbol: BTC-USD | Current Price: $51000 | Size: 0.0% | Reason: Close position
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: CLOSE
  • Current Real Price: $51000
  • Position Size: 0.10000000 BTC
  • Position Value: $5100.00000000
  • Leverage: 5x
  • Required Margin: $1020.00000000
  • Available Balance: $8999.50
  • Stop Loss: 0.0%
  • Take Profit: 0.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $51000
  • Execution Price: $50974.5000 (slippage: 0.050%)
  • Slippage Cost: $2.55
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $5100.00
INFO - bot.paper_trading - 📊 Paper Trading: Closed LONG position | 0.10000000 BTC-USD @ $50974.50 | P&L: $84.95 (+0.17%) | ✅ WIN
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$10069.90, trades=2
INFO - bot.paper_trading - ✅ Trades saved: 0 open, 1 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp0ld11tta/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.4ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: CLOSE
  📊 Size: 0.10000000 BTC-USD
  💵 Price: $50974.50
  💸 Value: $5097.45
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $50974.50 ($+0.00)
  🟢 Take Profit: $50974.50 ($+0.00)
  🏦 New Balance: $10069.90
  📈 New Equity: $10000.00
  🔒 Margin Used: $0.00
  💳 Available: $10000.00
  📋 Order ID: close_paper_000000
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: CLOSE 0.10000000 BTC-USD @ $50974.50 | Value: $5100.00 | Balance: $10069.90 → $10000.00
_______ TestPaperTradingBalance.test_position_reversal_balance_handling ________
tests/unit/test_paper_trading_balance.py:370: in test_position_reversal_balance_handling
    assert account.current_balance < initial_balance
E   AssertionError: assert Decimal('10062.40') < Decimal('9992.50')
E    +  where Decimal('10062.40') = <bot.paper_trading.PaperTradingAccount object at 0x122b7d7b0>.current_balance
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
----------------------------- Captured stderr call -----------------------------
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: LONG | Symbol: BTC-USD | Current Price: $50000 | Size: 10.0% | Reason: Long position
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: LONG
  • Current Real Price: $50000
  • Position Size: 0.10000000 BTC
  • Position Value: $5000.00000000
  • Leverage: 5x
  • Required Margin: $1000.00000000
  • Available Balance: $10000.00
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $50000
  • Execution Price: $50025.0000 (slippage: 0.050%)
  • Slippage Cost: $2.50
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $5000.00
INFO - bot.paper_trading - 📈 Paper Trading: Opened LONG position | 0.10000000 BTC-USD @ $50025.00 | Trade ID: paper_000000
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$9992.50, trades=1
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 0 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp6xt8zqth/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.5ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: LONG
  📊 Size: 0.10000000 BTC-USD
  💵 Price: $50025.00
  💸 Value: $5002.50
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $49524.75 ($-50.02)
  🟢 Take Profit: $51025.50 ($+100.05)
  🏦 New Balance: $9992.50
  📈 New Equity: $10000.00
  🔒 Margin Used: $1000.50
  💳 Available: $8999.50
  📋 Order ID: paper_000000
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: LONG 0.10000000 BTC-USD @ $50025.00 | Value: $5000.00 | Balance: $9992.50 → $10000.00
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: SHORT | Symbol: BTC-USD | Current Price: $51000 | Size: 10.0% | Reason: Reverse to short
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: BTC-USD
  • Action: SHORT
  • Current Real Price: $51000
  • Position Size: 0.09803922 BTC
  • Position Value: $5000.00022000
  • Leverage: 5x
  • Required Margin: $1000.00004400
  • Available Balance: $8999.50
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $51000
  • Execution Price: $50974.5000 (slippage: 0.050%)
  • Slippage Cost: $2.50
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $5000.00
INFO - bot.paper_trading - Closing existing LONG position and opening new SHORT position for BTC-USD
INFO - bot.paper_trading - 📊 Paper Trading: Closed LONG position | 0.10000000 BTC-USD @ $50974.50 | P&L: $84.95 (+0.17%) | ✅ WIN
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$10069.90, trades=2
INFO - bot.paper_trading - ✅ Trades saved: 0 open, 1 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp6xt8zqth/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.4ms
INFO - bot.paper_trading - 📈 Paper Trading: Opened SHORT position | 0.09803922 BTC-USD @ $50974.50 | Trade ID: paper_000001
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$10062.40, trades=2
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 1 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 2 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmp6xt8zqth/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.4ms
INFO - bot.paper_trading - ✅ PAPER TRADING EXECUTION COMPLETE:
  🎯 Action: SHORT
  📊 Size: 0.09803922 BTC-USD
  💵 Price: $50974.50
  💸 Value: $4997.50
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $51484.25 ($-49.98)
  🟢 Take Profit: $49955.01 ($+99.95)
  🏦 New Balance: $10062.40
  📈 New Equity: $10000.00
  🔒 Margin Used: $999.50
  💳 Available: $9000.50
  📋 Order ID: paper_000001
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: SHORT 0.09803922 BTC-USD @ $50974.50 | Value: $5000.00 | Balance: $10062.40 → $10000.00
INFO - bot.data.market - Initialized MarketDataProvider for BTC-USD at 1m
INFO - bot.data.bluefin_market - Trade aggregation enabled for standard interval '1m'. This provides enhanced granularity for candle building.
INFO - bot.data.bluefin_market - Trade aggregation enabled for standard interval '1m'. This provides enhanced granularity for candle building.
INFO - bot.data.bluefin_market - Initialized BluefinMarketDataProvider
INFO - bot.data.bluefin_market - Using trade aggregation mode for enhanced granularity
INFO - bot.data.bluefin_market - Using real Bluefin market data via WebSocket
______ TestPaperTradingBalance.test_futures_contract_balance_calculations ______
tests/unit/test_paper_trading_balance.py:423: in test_futures_contract_balance_calculations
    assert quantity_decimal == 0
E   AssertionError: assert Decimal('0.03333333') == 0
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
----------------------------- Captured stderr call -----------------------------
INFO - bot.paper_trading - 🎯 PAPER TRADING DECISION: LONG | Symbol: ETH-USD | Current Price: $3000 | Size: 20.0% | Reason: Futures test
INFO - bot.paper_trading - 📊 TRADE SIMULATION DETAILS:
  • Symbol: ETH-USD
  • Action: LONG
  • Current Real Price: $3000
  • Position Size: 3.33333333 ETH
  • Position Value: $9999.99999000
  • Leverage: 5x
  • Required Margin: $1999.99999800
  • Available Balance: $10000.00
  • Stop Loss: 1.0%
  • Take Profit: 2.0%
INFO - bot.paper_trading - 📈 EXECUTION SIMULATION:
  • Market Price: $3000
  • Execution Price: $3001.5000 (slippage: 0.050%)
  • Slippage Cost: $5.00
INFO - bot.paper_trading - 💰 FEE CALCULATION:
  • Fee Rate: 0.1000%
  • Entry Fee: $5.0000
  • Trade Value: $10000.00
INFO - bot.paper_trading - 📈 Paper Trading FUTURES: Opened LONG position | 33 contracts (3.33333333 ETH) @ $3001.50 | Trade ID: paper_000000
INFO - bot.paper_trading - 📝 Starting paper trading state save...
INFO - bot.paper_trading - ✅ Account state saved: balance=$9990.00, trades=1
INFO - bot.paper_trading - ✅ Trades saved: 1 open, 0 closed
INFO - bot.paper_trading - ✅ Performance data saved: 0 daily metrics
INFO - bot.paper_trading - 📊 Session trades saved: 1 trades to /var/folders/_d/vdy3brj17xbbg17n450npp780000gn/T/tmpm7btv66f/session_trades.json
INFO - bot.paper_trading - 💾 Paper trading state saved successfully in 1.5ms
INFO - bot.paper_trading - ✅ PAPER TRADING FUTURES EXECUTION COMPLETE:
  🎯 Action: LONG
  📊 Contracts: 33 contracts (3.33333333 ETH)
  💵 Price: $3001.5000
  💸 Value: $10005.00
  🏷️ Fees: $5.0000 @ 0.1000%
  🔴 Stop Loss: $2971.49 ($-100.05)
  🟢 Take Profit: $3061.53 ($+200.10)
  🏦 New Balance: $9990.00
INFO - bot.paper_trading - 🎬 TRADE SUMMARY: LONG 3.33333333 ETH-USD @ $3001.50 | Value: $10000.00 | Balance: $9990.00 → $10000.00
__________ TestPaperTradingBalance.test_performance_metrics_accuracy ___________
tests/unit/test_paper_trading_balance.py:442: in test_performance_metrics_accuracy
    (TradeAction("LONG", 10, 2.0, 1.0, "Trade 1"), "BTC-USD", Decimal(50000)),
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
________ TestPaperTradingBalance.test_trade_lifecycle_balance_integrity ________
tests/unit/test_paper_trading_balance.py:470: in test_trade_lifecycle_balance_integrity
    open_action = TradeAction("LONG", 15, 3.0, 1.5, "Lifecycle test")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
___________ TestPaperTradingBalance.test_edge_case_balance_scenarios ___________
tests/unit/test_paper_trading_balance.py:494: in test_edge_case_balance_scenarios
    small_action = TradeAction("LONG", 0.1, 1.0, 0.5, "Tiny position")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given
---------------------------- Captured stderr setup -----------------------------
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
_____ TestLLMPerformanceOptimization.test_cache_key_generation_similarity ______
tests/unit/test_performance_optimization.py:90: in test_cache_key_generation_similarity
    assert key1 == key2, "Similar market states should generate same cache key"
E   AssertionError: Similar market states should generate same cache key
E   assert '5e19efeacedd...2c78a6a65f6dc' == '18f26dd9c6c7...3f58ef3e41287'
E
E     - 18f26dd9c6c7b60ca79e51963713c37788d53cb421b39efc5343f58ef3e41287
E     + 5e19efeacedd465025045318f41cbf94d9a0bc13bac309d4e292c78a6a65f6dc
___ TestLLMPerformanceOptimization.test_end_to_end_performance_optimization ____
tests/unit/test_performance_optimization.py:287: in test_end_to_end_performance_optimization
    assert (
E   AssertionError: Expected >5x speedup from cache, got 4.3x
E   assert 4.262548262548263 > 5
----------------------------- Captured stderr call -----------------------------
INFO - bot.strategy.llm_cache - 🚀 LLM Cache initialized: TTL=90s, Max=1000 entries
INFO - bot.strategy.optimized_prompt - 🚀 Optimized prompt template initialized (48% size reduction)
INFO - bot.strategy.performance_monitor - 🚀 LLM Performance Monitor initialized: Target=2000.0ms, Baseline=5000.0ms
INFO - bot.strategy.llm_agent - Loaded prompt template from file
INFO - bot.strategy.llm_agent - Initialized LLM agent with openai:gpt-4
INFO - bot.strategy.llm_agent - OmniSearch integration disabled - using standard analysis only
INFO - bot.strategy.llm_agent - ScalpingSignals system disabled - using basic indicator analysis only
INFO - bot.strategy.performance_monitor - ⚡ FAST: 0.2ms (target: 2000.0ms) FRESH
INFO - bot.strategy.performance_monitor - 🎯 TARGET ACHIEVED: 0.2ms (target: 2000.0ms) Action: LONG
INFO - bot.strategy.llm_agent - ⚡ Fast LLM response: 0.00s (target: <2.0s)
INFO - bot.strategy.llm_cache - 🔄 LLM Cache MISS: LONG (compute_time: 0.00s)
INFO - bot.strategy.performance_monitor - ⚡ FAST: 0.6ms (target: 2000.0ms) FRESH
INFO - bot.strategy.performance_monitor - 🎯 TARGET ACHIEVED: 0.6ms (target: 2000.0ms) Action: LONG
INFO - bot.strategy.llm_agent - Generated trade action: LONG - Momentum breakout
2025-06-23 06:24:16,834 - llm_completions - INFO - TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.834791+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
INFO - llm_completions - TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.834791+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
INFO - bot.strategy.llm_cache - 🎯 LLM Cache HIT: LONG (age: 0.0s, hits: 1)
INFO - bot.strategy.llm_agent - Generated trade action: LONG - Momentum breakout
2025-06-23 06:24:16,835 - llm_completions - INFO - TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.835249+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
INFO - llm_completions - TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.835249+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
------------------------------ Captured log call -------------------------------
INFO     llm_completions:llm_logging.py:403 TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.834791+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
INFO     llm_completions:llm_logging.py:403 TRADING_DECISION: {"event_type": "trading_decision", "timestamp": "2025-06-23T13:24:16.835249+00:00", "session_id": "5b995198", "request_id": "fallback", "action": "LONG", "size_pct": 15.0, "rationale": "Momentum breakout", "symbol": "BTC-USD", "current_price": 50000.0, "validation_result": null, "risk_assessment": null, "indicators": {"cipher_a_dot": 10.0, "cipher_b_wave": 15.0, "rsi": 55.0}}
____________ TestPositionManager.test_calculate_unrealized_pnl_long ____________
tests/unit/test_position_manager.py:196: in test_calculate_unrealized_pnl_long
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________ TestPositionManager.test_calculate_unrealized_pnl_nonexistent _________
tests/unit/test_position_manager.py:230: in test_calculate_unrealized_pnl_nonexistent
    pnl = self.position_manager.calculate_unrealized_pnl(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'calculate_unrealized_pnl'. Did you mean: 'update_unrealized_pnl'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
___________ TestPositionManager.test_calculate_unrealized_pnl_short ____________
tests/unit/test_position_manager.py:213: in test_calculate_unrealized_pnl_short
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
_____________ TestPositionManager.test_close_nonexistent_position ______________
tests/unit/test_position_manager.py:189: in test_close_nonexistent_position
    closed_position = self.position_manager.close_position(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'close_position'. Did you mean: 'reset_positions'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
___________________ TestPositionManager.test_close_position ____________________
tests/unit/test_position_manager.py:167: in test_close_position
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
___________________ TestPositionManager.test_create_position ___________________
tests/unit/test_position_manager.py:91: in test_create_position
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
__________________ TestPositionManager.test_get_all_positions __________________
tests/unit/test_position_manager.py:267: in test_get_all_positions
    btc_position = self.position_manager.create_position(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
_______________ TestPositionManager.test_get_net_position_value ________________
tests/unit/test_position_manager.py:344: in test_get_net_position_value
    self.position_manager.create_position(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
______________ TestPositionManager.test_get_nonexistent_position _______________
tests/unit/test_position_manager.py:121: in test_get_nonexistent_position
    assert position is None
E   AssertionError: assert Position(symbol='ETH-USD', side='FLAT', size=Decimal('0'), entry_price=None, unrealized_pnl=Decimal('0'), realized_pnl...=datetime.timezone.utc), is_futures=False, leverage=None, margin_used=None, liquidation_price=None, margin_health=None) is None
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
____________________ TestPositionManager.test_get_position _____________________
tests/unit/test_position_manager.py:108: in test_get_position
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
_________________ TestPositionManager.test_get_position_count __________________
tests/unit/test_position_manager.py:369: in test_get_position_count
    assert self.position_manager.get_position_count() == 0
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'get_position_count'
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________________ TestPositionManager.test_get_positions_by_side ________________
tests/unit/test_position_manager.py:289: in test_get_positions_by_side
    btc_long = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
_________________ TestPositionManager.test_get_total_exposure __________________
tests/unit/test_position_manager.py:322: in test_get_total_exposure
    self.position_manager.create_position(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
___________ TestPositionManager.test_opposite_side_position_netting ____________
tests/unit/test_position_manager.py:504: in test_opposite_side_position_netting
    long_position = self.position_manager.create_position(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
______________ TestPositionManager.test_position_history_tracking ______________
tests/unit/test_position_manager.py:391: in test_position_history_tracking
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________________ TestPositionManager.test_position_persistence _________________
tests/unit/test_position_manager.py:463: in test_position_persistence
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________________ TestPositionManager.test_position_risk_metrics ________________
tests/unit/test_position_manager.py:430: in test_position_risk_metrics
    self.position_manager.create_position(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
_________________ TestPositionManager.test_position_validation _________________
tests/unit/test_position_manager.py:411: in test_position_validation
    self.position_manager.create_position(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________________ TestPositionManager.test_update_position_size _________________
tests/unit/test_position_manager.py:125: in test_update_position_size
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
___________ TestPositionManager.test_update_position_size_reduction ____________
tests/unit/test_position_manager.py:147: in test_update_position_size_reduction
    position = self.position_manager.create_position(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
________________ TestPositionManager.test_update_unrealized_pnl ________________
tests/unit/test_position_manager.py:238: in test_update_unrealized_pnl
    btc_position = self.position_manager.create_position(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'PositionManager' object has no attribute 'create_position'. Did you mean: 'get_position'?
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
__________ TestPositionOrderIntegration.test_position_close_scenario ___________
tests/unit/test_position_order_integration.py:229: in test_position_close_scenario
    buy_order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
__________ TestPositionOrderIntegration.test_position_pnl_calculation __________
tests/unit/test_position_order_integration.py:102: in test_position_pnl_calculation
    order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
_________ TestPositionOrderIntegration.test_position_update_from_order _________
tests/unit/test_position_order_integration.py:77: in test_position_update_from_order
    order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
_______ TestPositionOrderIntegration.test_risk_evaluation_with_positions _______
tests/unit/test_position_order_integration.py:190: in test_risk_evaluation_with_positions
    order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
__________ TestPositionOrderIntegration.test_risk_manager_integration __________
tests/unit/test_position_order_integration.py:165: in test_risk_manager_integration
    order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
_____________ TestPositionOrderIntegration.test_state_persistence ______________
tests/unit/test_position_order_integration.py:278: in test_state_persistence
    order = Order(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for Order
E   timestamp
E     Input should be a valid datetime [type=datetime_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.9/v/datetime_type
----------------------------- Captured stderr call -----------------------------
INFO - bot.trading.fifo_position_manager - Loaded 2 positions from state file
INFO - bot.position_manager - Using FIFO position tracking
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.paper_trading - ✅ Paper trading monitoring enabled
INFO - bot.paper_trading - Loaded paper trading account: $10000.00 balance
INFO - bot.paper_trading - Loaded 0 open and 0 closed trades
INFO - bot.paper_trading - Loaded performance data for 3 days
INFO - bot.paper_trading - Initialized paper trading account with $10000.00 and balance validation
INFO - bot.position_manager - Loaded 0 active positions
INFO - bot.position_manager - Loaded 0 historical positions
INFO - bot.position_manager - Initialized Enhanced PositionManager with 0 active positions
  • FIFO tracking: enabled
  • Paper trading: enabled
  • Enhanced validation: enabled
  • Max position value: $50,000.00
INFO - bot.position_manager - Paper trading account: $10000.00 equity, 0 open positions
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
INFO - bot.validation.balance_validator - BalanceValidator initialized with thresholds:
  • Balance range: $0.00 - $10000000.00
  • Max change: 25.0% or $50000.00
  • Precision: 2 decimal places
  • Anomaly threshold: 10.0%
  • Max margin ratio: 95.0%
INFO - bot.risk.circuit_breaker - Circuit breaker initialized: threshold=5, timeout=300s
INFO - bot.risk.emergency_stop - Emergency stop manager initialized
INFO - bot.risk.risk_manager - Initialized Advanced RiskManager:
  • Max size: 20.0%
  • Leverage: 5x
  • Max daily loss: 5.0%
  • Circuit breaker: 5 failures
  • API protection: 3 retries
  • Emergency stop: enabled
  • Balance validation: enabled
__________ TestAsyncOrderManagerIntegration.test_async_order_timeout ___________
tests/unit/test_position_order_integration.py:353: in test_async_order_timeout
    self.async_test(test_timeout())
tests/unit/test_position_order_integration.py:306: in async_test
    return asyncio.get_event_loop().run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/events.py:716: in get_event_loop
    raise RuntimeError('There is no current event loop in thread %r.'
E   RuntimeError: There is no current event loop in thread 'MainThread'.
----------------------------- Captured stderr call -----------------------------
INFO - bot.order_manager - Initialized OrderManager with 0 active orders
________ TestTradingCircuitBreaker.test_circuit_breaker_initialization _________
tests/unit/test_risk_manager.py:83: in setUp
    self.circuit_breaker = TradingCircuitBreaker(
E   TypeError: TradingCircuitBreaker.__init__() got an unexpected keyword argument 'time_window_minutes'
_____ TestTradingCircuitBreaker.test_circuit_breaker_old_failures_ignored ______
tests/unit/test_risk_manager.py:83: in setUp
    self.circuit_breaker = TradingCircuitBreaker(
E   TypeError: TradingCircuitBreaker.__init__() got an unexpected keyword argument 'time_window_minutes'
_____________ TestTradingCircuitBreaker.test_circuit_breaker_reset _____________
tests/unit/test_risk_manager.py:83: in setUp
    self.circuit_breaker = TradingCircuitBreaker(
E   TypeError: TradingCircuitBreaker.__init__() got an unexpected keyword argument 'time_window_minutes'
________ TestTradingCircuitBreaker.test_circuit_breaker_single_failure _________
tests/unit/test_risk_manager.py:83: in setUp
    self.circuit_breaker = TradingCircuitBreaker(
E   TypeError: TradingCircuitBreaker.__init__() got an unexpected keyword argument 'time_window_minutes'
______ TestTradingCircuitBreaker.test_circuit_breaker_threshold_exceeded _______
tests/unit/test_risk_manager.py:83: in setUp
    self.circuit_breaker = TradingCircuitBreaker(
E   TypeError: TradingCircuitBreaker.__init__() got an unexpected keyword argument 'time_window_minutes'
_______________ TestRiskManager.test_balance_validator_component _______________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
________________ TestRiskManager.test_circuit_breaker_component ________________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
___________________ TestRiskManager.test_daily_pnl_tracking ____________________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
________________ TestRiskManager.test_emergency_stop_component _________________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
___________________ TestRiskManager.test_evaluate_risk_basic ___________________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
_____________________ TestRiskManager.test_risk_attributes _____________________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
_______________ TestRiskManager.test_risk_manager_initialization _______________
tests/unit/test_risk_manager.py:167: in setUp
    patch("bot.risk.PositionManager", return_value=self.mock_position_manager),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: <module 'bot.risk' from '/Users/angel/Documents/Projects/cursorprod/bot/risk/__init__.py'> does not have the attribute 'PositionManager'
____________ TestWebSearchFormatter.test_format_news_results_basic _____________
tests/unit/test_web_search_formatter.py:241: in test_format_news_results_basic
    assert "Articles Analyzed: 2" in result
E   AssertionError: assert 'Articles Analyzed: 2' in '📰 **NEWS ANALYSIS**\n\n🎯 **Overall News Sentiment**: 📈 BULLISH\n📊 **Articles Analyzed**: 2\n\n🔍 **Key Market Insights...system shows bullish growth with institutional adoption\n   💡 **Key Insight**: Institutional/whale activity detected\n'
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
INFO - bot.utils.web_search_formatter - Formatting 2 news items
________ TestWebSearchFormatter.test_format_correlation_analysis_basic _________
tests/unit/test_web_search_formatter.py:333: in test_format_correlation_analysis_basic
    correlation = CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f57cb0>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
_____ TestWebSearchFormatter.test_format_correlation_analysis_with_rolling _____
tests/unit/test_web_search_formatter.py:358: in test_format_correlation_analysis_with_rolling
    correlation = CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f574d0>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
_______ TestWebSearchFormatter.test_format_market_context_comprehensive ________
tests/unit/test_web_search_formatter.py:401: in test_format_market_context_comprehensive
    "correlation_analysis": CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f570e0>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
________ TestWebSearchFormatter.test_generate_correlation_implications _________
tests/unit/test_web_search_formatter.py:916: in test_generate_correlation_implications
    correlation = CorrelationAnalysis(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for CorrelationAnalysis
E   correlation_strength
E     Input should be 'VERY_STRONG', 'STRONG', 'MODERATE', 'WEAK' or 'VERY_WEAK' [type=enum, input_value=<tests.unit.test_web_sear...h object at 0x122f57230>, input_type=MockStrength]
E       For further information visit https://errors.pydantic.dev/2.9/v/enum
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
______ TestWebSearchFormatterIntegration.test_token_optimization_workflow ______
tests/unit/test_web_search_formatter.py:1306: in test_token_optimization_workflow
    assert (
E   assert 269 <= (100 * 1.1)
E    +  where 100 = <bot.utils.web_search_formatter.WebSearchFormatter object at 0x122faf230>.max_total_tokens
----------------------------- Captured stderr call -----------------------------
INFO - bot.utils.web_search_formatter - WebSearchFormatter initialized with 500 tokens per section
INFO - bot.utils.web_search_formatter - Formatting 10 news items
=============================== warnings summary ===============================
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/v1/typing.py:68: 28 warnings
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/v1/typing.py:68: DeprecationWarning: Failing to pass a value to the 'type_params' parameter of 'typing.ForwardRef._evaluate' is deprecated, as it leads to incorrect behaviour when calling typing.ForwardRef._evaluate on a stringified annotation that references a PEP 695 type parameter. It will be disallowed in Python 3.15.
    return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())

../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_config.py:291
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_config.py:291
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:312
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:312
../../../Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:312
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:312: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.9/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(

tests/unit/test_financial_sentiment.py: 44 warnings
tests/unit/test_web_search_formatter.py: 6 warnings
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:212: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)

tests/unit/test_financial_sentiment.py::TestFinancialSentimentServiceIntegration::test_full_analysis_workflow_bullish
tests/unit/test_financial_sentiment.py::TestFinancialSentimentServiceIntegration::test_full_analysis_workflow_bullish
tests/unit/test_financial_sentiment.py::TestFinancialSentimentServiceIntegration::test_full_analysis_workflow_bearish
tests/unit/test_financial_sentiment.py::TestFinancialSentimentServiceIntegration::test_full_analysis_workflow_bearish
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:1114: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn('The `dict` method is deprecated; use `model_dump` instead.', category=PydanticDeprecatedSince20)

tests/unit/test_indicators.py::TestCipherB::test_cipher_b_with_sample_data
tests/unit/test_indicators.py::TestVuManChuIndicators::test_calculate_all_indicators
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/sommi_patterns.py:179: FutureWarning: 'T' is deprecated and will be removed in a future version, please use 'min' instead.
    price_data.resample(resample_rule)

tests/unit/test_indicators.py::TestCipherB::test_cipher_b_with_sample_data
tests/unit/test_indicators.py::TestVuManChuIndicators::test_calculate_all_indicators
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/sommi_patterns.py:790: FutureWarning: 'T' is deprecated and will be removed in a future version, please use 'min' instead.
    price_data.resample(resample_rule)

tests/unit/test_indicators.py::TestCipherB::test_cipher_b_with_sample_data
tests/unit/test_indicators.py::TestVuManChuIndicators::test_calculate_all_indicators
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/cipher_b_signals.py:463: RuntimeWarning: '<' not supported between instances of 'Timestamp' and 'int', sort order is undefined for incomparable objects.
    wt_low_prev_condition & wt2_condition & wt_diff_condition & rsi_condition

tests/unit/test_indicators.py::TestCipherB::test_cipher_b_with_sample_data
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/vumanchu.py:1787: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '[2368440.41292023 4555143.1890602  4671210.58469243 2588842.84268502
   5149537.29555144 3359122.62540564  563803.15827252 2342490.61667236
   1061632.89323233 1105537.14474263 3787089.82319368 1923468.20273417
   1571584.56789743  769449.96006151 2781531.71655004 2884259.93489177
   1568612.4911736  2910923.79919049 2374867.46137234 1697633.78349861
   3000625.38412999 4971444.53908899 2803069.97058153 3010071.00297699
    822286.08809315 4255095.96852545 2674350.27835256 1696131.55073651
   1654837.01471541  544088.01415407 3513751.16167054 4752402.69857908
   4173075.25427799 1096089.79685258  824660.44732976 3343818.4125922
   4683353.62567733 2701863.79389212 1019851.93107428 2910070.71202437
   4146920.31050979 1910724.40745744  848193.24836602 2372024.23805031
   2684476.99801329 1899690.59450881  650881.74415845  614598.84539525
   2861494.3158241  1089035.80643894 2485688.55994167 1906431.05443408]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
    mfi_values = ta.mfi(

tests/unit/test_indicators.py::TestCipherB::test_cipher_b_with_sample_data
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/vumanchu.py:1787: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '[4432629.86534331 1403732.51594373  628105.45360131 2655490.31181365
   2349696.75292839 2022919.74834701 4583784.62708982 4257227.78035521
    699190.519711   2061603.10686223 1816580.62909693 3250677.44735236
   2475150.17094668 1169377.05213389 4838458.55159116 2734374.54463417
   3601132.44592941 4634860.80563388  488285.90017381 3506486.20943444
   3791775.20096714 2385297.4620692  3132278.58627999  837952.8208762
    856890.99766105 4247865.73673253 3647522.30138694 2487075.385127
   2224125.58990618 3266516.72622503 3737414.10114144 1992816.77129
   3574516.80052259 1374881.683974   1805281.57181063 1649581.47547409
    770375.72290558  929039.81996462 1659437.92422999 4281528.49628362
   1778629.32795352 2625065.94788812 4036718.7907664  3152670.81557404
   2285251.27685897 3975116.42891171 3864210.61136531]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
    mfi_values = ta.mfi(

tests/unit/test_indicators.py::TestVuManChuIndicators::test_calculate_all_indicators
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/vumanchu.py:1787: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '[4540088.30242351 3088684.22861547  598651.27881087  762962.26853423
   4557663.51197825 4800720.80757268 1090584.17061621 1741638.52084147
   2171682.88252891 4271898.72448015 4051997.67529464 1777906.97942354
   4581652.314464    796854.2876836  2779450.58769346 2316934.71085982
   2904986.36458548  772028.54285128 4742936.14582629 4120042.02136338
   3841103.47502396 3217613.3231071  2294177.82579852 3411965.49299168
   2890135.02196072 1212033.26826855 2615214.60218363 3846808.73914306
   2389187.65479573 1191055.78757022 4432498.32376072 3140441.71092706
   4036329.07462891 2115768.67990998 3819808.91595235 2689375.70048757
    793608.17983425 1793039.54228534 2823256.12108044 3358841.61588781
   4684421.78398779 1151693.89383293  696672.57290947 2490566.70831118
   1367760.39684452 4671695.58979591 2070091.43366172 1555623.40134545
   5026669.64916591  555396.92458893  576065.74128476 1198174.32273622
   4323703.69237639 4905343.84201285 1913928.21677974  782624.18737039]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
    mfi_values = ta.mfi(

tests/unit/test_indicators.py::TestVuManChuIndicators::test_calculate_all_indicators
  /Users/angel/Documents/Projects/cursorprod/bot/indicators/vumanchu.py:1787: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '[3083457.18908403 1479438.08886707  501670.61648524 4648452.15105622
   2408797.42960045  672730.53281507 1256545.40471931 3500530.55234074
   2371733.73759531 1896661.55815651 1773530.14369147 3595952.88929069
   3098818.05647753 3802474.70809385  691125.18928798  715986.55529617
   1197581.3927644  1989375.88059847 2428864.82004223 3204350.58185483
    616239.84299753 2944018.90319003 4916166.71904509 4217034.78412964
   3356549.37417137 3302660.03964494 1756786.94897028  894974.04587333
   1344627.70759075 1635550.35452531 4200385.6213493  2022394.387141
   4124215.27861107 3648746.82313162 4776871.16118927 2494995.24083646
   4498095.21755338 4174940.47020753 4366653.32625597 1643492.37892678
   3561549.70636648 1045230.7359239  1287823.3310536 ]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
    mfi_values = ta.mfi(

tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_analyze_crypto_nasdaq_correlation_success
tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_analyze_crypto_nasdaq_correlation_negative
tests/unit/test_market_context.py::TestMarketContextAnalyzerIntegration::test_full_correlation_analysis_workflow
tests/unit/test_market_context.py::TestMarketContextAnalyzerIntegration::test_comprehensive_market_analysis
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:212: DeprecationWarning: In future, it will be an error for 'np.bool_' scalars to be interpreted as an index
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)

tests/unit/test_omnisearch_client.py: 12 warnings
  /Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py:793: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    async with self._session.get(
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_omnisearch_client.py::TestOmniSearchClientIntegration::test_full_search_workflow
  /Users/angel/Documents/Projects/cursorprod/bot/mcp/omnisearch_client.py:314: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    async with self._session.get(
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_order_manager.py: 29 warnings
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/pydantic/main.py:1309: PydanticDeprecatedSince20: The `copy` method is deprecated; use `model_copy` instead. See the docstring of `BaseModel.copy` for details about how to handle `include` and `exclude`. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(

tests/unit/test_order_manager.py::TestOrderManager::test_order_timeout_monitoring
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestOrderManager.test_order_timeout_monitoring' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_order_manager.py::TestOrderManager::test_order_timeout_monitoring
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestOrderManager.test_order_timeout_monitoring of <tests.unit.test_order_manager.TestOrderManager testMethod=test_order_timeout_monitoring>>)
    return self.run(*args, **kwds)

tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_concurrent_balance_operations
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/_pytest/threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-34 (execute_trade)

  Traceback (most recent call last):
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/angel/Documents/Projects/cursorprod/tests/unit/test_paper_trading_balance.py", line 516, in execute_trade
      action = TradeAction("LONG", 1, 1.0, 0.5, "Concurrent test")
  TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given

  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_concurrent_balance_operations
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/_pytest/threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-35 (execute_trade)

  Traceback (most recent call last):
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/angel/Documents/Projects/cursorprod/tests/unit/test_paper_trading_balance.py", line 516, in execute_trade
      action = TradeAction("LONG", 1, 1.0, 0.5, "Concurrent test")
  TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given

  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_concurrent_balance_operations
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/_pytest/threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-32 (execute_trade)

  Traceback (most recent call last):
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/angel/Documents/Projects/cursorprod/tests/unit/test_paper_trading_balance.py", line 516, in execute_trade
      action = TradeAction("LONG", 1, 1.0, 0.5, "Concurrent test")
  TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given

  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_concurrent_balance_operations
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/_pytest/threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-33 (execute_trade)

  Traceback (most recent call last):
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/angel/Documents/Projects/cursorprod/tests/unit/test_paper_trading_balance.py", line 516, in execute_trade
      action = TradeAction("LONG", 1, 1.0, 0.5, "Concurrent test")
  TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given

  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_concurrent_balance_operations
  /Users/angel/Library/Caches/pypoetry/virtualenvs/ai-trading-bot-4Xh8djmJ-py3.13/lib/python3.13/site-packages/_pytest/threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-36 (execute_trade)

  Traceback (most recent call last):
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/angel/Documents/Projects/cursorprod/tests/unit/test_paper_trading_balance.py", line 516, in execute_trade
      action = TradeAction("LONG", 1, 1.0, 0.5, "Concurrent test")
  TypeError: BaseModel.__init__() takes 1 positional argument but 6 were given

  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_order_lifecycle
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestPositionOrderIntegration.test_order_lifecycle' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_order_lifecycle
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestPositionOrderIntegration.test_order_lifecycle of <tests.unit.test_position_order_integration.TestPositionOrderIntegration testMethod=test_order_lifecycle>>)
    return self.run(*args, **kwds)

tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_order_manager_initialization
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestPositionOrderIntegration.test_order_manager_initialization' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_order_manager_initialization
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestPositionOrderIntegration.test_order_manager_initialization of <tests.unit.test_position_order_integration.TestPositionOrderIntegration testMethod=test_order_manager_initialization>>)
    return self.run(*args, **kwds)

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_async_indicator_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestWebSocketPerformance.test_async_indicator_performance' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_async_indicator_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestWebSocketPerformance.test_async_indicator_performance of <tests.unit.test_websocket_performance.TestWebSocketPerformance testMethod=test_async_indicator_performance>>)
    return self.run(*args, **kwds)

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_bluefin_websocket_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestWebSocketPerformance.test_bluefin_websocket_performance' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_bluefin_websocket_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestWebSocketPerformance.test_bluefin_websocket_performance of <tests.unit.test_websocket_performance.TestWebSocketPerformance testMethod=test_bluefin_websocket_performance>>)
    return self.run(*args, **kwds)

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_concurrent_processing
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestWebSocketPerformance.test_concurrent_processing' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_concurrent_processing
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestWebSocketPerformance.test_concurrent_processing of <tests.unit.test_websocket_performance.TestWebSocketPerformance testMethod=test_concurrent_processing>>)
    return self.run(*args, **kwds)

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_message_queue_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestWebSocketPerformance.test_message_queue_performance' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_message_queue_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestWebSocketPerformance.test_message_queue_performance of <tests.unit.test_websocket_performance.TestWebSocketPerformance testMethod=test_message_queue_performance>>)
    return self.run(*args, **kwds)

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_subscriber_notification_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestWebSocketPerformance.test_subscriber_notification_performance' was never awaited
    if method() is not None:
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/unit/test_websocket_performance.py::TestWebSocketPerformance::test_subscriber_notification_performance
  /opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestWebSocketPerformance.test_subscriber_notification_performance of <tests.unit.test_websocket_performance.TestWebSocketPerformance testMethod=test_subscriber_notification_performance>>)
    return self.run(*args, **kwds)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR tests/unit/test_web_search_formatter.py::TestWebSearchFormatterIntegration::test_complete_correlation_formatting_workflow
ERROR tests/unit/test_web_search_formatter.py::TestWebSearchFormatterIntegration::test_comprehensive_market_context_workflow
FAILED tests/unit/test_centralized_logging.py::TestSecurityFilter::test_api_key_redaction
FAILED tests/unit/test_centralized_logging.py::TestSecurityFilter::test_log_record_filtering
FAILED tests/unit/test_dominance.py::TestDominanceDataProvider::test_update_loop
FAILED tests/unit/test_exchange_factory.py::TestExchangeFactory::test_create_bluefin_exchange
FAILED tests/unit/test_exchange_factory.py::TestExchangeFactory::test_bluefin_uses_settings_private_key
FAILED tests/unit/test_exchange_factory.py::TestExchangeFactory::test_logging_coinbase_creation
FAILED tests/unit/test_exchange_factory.py::TestExchangeFactory::test_logging_bluefin_creation
FAILED tests/unit/test_exchange_factory.py::TestExchangeFactory::test_bluefin_no_private_key_provided
FAILED tests/unit/test_financial_sentiment.py::TestFinancialSentimentService::test_calculate_correlation_score_neutral
FAILED tests/unit/test_financial_sentiment.py::TestFinancialSentimentServiceIntegration::test_full_analysis_workflow_bearish
FAILED tests/unit/test_indicators.py::TestCipherA::test_cipher_a_initialization
FAILED tests/unit/test_market_context.py::TestMarketRegime::test_market_regime_creation
FAILED tests/unit/test_market_context.py::TestMomentumAlignment::test_momentum_alignment_creation
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_analyze_crypto_nasdaq_correlation_error_handling
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_assess_risk_sentiment_extreme_fear
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_calculate_momentum_alignment_negative
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_calculate_momentum_alignment_error_handling
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_generate_context_summary
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_determine_momentum_regime
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzer::test_analyze_cross_asset_momentum_flow
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzerIntegration::test_full_regime_detection_workflow
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzerIntegration::test_comprehensive_market_analysis
FAILED tests/unit/test_market_context.py::TestMarketContextAnalyzerIntegration::test_error_resilience_comprehensive
FAILED tests/unit/test_market_making_integration.py::TestMarketMakingIntegrator::test_initialize_without_market_making
FAILED tests/unit/test_market_making_performance_monitor.py::TestMarketMakingPerformanceMonitor::test_check_performance_alerts
FAILED tests/unit/test_market_making_performance_monitor.py::TestMarketMakingPerformanceMonitor::test_completed_trade_detection
FAILED tests/unit/test_market_making_performance_monitor.py::TestMarketMakingPerformanceMonitor::test_get_performance_metrics
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_disconnect
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_search_financial_news_api_call
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_search_crypto_sentiment_success
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_search_nasdaq_sentiment_success
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_search_market_correlation_success
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClient::test_search_market_correlation_percentage_value
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClientIntegration::test_full_search_workflow
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClientIntegration::test_sentiment_analysis_workflow
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClientIntegration::test_correlation_analysis_workflow
FAILED tests/unit/test_omnisearch_client.py::TestOmniSearchClientIntegration::test_caching_across_requests
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_cancel_nonexistent_order
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_cancel_order
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_create_market_order
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_create_order
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_create_order_with_timeout
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_get_all_orders
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_get_orders_by_symbol
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_get_pending_orders
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_order_cleanup
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_order_history_tracking
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_order_manager_initialization
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_order_persistence
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_order_statistics
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_partial_fill_handling
FAILED tests/unit/test_order_manager.py::TestOrderManager::test_update_order_status
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_margin_calculation_accuracy
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_fee_deduction_accuracy
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_position_closing_balance_reconciliation
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_position_reversal_balance_handling
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_futures_contract_balance_calculations
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_performance_metrics_accuracy
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_trade_lifecycle_balance_integrity
FAILED tests/unit/test_paper_trading_balance.py::TestPaperTradingBalance::test_edge_case_balance_scenarios
FAILED tests/unit/test_performance_optimization.py::TestLLMPerformanceOptimization::test_cache_key_generation_similarity
FAILED tests/unit/test_performance_optimization.py::TestLLMPerformanceOptimization::test_end_to_end_performance_optimization
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_calculate_unrealized_pnl_long
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_calculate_unrealized_pnl_nonexistent
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_calculate_unrealized_pnl_short
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_close_nonexistent_position
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_close_position
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_create_position
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_all_positions
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_net_position_value
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_nonexistent_position
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_position
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_position_count
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_positions_by_side
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_get_total_exposure
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_opposite_side_position_netting
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_position_history_tracking
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_position_persistence
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_position_risk_metrics
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_position_validation
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_update_position_size
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_update_position_size_reduction
FAILED tests/unit/test_position_manager.py::TestPositionManager::test_update_unrealized_pnl
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_position_close_scenario
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_position_pnl_calculation
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_position_update_from_order
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_risk_evaluation_with_positions
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_risk_manager_integration
FAILED tests/unit/test_position_order_integration.py::TestPositionOrderIntegration::test_state_persistence
FAILED tests/unit/test_position_order_integration.py::TestAsyncOrderManagerIntegration::test_async_order_timeout
FAILED tests/unit/test_risk_manager.py::TestTradingCircuitBreaker::test_circuit_breaker_initialization
FAILED tests/unit/test_risk_manager.py::TestTradingCircuitBreaker::test_circuit_breaker_old_failures_ignored
FAILED tests/unit/test_risk_manager.py::TestTradingCircuitBreaker::test_circuit_breaker_reset
FAILED tests/unit/test_risk_manager.py::TestTradingCircuitBreaker::test_circuit_breaker_single_failure
FAILED tests/unit/test_risk_manager.py::TestTradingCircuitBreaker::test_circuit_breaker_threshold_exceeded
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_balance_validator_component
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_circuit_breaker_component
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_daily_pnl_tracking
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_emergency_stop_component
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_evaluate_risk_basic
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_risk_attributes
FAILED tests/unit/test_risk_manager.py::TestRiskManager::test_risk_manager_initialization
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatter::test_format_news_results_basic
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatter::test_format_correlation_analysis_basic
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatter::test_format_correlation_analysis_with_rolling
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatter::test_format_market_context_comprehensive
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatter::test_generate_correlation_implications
FAILED tests/unit/test_web_search_formatter.py::TestWebSearchFormatterIntegration::test_token_optimization_workflow
=========== 108 failed, 429 passed, 164 warnings, 2 errors in 4.59s ============
